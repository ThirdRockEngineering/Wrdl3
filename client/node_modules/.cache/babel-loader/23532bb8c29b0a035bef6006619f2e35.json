{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\n\nvar toCidAndPath = require('ipfs-core-utils/to-cid-and-path');\n\nvar utils = require('../../utils.js');\n\nfunction createResolve(_ref) {\n  let {\n    repo,\n    codecs,\n    preload\n  } = _ref;\n\n  async function dagResolve(ipfsPath) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      cid\n    } = toCidAndPath.toCidAndPath(ipfsPath);\n\n    if (options.preload !== false) {\n      preload(cid);\n    }\n\n    return utils.resolvePath(repo, codecs, ipfsPath, options);\n  }\n\n  return withTimeoutOption.withTimeoutOption(dagResolve);\n}\n\nexports.createResolve = createResolve;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-core/cjs/src/components/dag/resolve.js"],"names":["Object","defineProperty","exports","value","withTimeoutOption","require","toCidAndPath","utils","createResolve","repo","codecs","preload","dagResolve","ipfsPath","options","cid","resolvePath"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,iBAAiB,GAAGC,OAAO,CAAC,qCAAD,CAA/B;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,iCAAD,CAA1B;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,gBAAD,CAAnB;;AAEA,SAASG,aAAT,OAAgD;AAAA,MAAzB;AAACC,IAAAA,IAAD;AAAOC,IAAAA,MAAP;AAAeC,IAAAA;AAAf,GAAyB;;AAC9C,iBAAeC,UAAf,CAA0BC,QAA1B,EAAkD;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAChD,UAAM;AAACC,MAAAA;AAAD,QAAQT,YAAY,CAACA,YAAb,CAA0BO,QAA1B,CAAd;;AACA,QAAIC,OAAO,CAACH,OAAR,KAAoB,KAAxB,EAA+B;AAC7BA,MAAAA,OAAO,CAACI,GAAD,CAAP;AACD;;AACD,WAAOR,KAAK,CAACS,WAAN,CAAkBP,IAAlB,EAAwBC,MAAxB,EAAgCG,QAAhC,EAA0CC,OAA1C,CAAP;AACD;;AACD,SAAOV,iBAAiB,CAACA,iBAAlB,CAAoCQ,UAApC,CAAP;AACD;;AAEDV,OAAO,CAACM,aAAR,GAAwBA,aAAxB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\nvar toCidAndPath = require('ipfs-core-utils/to-cid-and-path');\nvar utils = require('../../utils.js');\n\nfunction createResolve({repo, codecs, preload}) {\n  async function dagResolve(ipfsPath, options = {}) {\n    const {cid} = toCidAndPath.toCidAndPath(ipfsPath);\n    if (options.preload !== false) {\n      preload(cid);\n    }\n    return utils.resolvePath(repo, codecs, ipfsPath, options);\n  }\n  return withTimeoutOption.withTimeoutOption(dagResolve);\n}\n\nexports.createResolve = createResolve;\n"]},"metadata":{},"sourceType":"script"}