{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar dagPB = require('@ipld/dag-pb');\n\nvar sha2 = require('multiformats/hashes/sha2');\n\nvar ipfsUnixfs = require('ipfs-unixfs');\n\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\n\nvar cid = require('multiformats/cid');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar dagPB__namespace = /*#__PURE__*/_interopNamespace(dagPB);\n\nfunction createNew(_ref) {\n  let {\n    repo,\n    preload\n  } = _ref;\n\n  async function _new() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let data;\n\n    if (options.template) {\n      if (options.template === 'unixfs-dir') {\n        data = new ipfsUnixfs.UnixFS({\n          type: 'directory'\n        }).marshal();\n      } else {\n        throw new Error('unknown template');\n      }\n    }\n\n    const buf = dagPB__namespace.encode({\n      Data: data,\n      Links: []\n    });\n    const hash = await sha2.sha256.digest(buf);\n    const cid$1 = cid.CID.createV0(hash);\n    await repo.blocks.put(cid$1, buf, {\n      signal: options.signal\n    });\n\n    if (options.preload !== false) {\n      preload(cid$1);\n    }\n\n    return cid$1;\n  }\n\n  return withTimeoutOption.withTimeoutOption(_new);\n}\n\nexports.createNew = createNew;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-core/cjs/src/components/object/new.js"],"names":["Object","defineProperty","exports","value","dagPB","require","sha2","ipfsUnixfs","withTimeoutOption","cid","_interopNamespace","e","__esModule","n","create","keys","forEach","k","d","getOwnPropertyDescriptor","get","enumerable","freeze","dagPB__namespace","createNew","repo","preload","_new","options","data","template","UnixFS","type","marshal","Error","buf","encode","Data","Links","hash","sha256","digest","cid$1","CID","createV0","blocks","put","signal"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar dagPB = require('@ipld/dag-pb');\nvar sha2 = require('multiformats/hashes/sha2');\nvar ipfsUnixfs = require('ipfs-unixfs');\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\nvar cid = require('multiformats/cid');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar dagPB__namespace = /*#__PURE__*/_interopNamespace(dagPB);\n\nfunction createNew({repo, preload}) {\n  async function _new(options = {}) {\n    let data;\n    if (options.template) {\n      if (options.template === 'unixfs-dir') {\n        data = new ipfsUnixfs.UnixFS({ type: 'directory' }).marshal();\n      } else {\n        throw new Error('unknown template');\n      }\n    }\n    const buf = dagPB__namespace.encode({\n      Data: data,\n      Links: []\n    });\n    const hash = await sha2.sha256.digest(buf);\n    const cid$1 = cid.CID.createV0(hash);\n    await repo.blocks.put(cid$1, buf, { signal: options.signal });\n    if (options.preload !== false) {\n      preload(cid$1);\n    }\n    return cid$1;\n  }\n  return withTimeoutOption.withTimeoutOption(_new);\n}\n\nexports.createNew = createNew;\n"]},"metadata":{},"sourceType":"script"}