{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar utils = require('./utils.js');\n\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\n\nfunction createRm(_ref) {\n  let {\n    repo\n  } = _ref;\n\n  async function rm(multiaddr) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!utils.isValidMultiaddr(multiaddr)) {\n      throw new Error(`${multiaddr} is not a valid Multiaddr`);\n    }\n\n    const config = await repo.config.getAll(options);\n    config.Bootstrap = (config.Bootstrap || []).filter(ma => ma.toString() !== multiaddr.toString());\n    await repo.config.replace(config);\n    return {\n      Peers: [multiaddr]\n    };\n  }\n\n  return withTimeoutOption.withTimeoutOption(rm);\n}\n\nexports.createRm = createRm;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-core/cjs/src/components/bootstrap/rm.js"],"names":["Object","defineProperty","exports","value","utils","require","withTimeoutOption","createRm","repo","rm","multiaddr","options","isValidMultiaddr","Error","config","getAll","Bootstrap","filter","ma","toString","replace","Peers"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,YAAD,CAAnB;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,qCAAD,CAA/B;;AAEA,SAASE,QAAT,OAA0B;AAAA,MAAR;AAACC,IAAAA;AAAD,GAAQ;;AACxB,iBAAeC,EAAf,CAAkBC,SAAlB,EAA2C;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AACzC,QAAI,CAACP,KAAK,CAACQ,gBAAN,CAAuBF,SAAvB,CAAL,EAAwC;AACtC,YAAM,IAAIG,KAAJ,CAAW,GAAGH,SAAW,2BAAzB,CAAN;AACD;;AACD,UAAMI,MAAM,GAAG,MAAMN,IAAI,CAACM,MAAL,CAAYC,MAAZ,CAAmBJ,OAAnB,CAArB;AACAG,IAAAA,MAAM,CAACE,SAAP,GAAmB,CAACF,MAAM,CAACE,SAAP,IAAoB,EAArB,EAAyBC,MAAzB,CAAgCC,EAAE,IAAIA,EAAE,CAACC,QAAH,OAAkBT,SAAS,CAACS,QAAV,EAAxD,CAAnB;AACA,UAAMX,IAAI,CAACM,MAAL,CAAYM,OAAZ,CAAoBN,MAApB,CAAN;AACA,WAAO;AAAEO,MAAAA,KAAK,EAAE,CAACX,SAAD;AAAT,KAAP;AACD;;AACD,SAAOJ,iBAAiB,CAACA,iBAAlB,CAAoCG,EAApC,CAAP;AACD;;AAEDP,OAAO,CAACK,QAAR,GAAmBA,QAAnB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('./utils.js');\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\n\nfunction createRm({repo}) {\n  async function rm(multiaddr, options = {}) {\n    if (!utils.isValidMultiaddr(multiaddr)) {\n      throw new Error(`${ multiaddr } is not a valid Multiaddr`);\n    }\n    const config = await repo.config.getAll(options);\n    config.Bootstrap = (config.Bootstrap || []).filter(ma => ma.toString() !== multiaddr.toString());\n    await repo.config.replace(config);\n    return { Peers: [multiaddr] };\n  }\n  return withTimeoutOption.withTimeoutOption(rm);\n}\n\nexports.createRm = createRm;\n"]},"metadata":{},"sourceType":"script"}