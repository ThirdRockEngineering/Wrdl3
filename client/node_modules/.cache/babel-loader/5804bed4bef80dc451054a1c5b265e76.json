{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar debug = require('debug');\n\nvar utils = require('../utils.js');\n\nvar errors = require('../errors.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nconst log = debug__default[\"default\"]('ipfs:repo:migrator:repo:init');\n\nasync function isRepoInitialized(backends) {\n  if (!backends) {\n    throw new errors.MissingRepoOptionsError('Please pass repo options when trying to open a repo');\n  }\n\n  const root = backends.root;\n\n  try {\n    await root.open();\n    const versionCheck = await root.has(utils.VERSION_KEY);\n    const configCheck = await root.has(utils.CONFIG_KEY);\n\n    if (!versionCheck || !configCheck) {\n      log(`Version entry present: ${versionCheck}`);\n      log(`Config entry present: ${configCheck}`);\n      return false;\n    }\n\n    return true;\n  } catch (e) {\n    log('While checking if repo is initialized error was thrown: ' + e.message);\n    return false;\n  } finally {\n    if (root !== undefined) {\n      try {\n        await root.close();\n      } catch {}\n    }\n  }\n}\n\nexports.isRepoInitialized = isRepoInitialized;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-repo-migrations/cjs/src/repo/init.js"],"names":["Object","defineProperty","exports","value","debug","require","utils","errors","_interopDefaultLegacy","e","debug__default","log","isRepoInitialized","backends","MissingRepoOptionsError","root","open","versionCheck","has","VERSION_KEY","configCheck","CONFIG_KEY","message","undefined","close"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,aAAD,CAAnB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,cAAD,CAApB;;AAEA,SAASG,qBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAOA,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAlB,IAA8B,aAAaA,CAA3C,GAA+CA,CAA/C,GAAmD;AAAE,eAAWA;AAAb,GAA1D;AAA6E;;AAElH,IAAIC,cAAc,GAAG,aAAaF,qBAAqB,CAACJ,KAAD,CAAvD;;AAEA,MAAMO,GAAG,GAAGD,cAAc,CAAC,SAAD,CAAd,CAA0B,8BAA1B,CAAZ;;AACA,eAAeE,iBAAf,CAAiCC,QAAjC,EAA2C;AACzC,MAAI,CAACA,QAAL,EAAe;AACb,UAAM,IAAIN,MAAM,CAACO,uBAAX,CAAmC,qDAAnC,CAAN;AACD;;AACD,QAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAtB;;AACA,MAAI;AACF,UAAMA,IAAI,CAACC,IAAL,EAAN;AACA,UAAMC,YAAY,GAAG,MAAMF,IAAI,CAACG,GAAL,CAASZ,KAAK,CAACa,WAAf,CAA3B;AACA,UAAMC,WAAW,GAAG,MAAML,IAAI,CAACG,GAAL,CAASZ,KAAK,CAACe,UAAf,CAA1B;;AACA,QAAI,CAACJ,YAAD,IAAiB,CAACG,WAAtB,EAAmC;AACjCT,MAAAA,GAAG,CAAE,0BAA0BM,YAAc,EAA1C,CAAH;AACAN,MAAAA,GAAG,CAAE,yBAAyBS,WAAa,EAAxC,CAAH;AACA,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD,GAVD,CAUE,OAAOX,CAAP,EAAU;AACVE,IAAAA,GAAG,CAAC,6DAA6DF,CAAC,CAACa,OAAhE,CAAH;AACA,WAAO,KAAP;AACD,GAbD,SAaU;AACR,QAAIP,IAAI,KAAKQ,SAAb,EAAwB;AACtB,UAAI;AACF,cAAMR,IAAI,CAACS,KAAL,EAAN;AACD,OAFD,CAEE,MAAM,CACP;AACF;AACF;AACF;;AAEDtB,OAAO,CAACU,iBAAR,GAA4BA,iBAA5B","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar debug = require('debug');\nvar utils = require('../utils.js');\nvar errors = require('../errors.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nconst log = debug__default[\"default\"]('ipfs:repo:migrator:repo:init');\nasync function isRepoInitialized(backends) {\n  if (!backends) {\n    throw new errors.MissingRepoOptionsError('Please pass repo options when trying to open a repo');\n  }\n  const root = backends.root;\n  try {\n    await root.open();\n    const versionCheck = await root.has(utils.VERSION_KEY);\n    const configCheck = await root.has(utils.CONFIG_KEY);\n    if (!versionCheck || !configCheck) {\n      log(`Version entry present: ${ versionCheck }`);\n      log(`Config entry present: ${ configCheck }`);\n      return false;\n    }\n    return true;\n  } catch (e) {\n    log('While checking if repo is initialized error was thrown: ' + e.message);\n    return false;\n  } finally {\n    if (root !== undefined) {\n      try {\n        await root.close();\n      } catch {\n      }\n    }\n  }\n}\n\nexports.isRepoInitialized = isRepoInitialized;\n"]},"metadata":{},"sourceType":"script"}