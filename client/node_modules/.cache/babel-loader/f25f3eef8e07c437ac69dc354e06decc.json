{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar entry = require('./entry.js');\n\nvar base58 = require('multiformats/bases/base58');\n\nvar message = require('../message/message.js');\n\nvar trackedMap = require('libp2p/src/metrics/tracked-map.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar trackedMap__default = /*#__PURE__*/_interopDefaultLegacy(trackedMap);\n\nconst WantType = {\n  Block: message.Message.Wantlist.WantType.Block,\n  Have: message.Message.Wantlist.WantType.Have\n};\n\nconst sortBy = (fn, list) => {\n  return Array.prototype.slice.call(list, 0).sort((a, b) => {\n    const aa = fn(a);\n    const bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n};\n\nclass Wantlist {\n  constructor(stats, libp2p) {\n    this.set = libp2p ? trackedMap__default[\"default\"]({\n      system: 'ipfs',\n      component: 'bitswap',\n      metric: 'wantlist',\n      metrics: libp2p.metrics\n    }) : new Map();\n    this._stats = stats;\n  }\n\n  get length() {\n    return this.set.size;\n  }\n\n  add(cid, priority, wantType) {\n    const cidStr = cid.toString(base58.base58btc);\n    const entry$1 = this.set.get(cidStr);\n\n    if (entry$1) {\n      entry$1.inc();\n      entry$1.priority = priority;\n\n      if (entry$1.wantType === WantType.Have && wantType === WantType.Block) {\n        entry$1.wantType = wantType;\n      }\n    } else {\n      this.set.set(cidStr, new entry.WantListEntry(cid, priority, wantType));\n\n      if (this._stats) {\n        this._stats.push(null, 'wantListSize', 1);\n      }\n    }\n  }\n\n  remove(cid) {\n    const cidStr = cid.toString(base58.base58btc);\n    const entry = this.set.get(cidStr);\n\n    if (!entry) {\n      return;\n    }\n\n    entry.dec();\n\n    if (entry.hasRefs()) {\n      return;\n    }\n\n    this.set.delete(cidStr);\n\n    if (this._stats) {\n      this._stats.push(null, 'wantListSize', -1);\n    }\n  }\n\n  removeForce(cidStr) {\n    if (this.set.has(cidStr)) {\n      this.set.delete(cidStr);\n    }\n  }\n\n  forEach(fn) {\n    return this.set.forEach(fn);\n  }\n\n  entries() {\n    return this.set.entries();\n  }\n\n  sortedEntries() {\n    return new Map(sortBy(o => o[1].key, Array.from(this.set.entries())));\n  }\n\n  contains(cid) {\n    const cidStr = cid.toString(base58.base58btc);\n    return this.set.has(cidStr);\n  }\n\n  get(cid) {\n    const cidStr = cid.toString(base58.base58btc);\n    return this.set.get(cidStr);\n  }\n\n}\n\nWantlist.Entry = entry.WantListEntry;\nexports.Wantlist = Wantlist;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-bitswap/cjs/src/wantlist/index.js"],"names":["Object","defineProperty","exports","value","entry","require","base58","message","trackedMap","_interopDefaultLegacy","e","trackedMap__default","WantType","Block","Message","Wantlist","Have","sortBy","fn","list","Array","prototype","slice","call","sort","a","b","aa","bb","constructor","stats","libp2p","set","system","component","metric","metrics","Map","_stats","length","size","add","cid","priority","wantType","cidStr","toString","base58btc","entry$1","get","inc","WantListEntry","push","remove","dec","hasRefs","delete","removeForce","has","forEach","entries","sortedEntries","o","key","from","contains","Entry"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar entry = require('./entry.js');\nvar base58 = require('multiformats/bases/base58');\nvar message = require('../message/message.js');\nvar trackedMap = require('libp2p/src/metrics/tracked-map.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar trackedMap__default = /*#__PURE__*/_interopDefaultLegacy(trackedMap);\n\nconst WantType = {\n  Block: message.Message.Wantlist.WantType.Block,\n  Have: message.Message.Wantlist.WantType.Have\n};\nconst sortBy = (fn, list) => {\n  return Array.prototype.slice.call(list, 0).sort((a, b) => {\n    const aa = fn(a);\n    const bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n};\nclass Wantlist {\n  constructor(stats, libp2p) {\n    this.set = libp2p ? trackedMap__default[\"default\"]({\n      system: 'ipfs',\n      component: 'bitswap',\n      metric: 'wantlist',\n      metrics: libp2p.metrics\n    }) : new Map();\n    this._stats = stats;\n  }\n  get length() {\n    return this.set.size;\n  }\n  add(cid, priority, wantType) {\n    const cidStr = cid.toString(base58.base58btc);\n    const entry$1 = this.set.get(cidStr);\n    if (entry$1) {\n      entry$1.inc();\n      entry$1.priority = priority;\n      if (entry$1.wantType === WantType.Have && wantType === WantType.Block) {\n        entry$1.wantType = wantType;\n      }\n    } else {\n      this.set.set(cidStr, new entry.WantListEntry(cid, priority, wantType));\n      if (this._stats) {\n        this._stats.push(null, 'wantListSize', 1);\n      }\n    }\n  }\n  remove(cid) {\n    const cidStr = cid.toString(base58.base58btc);\n    const entry = this.set.get(cidStr);\n    if (!entry) {\n      return;\n    }\n    entry.dec();\n    if (entry.hasRefs()) {\n      return;\n    }\n    this.set.delete(cidStr);\n    if (this._stats) {\n      this._stats.push(null, 'wantListSize', -1);\n    }\n  }\n  removeForce(cidStr) {\n    if (this.set.has(cidStr)) {\n      this.set.delete(cidStr);\n    }\n  }\n  forEach(fn) {\n    return this.set.forEach(fn);\n  }\n  entries() {\n    return this.set.entries();\n  }\n  sortedEntries() {\n    return new Map(sortBy(o => o[1].key, Array.from(this.set.entries())));\n  }\n  contains(cid) {\n    const cidStr = cid.toString(base58.base58btc);\n    return this.set.has(cidStr);\n  }\n  get(cid) {\n    const cidStr = cid.toString(base58.base58btc);\n    return this.set.get(cidStr);\n  }\n}\nWantlist.Entry = entry.WantListEntry;\n\nexports.Wantlist = Wantlist;\n"]},"metadata":{},"sourceType":"script"}