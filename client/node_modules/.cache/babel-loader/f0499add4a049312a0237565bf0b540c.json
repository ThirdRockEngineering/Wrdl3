{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar mergeOpts = require('merge-options');\n\nvar toMfsPath = require('./utils/to-mfs-path.js');\n\nvar ipfsUnixfsExporter = require('ipfs-unixfs-exporter');\n\nvar debug = require('debug');\n\nvar errCode = require('err-code');\n\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\n\nvar dagPB = require('@ipld/dag-pb');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar mergeOpts__default = /*#__PURE__*/_interopDefaultLegacy(mergeOpts);\n\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nvar dagPB__namespace = /*#__PURE__*/_interopNamespace(dagPB);\n\nconst mergeOptions = mergeOpts__default[\"default\"].bind({\n  ignoreUndefined: true\n});\nconst log = debug__default[\"default\"]('ipfs:mfs:stat');\nconst defaultOptions = {\n  withLocal: false\n};\n\nfunction createStat(context) {\n  async function mfsStat(path) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    options = mergeOptions(defaultOptions, options);\n    log(`Fetching stats for ${path}`);\n    const {\n      type,\n      cid,\n      mfsPath\n    } = await toMfsPath.toMfsPath(context, path, options);\n    const exportPath = type === 'ipfs' && cid ? cid : mfsPath;\n    let file;\n\n    try {\n      file = await ipfsUnixfsExporter.exporter(exportPath, context.repo.blocks);\n    } catch (err) {\n      if (err.code === 'ERR_NOT_FOUND') {\n        throw errCode__default[\"default\"](new Error(`${path} does not exist`), 'ERR_NOT_FOUND');\n      }\n\n      throw err;\n    }\n\n    if (!statters[file.type]) {\n      throw new Error(`Cannot stat codec ${file.cid.code}`);\n    }\n\n    return statters[file.type](file);\n  }\n\n  return withTimeoutOption.withTimeoutOption(mfsStat);\n}\n\nconst statters = {\n  raw: file => {\n    return {\n      cid: file.cid,\n      size: file.node.length,\n      cumulativeSize: file.node.length,\n      blocks: 0,\n      type: 'file',\n      local: undefined,\n      sizeLocal: undefined,\n      withLocality: false\n    };\n  },\n  file: file => {\n    const stat = {\n      cid: file.cid,\n      type: 'file',\n      size: file.unixfs.fileSize(),\n      cumulativeSize: dagPB__namespace.encode(file.node).length + (file.node.Links || []).reduce((acc, curr) => acc + (curr.Tsize || 0), 0),\n      blocks: file.unixfs.blockSizes.length,\n      local: undefined,\n      sizeLocal: undefined,\n      withLocality: false,\n      mode: file.unixfs.mode\n    };\n\n    if (file.unixfs.mtime) {\n      stat.mtime = file.unixfs.mtime;\n    }\n\n    return stat;\n  },\n  directory: file => {\n    const stat = {\n      cid: file.cid,\n      type: 'directory',\n      size: 0,\n      cumulativeSize: dagPB__namespace.encode(file.node).length + (file.node.Links || []).reduce((acc, curr) => acc + (curr.Tsize || 0), 0),\n      blocks: file.node.Links.length,\n      local: undefined,\n      sizeLocal: undefined,\n      withLocality: false,\n      mode: file.unixfs.mode\n    };\n\n    if (file.unixfs.mtime) {\n      stat.mtime = file.unixfs.mtime;\n    }\n\n    return stat;\n  },\n  object: file => {\n    return {\n      cid: file.cid,\n      size: file.node.length,\n      cumulativeSize: file.node.length,\n      type: 'file',\n      blocks: 0,\n      local: undefined,\n      sizeLocal: undefined,\n      withLocality: false\n    };\n  },\n  identity: file => {\n    return {\n      cid: file.cid,\n      size: file.node.length,\n      cumulativeSize: file.node.length,\n      blocks: 0,\n      type: 'file',\n      local: undefined,\n      sizeLocal: undefined,\n      withLocality: false\n    };\n  }\n};\nexports.createStat = createStat;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-core/cjs/src/components/files/stat.js"],"names":["Object","defineProperty","exports","value","mergeOpts","require","toMfsPath","ipfsUnixfsExporter","debug","errCode","withTimeoutOption","dagPB","_interopDefaultLegacy","e","_interopNamespace","__esModule","n","create","keys","forEach","k","d","getOwnPropertyDescriptor","get","enumerable","freeze","mergeOpts__default","debug__default","errCode__default","dagPB__namespace","mergeOptions","bind","ignoreUndefined","log","defaultOptions","withLocal","createStat","context","mfsStat","path","options","type","cid","mfsPath","exportPath","file","exporter","repo","blocks","err","code","Error","statters","raw","size","node","length","cumulativeSize","local","undefined","sizeLocal","withLocality","stat","unixfs","fileSize","encode","Links","reduce","acc","curr","Tsize","blockSizes","mode","mtime","directory","object","identity"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAvB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,wBAAD,CAAvB;;AACA,IAAIE,kBAAkB,GAAGF,OAAO,CAAC,sBAAD,CAAhC;;AACA,IAAIG,KAAK,GAAGH,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAII,OAAO,GAAGJ,OAAO,CAAC,UAAD,CAArB;;AACA,IAAIK,iBAAiB,GAAGL,OAAO,CAAC,qCAAD,CAA/B;;AACA,IAAIM,KAAK,GAAGN,OAAO,CAAC,cAAD,CAAnB;;AAEA,SAASO,qBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAOA,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAlB,IAA8B,aAAaA,CAA3C,GAA+CA,CAA/C,GAAmD;AAAE,eAAWA;AAAb,GAA1D;AAA6E;;AAElH,SAASC,iBAAT,CAA2BD,CAA3B,EAA8B;AAC5B,MAAIA,CAAC,IAAIA,CAAC,CAACE,UAAX,EAAuB,OAAOF,CAAP;AACvB,MAAIG,CAAC,GAAGhB,MAAM,CAACiB,MAAP,CAAc,IAAd,CAAR;;AACA,MAAIJ,CAAJ,EAAO;AACLb,IAAAA,MAAM,CAACkB,IAAP,CAAYL,CAAZ,EAAeM,OAAf,CAAuB,UAAUC,CAAV,EAAa;AAClC,UAAIA,CAAC,KAAK,SAAV,EAAqB;AACnB,YAAIC,CAAC,GAAGrB,MAAM,CAACsB,wBAAP,CAAgCT,CAAhC,EAAmCO,CAAnC,CAAR;AACApB,QAAAA,MAAM,CAACC,cAAP,CAAsBe,CAAtB,EAAyBI,CAAzB,EAA4BC,CAAC,CAACE,GAAF,GAAQF,CAAR,GAAY;AACtCG,UAAAA,UAAU,EAAE,IAD0B;AAEtCD,UAAAA,GAAG,EAAE,YAAY;AAAE,mBAAOV,CAAC,CAACO,CAAD,CAAR;AAAc;AAFK,SAAxC;AAID;AACF,KARD;AASD;;AACDJ,EAAAA,CAAC,CAAC,SAAD,CAAD,GAAeH,CAAf;AACA,SAAOb,MAAM,CAACyB,MAAP,CAAcT,CAAd,CAAP;AACD;;AAED,IAAIU,kBAAkB,GAAG,aAAad,qBAAqB,CAACR,SAAD,CAA3D;;AACA,IAAIuB,cAAc,GAAG,aAAaf,qBAAqB,CAACJ,KAAD,CAAvD;;AACA,IAAIoB,gBAAgB,GAAG,aAAahB,qBAAqB,CAACH,OAAD,CAAzD;;AACA,IAAIoB,gBAAgB,GAAG,aAAaf,iBAAiB,CAACH,KAAD,CAArD;;AAEA,MAAMmB,YAAY,GAAGJ,kBAAkB,CAAC,SAAD,CAAlB,CAA8BK,IAA9B,CAAmC;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CAAnC,CAArB;AACA,MAAMC,GAAG,GAAGN,cAAc,CAAC,SAAD,CAAd,CAA0B,eAA1B,CAAZ;AACA,MAAMO,cAAc,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAvB;;AACA,SAASC,UAAT,CAAoBC,OAApB,EAA6B;AAC3B,iBAAeC,OAAf,CAAuBC,IAAvB,EAA2C;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACzCA,IAAAA,OAAO,GAAGV,YAAY,CAACI,cAAD,EAAiBM,OAAjB,CAAtB;AACAP,IAAAA,GAAG,CAAE,sBAAsBM,IAAM,EAA9B,CAAH;AACA,UAAM;AAACE,MAAAA,IAAD;AAAOC,MAAAA,GAAP;AAAYC,MAAAA;AAAZ,QAAuB,MAAMrC,SAAS,CAACA,SAAV,CAAoB+B,OAApB,EAA6BE,IAA7B,EAAmCC,OAAnC,CAAnC;AACA,UAAMI,UAAU,GAAGH,IAAI,KAAK,MAAT,IAAmBC,GAAnB,GAAyBA,GAAzB,GAA+BC,OAAlD;AACA,QAAIE,IAAJ;;AACA,QAAI;AACFA,MAAAA,IAAI,GAAG,MAAMtC,kBAAkB,CAACuC,QAAnB,CAA4BF,UAA5B,EAAwCP,OAAO,CAACU,IAAR,CAAaC,MAArD,CAAb;AACD,KAFD,CAEE,OAAOC,GAAP,EAAY;AACZ,UAAIA,GAAG,CAACC,IAAJ,KAAa,eAAjB,EAAkC;AAChC,cAAMtB,gBAAgB,CAAC,SAAD,CAAhB,CAA4B,IAAIuB,KAAJ,CAAW,GAAGZ,IAAM,iBAApB,CAA5B,EAAmE,eAAnE,CAAN;AACD;;AACD,YAAMU,GAAN;AACD;;AACD,QAAI,CAACG,QAAQ,CAACP,IAAI,CAACJ,IAAN,CAAb,EAA0B;AACxB,YAAM,IAAIU,KAAJ,CAAW,qBAAqBN,IAAI,CAACH,GAAL,CAASQ,IAAM,EAA/C,CAAN;AACD;;AACD,WAAOE,QAAQ,CAACP,IAAI,CAACJ,IAAN,CAAR,CAAoBI,IAApB,CAAP;AACD;;AACD,SAAOnC,iBAAiB,CAACA,iBAAlB,CAAoC4B,OAApC,CAAP;AACD;;AACD,MAAMc,QAAQ,GAAG;AACfC,EAAAA,GAAG,EAAER,IAAI,IAAI;AACX,WAAO;AACLH,MAAAA,GAAG,EAAEG,IAAI,CAACH,GADL;AAELY,MAAAA,IAAI,EAAET,IAAI,CAACU,IAAL,CAAUC,MAFX;AAGLC,MAAAA,cAAc,EAAEZ,IAAI,CAACU,IAAL,CAAUC,MAHrB;AAILR,MAAAA,MAAM,EAAE,CAJH;AAKLP,MAAAA,IAAI,EAAE,MALD;AAMLiB,MAAAA,KAAK,EAAEC,SANF;AAOLC,MAAAA,SAAS,EAAED,SAPN;AAQLE,MAAAA,YAAY,EAAE;AART,KAAP;AAUD,GAZc;AAafhB,EAAAA,IAAI,EAAEA,IAAI,IAAI;AACZ,UAAMiB,IAAI,GAAG;AACXpB,MAAAA,GAAG,EAAEG,IAAI,CAACH,GADC;AAEXD,MAAAA,IAAI,EAAE,MAFK;AAGXa,MAAAA,IAAI,EAAET,IAAI,CAACkB,MAAL,CAAYC,QAAZ,EAHK;AAIXP,MAAAA,cAAc,EAAE5B,gBAAgB,CAACoC,MAAjB,CAAwBpB,IAAI,CAACU,IAA7B,EAAmCC,MAAnC,GAA4C,CAACX,IAAI,CAACU,IAAL,CAAUW,KAAV,IAAmB,EAApB,EAAwBC,MAAxB,CAA+B,CAACC,GAAD,EAAMC,IAAN,KAAeD,GAAG,IAAIC,IAAI,CAACC,KAAL,IAAc,CAAlB,CAAjD,EAAuE,CAAvE,CAJjD;AAKXtB,MAAAA,MAAM,EAAEH,IAAI,CAACkB,MAAL,CAAYQ,UAAZ,CAAuBf,MALpB;AAMXE,MAAAA,KAAK,EAAEC,SANI;AAOXC,MAAAA,SAAS,EAAED,SAPA;AAQXE,MAAAA,YAAY,EAAE,KARH;AASXW,MAAAA,IAAI,EAAE3B,IAAI,CAACkB,MAAL,CAAYS;AATP,KAAb;;AAWA,QAAI3B,IAAI,CAACkB,MAAL,CAAYU,KAAhB,EAAuB;AACrBX,MAAAA,IAAI,CAACW,KAAL,GAAa5B,IAAI,CAACkB,MAAL,CAAYU,KAAzB;AACD;;AACD,WAAOX,IAAP;AACD,GA7Bc;AA8BfY,EAAAA,SAAS,EAAE7B,IAAI,IAAI;AACjB,UAAMiB,IAAI,GAAG;AACXpB,MAAAA,GAAG,EAAEG,IAAI,CAACH,GADC;AAEXD,MAAAA,IAAI,EAAE,WAFK;AAGXa,MAAAA,IAAI,EAAE,CAHK;AAIXG,MAAAA,cAAc,EAAE5B,gBAAgB,CAACoC,MAAjB,CAAwBpB,IAAI,CAACU,IAA7B,EAAmCC,MAAnC,GAA4C,CAACX,IAAI,CAACU,IAAL,CAAUW,KAAV,IAAmB,EAApB,EAAwBC,MAAxB,CAA+B,CAACC,GAAD,EAAMC,IAAN,KAAeD,GAAG,IAAIC,IAAI,CAACC,KAAL,IAAc,CAAlB,CAAjD,EAAuE,CAAvE,CAJjD;AAKXtB,MAAAA,MAAM,EAAEH,IAAI,CAACU,IAAL,CAAUW,KAAV,CAAgBV,MALb;AAMXE,MAAAA,KAAK,EAAEC,SANI;AAOXC,MAAAA,SAAS,EAAED,SAPA;AAQXE,MAAAA,YAAY,EAAE,KARH;AASXW,MAAAA,IAAI,EAAE3B,IAAI,CAACkB,MAAL,CAAYS;AATP,KAAb;;AAWA,QAAI3B,IAAI,CAACkB,MAAL,CAAYU,KAAhB,EAAuB;AACrBX,MAAAA,IAAI,CAACW,KAAL,GAAa5B,IAAI,CAACkB,MAAL,CAAYU,KAAzB;AACD;;AACD,WAAOX,IAAP;AACD,GA9Cc;AA+Cfa,EAAAA,MAAM,EAAE9B,IAAI,IAAI;AACd,WAAO;AACLH,MAAAA,GAAG,EAAEG,IAAI,CAACH,GADL;AAELY,MAAAA,IAAI,EAAET,IAAI,CAACU,IAAL,CAAUC,MAFX;AAGLC,MAAAA,cAAc,EAAEZ,IAAI,CAACU,IAAL,CAAUC,MAHrB;AAILf,MAAAA,IAAI,EAAE,MAJD;AAKLO,MAAAA,MAAM,EAAE,CALH;AAMLU,MAAAA,KAAK,EAAEC,SANF;AAOLC,MAAAA,SAAS,EAAED,SAPN;AAQLE,MAAAA,YAAY,EAAE;AART,KAAP;AAUD,GA1Dc;AA2Dfe,EAAAA,QAAQ,EAAE/B,IAAI,IAAI;AAChB,WAAO;AACLH,MAAAA,GAAG,EAAEG,IAAI,CAACH,GADL;AAELY,MAAAA,IAAI,EAAET,IAAI,CAACU,IAAL,CAAUC,MAFX;AAGLC,MAAAA,cAAc,EAAEZ,IAAI,CAACU,IAAL,CAAUC,MAHrB;AAILR,MAAAA,MAAM,EAAE,CAJH;AAKLP,MAAAA,IAAI,EAAE,MALD;AAMLiB,MAAAA,KAAK,EAAEC,SANF;AAOLC,MAAAA,SAAS,EAAED,SAPN;AAQLE,MAAAA,YAAY,EAAE;AART,KAAP;AAUD;AAtEc,CAAjB;AAyEA3D,OAAO,CAACkC,UAAR,GAAqBA,UAArB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar mergeOpts = require('merge-options');\nvar toMfsPath = require('./utils/to-mfs-path.js');\nvar ipfsUnixfsExporter = require('ipfs-unixfs-exporter');\nvar debug = require('debug');\nvar errCode = require('err-code');\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\nvar dagPB = require('@ipld/dag-pb');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar mergeOpts__default = /*#__PURE__*/_interopDefaultLegacy(mergeOpts);\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar dagPB__namespace = /*#__PURE__*/_interopNamespace(dagPB);\n\nconst mergeOptions = mergeOpts__default[\"default\"].bind({ ignoreUndefined: true });\nconst log = debug__default[\"default\"]('ipfs:mfs:stat');\nconst defaultOptions = { withLocal: false };\nfunction createStat(context) {\n  async function mfsStat(path, options = {}) {\n    options = mergeOptions(defaultOptions, options);\n    log(`Fetching stats for ${ path }`);\n    const {type, cid, mfsPath} = await toMfsPath.toMfsPath(context, path, options);\n    const exportPath = type === 'ipfs' && cid ? cid : mfsPath;\n    let file;\n    try {\n      file = await ipfsUnixfsExporter.exporter(exportPath, context.repo.blocks);\n    } catch (err) {\n      if (err.code === 'ERR_NOT_FOUND') {\n        throw errCode__default[\"default\"](new Error(`${ path } does not exist`), 'ERR_NOT_FOUND');\n      }\n      throw err;\n    }\n    if (!statters[file.type]) {\n      throw new Error(`Cannot stat codec ${ file.cid.code }`);\n    }\n    return statters[file.type](file);\n  }\n  return withTimeoutOption.withTimeoutOption(mfsStat);\n}\nconst statters = {\n  raw: file => {\n    return {\n      cid: file.cid,\n      size: file.node.length,\n      cumulativeSize: file.node.length,\n      blocks: 0,\n      type: 'file',\n      local: undefined,\n      sizeLocal: undefined,\n      withLocality: false\n    };\n  },\n  file: file => {\n    const stat = {\n      cid: file.cid,\n      type: 'file',\n      size: file.unixfs.fileSize(),\n      cumulativeSize: dagPB__namespace.encode(file.node).length + (file.node.Links || []).reduce((acc, curr) => acc + (curr.Tsize || 0), 0),\n      blocks: file.unixfs.blockSizes.length,\n      local: undefined,\n      sizeLocal: undefined,\n      withLocality: false,\n      mode: file.unixfs.mode\n    };\n    if (file.unixfs.mtime) {\n      stat.mtime = file.unixfs.mtime;\n    }\n    return stat;\n  },\n  directory: file => {\n    const stat = {\n      cid: file.cid,\n      type: 'directory',\n      size: 0,\n      cumulativeSize: dagPB__namespace.encode(file.node).length + (file.node.Links || []).reduce((acc, curr) => acc + (curr.Tsize || 0), 0),\n      blocks: file.node.Links.length,\n      local: undefined,\n      sizeLocal: undefined,\n      withLocality: false,\n      mode: file.unixfs.mode\n    };\n    if (file.unixfs.mtime) {\n      stat.mtime = file.unixfs.mtime;\n    }\n    return stat;\n  },\n  object: file => {\n    return {\n      cid: file.cid,\n      size: file.node.length,\n      cumulativeSize: file.node.length,\n      type: 'file',\n      blocks: 0,\n      local: undefined,\n      sizeLocal: undefined,\n      withLocality: false\n    };\n  },\n  identity: file => {\n    return {\n      cid: file.cid,\n      size: file.node.length,\n      cumulativeSize: file.node.length,\n      blocks: 0,\n      type: 'file',\n      local: undefined,\n      sizeLocal: undefined,\n      withLocality: false\n    };\n  }\n};\n\nexports.createStat = createStat;\n"]},"metadata":{},"sourceType":"script"}