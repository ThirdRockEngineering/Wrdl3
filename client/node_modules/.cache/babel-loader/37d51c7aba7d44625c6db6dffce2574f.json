{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar index = require('../wantlist/index.js');\n\nvar base58 = require('multiformats/bases/base58');\n\nconst WantlistEntry = index.Wantlist.Entry;\n\nclass BitswapMessageEntry {\n  constructor(cid, priority, wantType, cancel, sendDontHave) {\n    this.entry = new WantlistEntry(cid, priority, wantType);\n    this.cancel = Boolean(cancel);\n    this.sendDontHave = Boolean(sendDontHave);\n  }\n\n  get cid() {\n    return this.entry.cid;\n  }\n\n  set cid(cid) {\n    this.entry.cid = cid;\n  }\n\n  get priority() {\n    return this.entry.priority;\n  }\n\n  set priority(val) {\n    this.entry.priority = val;\n  }\n\n  get wantType() {\n    return this.entry.wantType;\n  }\n\n  set wantType(val) {\n    this.entry.wantType = val;\n  }\n\n  get [Symbol.toStringTag]() {\n    const cidStr = this.cid.toString(base58.base58btc);\n    return `BitswapMessageEntry ${cidStr} <cancel: ${this.cancel}, priority: ${this.priority}>`;\n  }\n\n  equals(other) {\n    return this.cancel === other.cancel && this.sendDontHave === other.sendDontHave && this.wantType === other.wantType && this.entry.equals(other.entry);\n  }\n\n}\n\nexports.BitswapMessageEntry = BitswapMessageEntry;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-bitswap/cjs/src/message/entry.js"],"names":["Object","defineProperty","exports","value","index","require","base58","WantlistEntry","Wantlist","Entry","BitswapMessageEntry","constructor","cid","priority","wantType","cancel","sendDontHave","entry","Boolean","val","Symbol","toStringTag","cidStr","toString","base58btc","equals","other"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,sBAAD,CAAnB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,2BAAD,CAApB;;AAEA,MAAME,aAAa,GAAGH,KAAK,CAACI,QAAN,CAAeC,KAArC;;AACA,MAAMC,mBAAN,CAA0B;AACxBC,EAAAA,WAAW,CAACC,GAAD,EAAMC,QAAN,EAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,YAAlC,EAAgD;AACzD,SAAKC,KAAL,GAAa,IAAIV,aAAJ,CAAkBK,GAAlB,EAAuBC,QAAvB,EAAiCC,QAAjC,CAAb;AACA,SAAKC,MAAL,GAAcG,OAAO,CAACH,MAAD,CAArB;AACA,SAAKC,YAAL,GAAoBE,OAAO,CAACF,YAAD,CAA3B;AACD;;AACM,MAAHJ,GAAG,GAAG;AACR,WAAO,KAAKK,KAAL,CAAWL,GAAlB;AACD;;AACM,MAAHA,GAAG,CAACA,GAAD,EAAM;AACX,SAAKK,KAAL,CAAWL,GAAX,GAAiBA,GAAjB;AACD;;AACW,MAARC,QAAQ,GAAG;AACb,WAAO,KAAKI,KAAL,CAAWJ,QAAlB;AACD;;AACW,MAARA,QAAQ,CAACM,GAAD,EAAM;AAChB,SAAKF,KAAL,CAAWJ,QAAX,GAAsBM,GAAtB;AACD;;AACW,MAARL,QAAQ,GAAG;AACb,WAAO,KAAKG,KAAL,CAAWH,QAAlB;AACD;;AACW,MAARA,QAAQ,CAACK,GAAD,EAAM;AAChB,SAAKF,KAAL,CAAWH,QAAX,GAAsBK,GAAtB;AACD;;AACsB,OAAlBC,MAAM,CAACC,WAAW,IAAI;AACzB,UAAMC,MAAM,GAAG,KAAKV,GAAL,CAASW,QAAT,CAAkBjB,MAAM,CAACkB,SAAzB,CAAf;AACA,WAAQ,uBAAuBF,MAAQ,aAAa,KAAKP,MAAQ,eAAe,KAAKF,QAAU,GAA/F;AACD;;AACDY,EAAAA,MAAM,CAACC,KAAD,EAAQ;AACZ,WAAO,KAAKX,MAAL,KAAgBW,KAAK,CAACX,MAAtB,IAAgC,KAAKC,YAAL,KAAsBU,KAAK,CAACV,YAA5D,IAA4E,KAAKF,QAAL,KAAkBY,KAAK,CAACZ,QAApG,IAAgH,KAAKG,KAAL,CAAWQ,MAAX,CAAkBC,KAAK,CAACT,KAAxB,CAAvH;AACD;;AA9BuB;;AAiC1Bf,OAAO,CAACQ,mBAAR,GAA8BA,mBAA9B","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar index = require('../wantlist/index.js');\nvar base58 = require('multiformats/bases/base58');\n\nconst WantlistEntry = index.Wantlist.Entry;\nclass BitswapMessageEntry {\n  constructor(cid, priority, wantType, cancel, sendDontHave) {\n    this.entry = new WantlistEntry(cid, priority, wantType);\n    this.cancel = Boolean(cancel);\n    this.sendDontHave = Boolean(sendDontHave);\n  }\n  get cid() {\n    return this.entry.cid;\n  }\n  set cid(cid) {\n    this.entry.cid = cid;\n  }\n  get priority() {\n    return this.entry.priority;\n  }\n  set priority(val) {\n    this.entry.priority = val;\n  }\n  get wantType() {\n    return this.entry.wantType;\n  }\n  set wantType(val) {\n    this.entry.wantType = val;\n  }\n  get [Symbol.toStringTag]() {\n    const cidStr = this.cid.toString(base58.base58btc);\n    return `BitswapMessageEntry ${ cidStr } <cancel: ${ this.cancel }, priority: ${ this.priority }>`;\n  }\n  equals(other) {\n    return this.cancel === other.cancel && this.sendDontHave === other.sendDontHave && this.wantType === other.wantType && this.entry.equals(other.entry);\n  }\n}\n\nexports.BitswapMessageEntry = BitswapMessageEntry;\n"]},"metadata":{},"sourceType":"script"}