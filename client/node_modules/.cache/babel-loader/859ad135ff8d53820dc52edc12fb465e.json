{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar ipfsUnixfs = require('ipfs-unixfs');\n\nvar dagPB = require('@ipld/dag-pb');\n\nvar cid = require('multiformats/cid');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar dagPB__namespace = /*#__PURE__*/_interopNamespace(dagPB);\n\nasync function createNode(context, type, options) {\n  const metadata = new ipfsUnixfs.UnixFS({\n    type,\n    mode: options.mode,\n    mtime: options.mtime\n  });\n  const hasher = await context.hashers.getHasher(options.hashAlg);\n  const node = {\n    Data: metadata.marshal(),\n    Links: []\n  };\n  const buf = dagPB__namespace.encode(node);\n  const hash = await hasher.digest(buf);\n  const cid$1 = cid.CID.create(options.cidVersion, dagPB__namespace.code, hash);\n\n  if (options.flush) {\n    await context.repo.blocks.put(cid$1, buf);\n  }\n\n  return {\n    cid: cid$1,\n    node\n  };\n}\n\nexports.createNode = createNode;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-core/cjs/src/components/files/utils/create-node.js"],"names":["Object","defineProperty","exports","value","ipfsUnixfs","require","dagPB","cid","_interopNamespace","e","__esModule","n","create","keys","forEach","k","d","getOwnPropertyDescriptor","get","enumerable","freeze","dagPB__namespace","createNode","context","type","options","metadata","UnixFS","mode","mtime","hasher","hashers","getHasher","hashAlg","node","Data","marshal","Links","buf","encode","hash","digest","cid$1","CID","cidVersion","code","flush","repo","blocks","put"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,aAAD,CAAxB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,cAAD,CAAnB;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,kBAAD,CAAjB;;AAEA,SAASG,iBAAT,CAA2BC,CAA3B,EAA8B;AAC5B,MAAIA,CAAC,IAAIA,CAAC,CAACC,UAAX,EAAuB,OAAOD,CAAP;AACvB,MAAIE,CAAC,GAAGX,MAAM,CAACY,MAAP,CAAc,IAAd,CAAR;;AACA,MAAIH,CAAJ,EAAO;AACLT,IAAAA,MAAM,CAACa,IAAP,CAAYJ,CAAZ,EAAeK,OAAf,CAAuB,UAAUC,CAAV,EAAa;AAClC,UAAIA,CAAC,KAAK,SAAV,EAAqB;AACnB,YAAIC,CAAC,GAAGhB,MAAM,CAACiB,wBAAP,CAAgCR,CAAhC,EAAmCM,CAAnC,CAAR;AACAf,QAAAA,MAAM,CAACC,cAAP,CAAsBU,CAAtB,EAAyBI,CAAzB,EAA4BC,CAAC,CAACE,GAAF,GAAQF,CAAR,GAAY;AACtCG,UAAAA,UAAU,EAAE,IAD0B;AAEtCD,UAAAA,GAAG,EAAE,YAAY;AAAE,mBAAOT,CAAC,CAACM,CAAD,CAAR;AAAc;AAFK,SAAxC;AAID;AACF,KARD;AASD;;AACDJ,EAAAA,CAAC,CAAC,SAAD,CAAD,GAAeF,CAAf;AACA,SAAOT,MAAM,CAACoB,MAAP,CAAcT,CAAd,CAAP;AACD;;AAED,IAAIU,gBAAgB,GAAG,aAAab,iBAAiB,CAACF,KAAD,CAArD;;AAEA,eAAegB,UAAf,CAA0BC,OAA1B,EAAmCC,IAAnC,EAAyCC,OAAzC,EAAkD;AAChD,QAAMC,QAAQ,GAAG,IAAItB,UAAU,CAACuB,MAAf,CAAsB;AACrCH,IAAAA,IADqC;AAErCI,IAAAA,IAAI,EAAEH,OAAO,CAACG,IAFuB;AAGrCC,IAAAA,KAAK,EAAEJ,OAAO,CAACI;AAHsB,GAAtB,CAAjB;AAKA,QAAMC,MAAM,GAAG,MAAMP,OAAO,CAACQ,OAAR,CAAgBC,SAAhB,CAA0BP,OAAO,CAACQ,OAAlC,CAArB;AACA,QAAMC,IAAI,GAAG;AACXC,IAAAA,IAAI,EAAET,QAAQ,CAACU,OAAT,EADK;AAEXC,IAAAA,KAAK,EAAE;AAFI,GAAb;AAIA,QAAMC,GAAG,GAAGjB,gBAAgB,CAACkB,MAAjB,CAAwBL,IAAxB,CAAZ;AACA,QAAMM,IAAI,GAAG,MAAMV,MAAM,CAACW,MAAP,CAAcH,GAAd,CAAnB;AACA,QAAMI,KAAK,GAAGnC,GAAG,CAACoC,GAAJ,CAAQ/B,MAAR,CAAea,OAAO,CAACmB,UAAvB,EAAmCvB,gBAAgB,CAACwB,IAApD,EAA0DL,IAA1D,CAAd;;AACA,MAAIf,OAAO,CAACqB,KAAZ,EAAmB;AACjB,UAAMvB,OAAO,CAACwB,IAAR,CAAaC,MAAb,CAAoBC,GAApB,CAAwBP,KAAxB,EAA+BJ,GAA/B,CAAN;AACD;;AACD,SAAO;AACL/B,IAAAA,GAAG,EAAEmC,KADA;AAELR,IAAAA;AAFK,GAAP;AAID;;AAEDhC,OAAO,CAACoB,UAAR,GAAqBA,UAArB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar ipfsUnixfs = require('ipfs-unixfs');\nvar dagPB = require('@ipld/dag-pb');\nvar cid = require('multiformats/cid');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar dagPB__namespace = /*#__PURE__*/_interopNamespace(dagPB);\n\nasync function createNode(context, type, options) {\n  const metadata = new ipfsUnixfs.UnixFS({\n    type,\n    mode: options.mode,\n    mtime: options.mtime\n  });\n  const hasher = await context.hashers.getHasher(options.hashAlg);\n  const node = {\n    Data: metadata.marshal(),\n    Links: []\n  };\n  const buf = dagPB__namespace.encode(node);\n  const hash = await hasher.digest(buf);\n  const cid$1 = cid.CID.create(options.cidVersion, dagPB__namespace.code, hash);\n  if (options.flush) {\n    await context.repo.blocks.put(cid$1, buf);\n  }\n  return {\n    cid: cid$1,\n    node\n  };\n}\n\nexports.createNode = createNode;\n"]},"metadata":{},"sourceType":"script"}