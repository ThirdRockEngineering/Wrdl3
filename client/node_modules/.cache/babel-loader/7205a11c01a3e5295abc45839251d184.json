{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decode2 = exports.decode1 = exports.decode0 = exports.encode2 = exports.encode1 = exports.encode0 = exports.uint16BEDecode = exports.uint16BEEncode = void 0;\n\nconst BufferList_1 = __importDefault(require(\"bl/BufferList\"));\n\nconst concat_1 = require(\"uint8arrays/concat\");\n\nconst allocUnsafe = len => {\n  if (globalThis.Buffer) {\n    return globalThis.Buffer.allocUnsafe(len);\n  }\n\n  return new Uint8Array(len);\n};\n\nconst uint16BEEncode = (value, target, offset) => {\n  target = target || allocUnsafe(2);\n  new DataView(target.buffer, target.byteOffset, target.byteLength).setUint16(offset, value, false);\n  return target;\n};\n\nexports.uint16BEEncode = uint16BEEncode;\nexports.uint16BEEncode.bytes = 2;\n\nconst uint16BEDecode = data => {\n  if (data.length < 2) throw RangeError('Could not decode int16BE');\n\n  if (data instanceof BufferList_1.default) {\n    return data.readUInt16BE(0);\n  }\n\n  return new DataView(data.buffer, data.byteOffset, data.byteLength).getUint16(0, false);\n};\n\nexports.uint16BEDecode = uint16BEDecode;\nexports.uint16BEDecode.bytes = 2; // Note: IK and XX encoder usage is opposite (XX uses in stages encode0 where IK uses encode1)\n\nfunction encode0(message) {\n  return (0, concat_1.concat)([message.ne, message.ciphertext], message.ne.length + message.ciphertext.length);\n}\n\nexports.encode0 = encode0;\n\nfunction encode1(message) {\n  return (0, concat_1.concat)([message.ne, message.ns, message.ciphertext], message.ne.length + message.ns.length + message.ciphertext.length);\n}\n\nexports.encode1 = encode1;\n\nfunction encode2(message) {\n  return (0, concat_1.concat)([message.ns, message.ciphertext], message.ns.length + message.ciphertext.length);\n}\n\nexports.encode2 = encode2;\n\nfunction decode0(input) {\n  if (input.length < 32) {\n    throw new Error('Cannot decode stage 0 MessageBuffer: length less than 32 bytes.');\n  }\n\n  return {\n    ne: input.slice(0, 32),\n    ciphertext: input.slice(32, input.length),\n    ns: new Uint8Array(0)\n  };\n}\n\nexports.decode0 = decode0;\n\nfunction decode1(input) {\n  if (input.length < 80) {\n    throw new Error('Cannot decode stage 1 MessageBuffer: length less than 80 bytes.');\n  }\n\n  return {\n    ne: input.slice(0, 32),\n    ns: input.slice(32, 80),\n    ciphertext: input.slice(80, input.length)\n  };\n}\n\nexports.decode1 = decode1;\n\nfunction decode2(input) {\n  if (input.length < 48) {\n    throw new Error('Cannot decode stage 2 MessageBuffer: length less than 48 bytes.');\n  }\n\n  return {\n    ne: new Uint8Array(0),\n    ns: input.slice(0, 48),\n    ciphertext: input.slice(48, input.length)\n  };\n}\n\nexports.decode2 = decode2;","map":{"version":3,"mappings":"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","names":["allocUnsafe","len","globalThis","Buffer","Uint8Array","uint16BEEncode","value","target","offset","DataView","buffer","byteOffset","byteLength","setUint16","exports","bytes","uint16BEDecode","data","length","RangeError","BufferList_1","readUInt16BE","getUint16","encode0","message","ne","ciphertext","encode1","ns","encode2","decode0","input","Error","slice","decode1","decode2"],"sourceRoot":"","sources":["../../src/encoder.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}