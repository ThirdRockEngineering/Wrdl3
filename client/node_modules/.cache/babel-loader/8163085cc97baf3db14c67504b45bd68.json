{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar ipfsUnixfsExporter = require('ipfs-unixfs-exporter');\n\nvar utils = require('../utils.js');\n\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\n\nvar cid = require('multiformats/cid');\n\nfunction createCat(_ref) {\n  let {\n    repo,\n    preload\n  } = _ref;\n\n  async function* cat(ipfsPath) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    ipfsPath = utils.normalizeCidPath(ipfsPath);\n\n    if (options.preload !== false) {\n      const pathComponents = ipfsPath.split('/');\n      preload(cid.CID.parse(pathComponents[0]));\n    }\n\n    const file = await ipfsUnixfsExporter.exporter(ipfsPath, repo.blocks, options);\n\n    if (file.type === 'directory') {\n      throw new Error('this dag node is a directory');\n    }\n\n    if (!file.content) {\n      throw new Error('this dag node has no content');\n    }\n\n    yield* file.content(options);\n  }\n\n  return withTimeoutOption.withTimeoutOption(cat);\n}\n\nexports.createCat = createCat;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-core/cjs/src/components/cat.js"],"names":["Object","defineProperty","exports","value","ipfsUnixfsExporter","require","utils","withTimeoutOption","cid","createCat","repo","preload","cat","ipfsPath","options","normalizeCidPath","pathComponents","split","CID","parse","file","exporter","blocks","type","Error","content"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,kBAAkB,GAAGC,OAAO,CAAC,sBAAD,CAAhC;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,aAAD,CAAnB;;AACA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,qCAAD,CAA/B;;AACA,IAAIG,GAAG,GAAGH,OAAO,CAAC,kBAAD,CAAjB;;AAEA,SAASI,SAAT,OAAoC;AAAA,MAAjB;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAiB;;AAClC,kBAAgBC,GAAhB,CAAoBC,QAApB,EAA4C;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAC1CD,IAAAA,QAAQ,GAAGP,KAAK,CAACS,gBAAN,CAAuBF,QAAvB,CAAX;;AACA,QAAIC,OAAO,CAACH,OAAR,KAAoB,KAAxB,EAA+B;AAC7B,YAAMK,cAAc,GAAGH,QAAQ,CAACI,KAAT,CAAe,GAAf,CAAvB;AACAN,MAAAA,OAAO,CAACH,GAAG,CAACU,GAAJ,CAAQC,KAAR,CAAcH,cAAc,CAAC,CAAD,CAA5B,CAAD,CAAP;AACD;;AACD,UAAMI,IAAI,GAAG,MAAMhB,kBAAkB,CAACiB,QAAnB,CAA4BR,QAA5B,EAAsCH,IAAI,CAACY,MAA3C,EAAmDR,OAAnD,CAAnB;;AACA,QAAIM,IAAI,CAACG,IAAL,KAAc,WAAlB,EAA+B;AAC7B,YAAM,IAAIC,KAAJ,CAAU,8BAAV,CAAN;AACD;;AACD,QAAI,CAACJ,IAAI,CAACK,OAAV,EAAmB;AACjB,YAAM,IAAID,KAAJ,CAAU,8BAAV,CAAN;AACD;;AACD,WAAOJ,IAAI,CAACK,OAAL,CAAaX,OAAb,CAAP;AACD;;AACD,SAAOP,iBAAiB,CAACA,iBAAlB,CAAoCK,GAApC,CAAP;AACD;;AAEDV,OAAO,CAACO,SAAR,GAAoBA,SAApB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar ipfsUnixfsExporter = require('ipfs-unixfs-exporter');\nvar utils = require('../utils.js');\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\nvar cid = require('multiformats/cid');\n\nfunction createCat({repo, preload}) {\n  async function* cat(ipfsPath, options = {}) {\n    ipfsPath = utils.normalizeCidPath(ipfsPath);\n    if (options.preload !== false) {\n      const pathComponents = ipfsPath.split('/');\n      preload(cid.CID.parse(pathComponents[0]));\n    }\n    const file = await ipfsUnixfsExporter.exporter(ipfsPath, repo.blocks, options);\n    if (file.type === 'directory') {\n      throw new Error('this dag node is a directory');\n    }\n    if (!file.content) {\n      throw new Error('this dag node has no content');\n    }\n    yield* file.content(options);\n  }\n  return withTimeoutOption.withTimeoutOption(cat);\n}\n\nexports.createCat = createCat;\n"]},"metadata":{},"sourceType":"script"}