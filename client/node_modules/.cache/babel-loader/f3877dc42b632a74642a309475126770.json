{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\n\nvar first = require('it-first');\n\nvar last = require('it-last');\n\nvar utils = require('../../utils.js');\n\nvar errCode = require('err-code');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar first__default = /*#__PURE__*/_interopDefaultLegacy(first);\n\nvar last__default = /*#__PURE__*/_interopDefaultLegacy(last);\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nfunction createGet(_ref) {\n  let {\n    codecs,\n    repo,\n    preload\n  } = _ref;\n\n  const get = async function get(cid) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (options.preload !== false) {\n      preload(cid);\n    }\n\n    if (options.path) {\n      const entry = options.localResolve ? await first__default[\"default\"](utils.resolve(cid, options.path, codecs, repo, options)) : await last__default[\"default\"](utils.resolve(cid, options.path, codecs, repo, options));\n      const result = entry;\n\n      if (!result) {\n        throw errCode__default[\"default\"](new Error('Not found'), 'ERR_NOT_FOUND');\n      }\n\n      return result;\n    }\n\n    const codec = await codecs.getCodec(cid.code);\n    const block = await repo.blocks.get(cid, options);\n    const node = codec.decode(block);\n    return {\n      value: node,\n      remainderPath: ''\n    };\n  };\n\n  return withTimeoutOption.withTimeoutOption(get);\n}\n\nexports.createGet = createGet;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-core/cjs/src/components/dag/get.js"],"names":["Object","defineProperty","exports","value","withTimeoutOption","require","first","last","utils","errCode","_interopDefaultLegacy","e","first__default","last__default","errCode__default","createGet","codecs","repo","preload","get","cid","options","path","entry","localResolve","resolve","result","Error","codec","getCodec","code","block","blocks","node","decode","remainderPath"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,iBAAiB,GAAGC,OAAO,CAAC,qCAAD,CAA/B;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,UAAD,CAAnB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,SAAD,CAAlB;;AACA,IAAIG,KAAK,GAAGH,OAAO,CAAC,gBAAD,CAAnB;;AACA,IAAII,OAAO,GAAGJ,OAAO,CAAC,UAAD,CAArB;;AAEA,SAASK,qBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAOA,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAlB,IAA8B,aAAaA,CAA3C,GAA+CA,CAA/C,GAAmD;AAAE,eAAWA;AAAb,GAA1D;AAA6E;;AAElH,IAAIC,cAAc,GAAG,aAAaF,qBAAqB,CAACJ,KAAD,CAAvD;;AACA,IAAIO,aAAa,GAAG,aAAaH,qBAAqB,CAACH,IAAD,CAAtD;;AACA,IAAIO,gBAAgB,GAAG,aAAaJ,qBAAqB,CAACD,OAAD,CAAzD;;AAEA,SAASM,SAAT,OAA4C;AAAA,MAAzB;AAACC,IAAAA,MAAD;AAASC,IAAAA,IAAT;AAAeC,IAAAA;AAAf,GAAyB;;AAC1C,QAAMC,GAAG,GAAG,eAAeA,GAAf,CAAmBC,GAAnB,EAAsC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAChD,QAAIA,OAAO,CAACH,OAAR,KAAoB,KAAxB,EAA+B;AAC7BA,MAAAA,OAAO,CAACE,GAAD,CAAP;AACD;;AACD,QAAIC,OAAO,CAACC,IAAZ,EAAkB;AAChB,YAAMC,KAAK,GAAGF,OAAO,CAACG,YAAR,GAAuB,MAAMZ,cAAc,CAAC,SAAD,CAAd,CAA0BJ,KAAK,CAACiB,OAAN,CAAcL,GAAd,EAAmBC,OAAO,CAACC,IAA3B,EAAiCN,MAAjC,EAAyCC,IAAzC,EAA+CI,OAA/C,CAA1B,CAA7B,GAAkH,MAAMR,aAAa,CAAC,SAAD,CAAb,CAAyBL,KAAK,CAACiB,OAAN,CAAcL,GAAd,EAAmBC,OAAO,CAACC,IAA3B,EAAiCN,MAAjC,EAAyCC,IAAzC,EAA+CI,OAA/C,CAAzB,CAAtI;AACA,YAAMK,MAAM,GAAGH,KAAf;;AACA,UAAI,CAACG,MAAL,EAAa;AACX,cAAMZ,gBAAgB,CAAC,SAAD,CAAhB,CAA4B,IAAIa,KAAJ,CAAU,WAAV,CAA5B,EAAoD,eAApD,CAAN;AACD;;AACD,aAAOD,MAAP;AACD;;AACD,UAAME,KAAK,GAAG,MAAMZ,MAAM,CAACa,QAAP,CAAgBT,GAAG,CAACU,IAApB,CAApB;AACA,UAAMC,KAAK,GAAG,MAAMd,IAAI,CAACe,MAAL,CAAYb,GAAZ,CAAgBC,GAAhB,EAAqBC,OAArB,CAApB;AACA,UAAMY,IAAI,GAAGL,KAAK,CAACM,MAAN,CAAaH,KAAb,CAAb;AACA,WAAO;AACL5B,MAAAA,KAAK,EAAE8B,IADF;AAELE,MAAAA,aAAa,EAAE;AAFV,KAAP;AAID,GAnBD;;AAoBA,SAAO/B,iBAAiB,CAACA,iBAAlB,CAAoCe,GAApC,CAAP;AACD;;AAEDjB,OAAO,CAACa,SAAR,GAAoBA,SAApB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\nvar first = require('it-first');\nvar last = require('it-last');\nvar utils = require('../../utils.js');\nvar errCode = require('err-code');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar first__default = /*#__PURE__*/_interopDefaultLegacy(first);\nvar last__default = /*#__PURE__*/_interopDefaultLegacy(last);\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nfunction createGet({codecs, repo, preload}) {\n  const get = async function get(cid, options = {}) {\n    if (options.preload !== false) {\n      preload(cid);\n    }\n    if (options.path) {\n      const entry = options.localResolve ? await first__default[\"default\"](utils.resolve(cid, options.path, codecs, repo, options)) : await last__default[\"default\"](utils.resolve(cid, options.path, codecs, repo, options));\n      const result = entry;\n      if (!result) {\n        throw errCode__default[\"default\"](new Error('Not found'), 'ERR_NOT_FOUND');\n      }\n      return result;\n    }\n    const codec = await codecs.getCodec(cid.code);\n    const block = await repo.blocks.get(cid, options);\n    const node = codec.decode(block);\n    return {\n      value: node,\n      remainderPath: ''\n    };\n  };\n  return withTimeoutOption.withTimeoutOption(get);\n}\n\nexports.createGet = createGet;\n"]},"metadata":{},"sourceType":"script"}