{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar debug = require('debug');\n\nvar block = require('multiformats/block');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nconst log = debug__default[\"default\"]('ipfs:repo:utils:walk-dag');\n\nasync function* walkDag(cid, blockstore, loadCodec, options) {\n  try {\n    const bytes = await blockstore.get(cid, options);\n    const codec = await loadCodec(cid.code);\n    const block$1 = block.createUnsafe({\n      bytes,\n      cid,\n      codec\n    });\n\n    for (const [, childCid] of block$1.links()) {\n      yield childCid;\n      yield* walkDag(childCid, blockstore, loadCodec, options);\n    }\n  } catch (err) {\n    log('Could not walk DAG for CID', cid.toString(), err);\n    throw err;\n  }\n}\n\nexports.walkDag = walkDag;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-repo/cjs/src/utils/walk-dag.js"],"names":["Object","defineProperty","exports","value","debug","require","block","_interopDefaultLegacy","e","debug__default","log","walkDag","cid","blockstore","loadCodec","options","bytes","get","codec","code","block$1","createUnsafe","childCid","links","err","toString"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,oBAAD,CAAnB;;AAEA,SAASE,qBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAOA,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAlB,IAA8B,aAAaA,CAA3C,GAA+CA,CAA/C,GAAmD;AAAE,eAAWA;AAAb,GAA1D;AAA6E;;AAElH,IAAIC,cAAc,GAAG,aAAaF,qBAAqB,CAACH,KAAD,CAAvD;;AAEA,MAAMM,GAAG,GAAGD,cAAc,CAAC,SAAD,CAAd,CAA0B,0BAA1B,CAAZ;;AACA,gBAAgBE,OAAhB,CAAwBC,GAAxB,EAA6BC,UAA7B,EAAyCC,SAAzC,EAAoDC,OAApD,EAA6D;AAC3D,MAAI;AACF,UAAMC,KAAK,GAAG,MAAMH,UAAU,CAACI,GAAX,CAAeL,GAAf,EAAoBG,OAApB,CAApB;AACA,UAAMG,KAAK,GAAG,MAAMJ,SAAS,CAACF,GAAG,CAACO,IAAL,CAA7B;AACA,UAAMC,OAAO,GAAGd,KAAK,CAACe,YAAN,CAAmB;AACjCL,MAAAA,KADiC;AAEjCJ,MAAAA,GAFiC;AAGjCM,MAAAA;AAHiC,KAAnB,CAAhB;;AAKA,SAAK,MAAM,GAAGI,QAAH,CAAX,IAA2BF,OAAO,CAACG,KAAR,EAA3B,EAA4C;AAC1C,YAAMD,QAAN;AACA,aAAOX,OAAO,CAACW,QAAD,EAAWT,UAAX,EAAuBC,SAAvB,EAAkCC,OAAlC,CAAd;AACD;AACF,GAZD,CAYE,OAAOS,GAAP,EAAY;AACZd,IAAAA,GAAG,CAAC,4BAAD,EAA+BE,GAAG,CAACa,QAAJ,EAA/B,EAA+CD,GAA/C,CAAH;AACA,UAAMA,GAAN;AACD;AACF;;AAEDtB,OAAO,CAACS,OAAR,GAAkBA,OAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar debug = require('debug');\nvar block = require('multiformats/block');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nconst log = debug__default[\"default\"]('ipfs:repo:utils:walk-dag');\nasync function* walkDag(cid, blockstore, loadCodec, options) {\n  try {\n    const bytes = await blockstore.get(cid, options);\n    const codec = await loadCodec(cid.code);\n    const block$1 = block.createUnsafe({\n      bytes,\n      cid,\n      codec\n    });\n    for (const [, childCid] of block$1.links()) {\n      yield childCid;\n      yield* walkDag(childCid, blockstore, loadCodec, options);\n    }\n  } catch (err) {\n    log('Could not walk DAG for CID', cid.toString(), err);\n    throw err;\n  }\n}\n\nexports.walkDag = walkDag;\n"]},"metadata":{},"sourceType":"script"}