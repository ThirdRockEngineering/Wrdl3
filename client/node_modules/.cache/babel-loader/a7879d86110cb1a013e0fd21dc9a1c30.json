{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar index = require('./components/index.js');\n\nvar crypto$1 = require('libp2p-crypto');\n\nvar isIpfs = require('is-ipfs');\n\nvar PeerId$1 = require('peer-id');\n\nvar globSourceImport = require('ipfs-utils/src/files/glob-source.js');\n\nvar urlSourceImport = require('ipfs-utils/src/files/url-source.js');\n\nvar cid = require('multiformats/cid');\n\nvar multiaddr = require('multiaddr');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar crypto__default = /*#__PURE__*/_interopDefaultLegacy(crypto$1);\n\nvar isIpfs__default = /*#__PURE__*/_interopDefaultLegacy(isIpfs);\n\nvar PeerId__default = /*#__PURE__*/_interopDefaultLegacy(PeerId$1);\n\nvar globSourceImport__default = /*#__PURE__*/_interopDefaultLegacy(globSourceImport);\n\nvar urlSourceImport__default = /*#__PURE__*/_interopDefaultLegacy(urlSourceImport);\n\nconst create = index.create;\nconst crypto = crypto__default[\"default\"];\nconst isIPFS = isIpfs__default[\"default\"];\nconst PeerId = PeerId__default[\"default\"];\nconst globSource = globSourceImport__default[\"default\"];\nconst urlSource = urlSourceImport__default[\"default\"];\nObject.defineProperty(exports, 'CID', {\n  enumerable: true,\n  get: function () {\n    return cid.CID;\n  }\n});\nObject.defineProperty(exports, 'multiaddr', {\n  enumerable: true,\n  get: function () {\n    return multiaddr.Multiaddr;\n  }\n});\nexports.PeerId = PeerId;\nexports.create = create;\nexports.crypto = crypto;\nexports.globSource = globSource;\nexports.isIPFS = isIPFS;\nexports.urlSource = urlSource;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-core/cjs/src/index.js"],"names":["Object","defineProperty","exports","value","index","require","crypto$1","isIpfs","PeerId$1","globSourceImport","urlSourceImport","cid","multiaddr","_interopDefaultLegacy","e","crypto__default","isIpfs__default","PeerId__default","globSourceImport__default","urlSourceImport__default","create","crypto","isIPFS","PeerId","globSource","urlSource","enumerable","get","CID","Multiaddr"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,uBAAD,CAAnB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,eAAD,CAAtB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,SAAD,CAApB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,SAAD,CAAtB;;AACA,IAAII,gBAAgB,GAAGJ,OAAO,CAAC,qCAAD,CAA9B;;AACA,IAAIK,eAAe,GAAGL,OAAO,CAAC,oCAAD,CAA7B;;AACA,IAAIM,GAAG,GAAGN,OAAO,CAAC,kBAAD,CAAjB;;AACA,IAAIO,SAAS,GAAGP,OAAO,CAAC,WAAD,CAAvB;;AAEA,SAASQ,qBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAOA,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAlB,IAA8B,aAAaA,CAA3C,GAA+CA,CAA/C,GAAmD;AAAE,eAAWA;AAAb,GAA1D;AAA6E;;AAElH,IAAIC,eAAe,GAAG,aAAaF,qBAAqB,CAACP,QAAD,CAAxD;;AACA,IAAIU,eAAe,GAAG,aAAaH,qBAAqB,CAACN,MAAD,CAAxD;;AACA,IAAIU,eAAe,GAAG,aAAaJ,qBAAqB,CAACL,QAAD,CAAxD;;AACA,IAAIU,yBAAyB,GAAG,aAAaL,qBAAqB,CAACJ,gBAAD,CAAlE;;AACA,IAAIU,wBAAwB,GAAG,aAAaN,qBAAqB,CAACH,eAAD,CAAjE;;AAEA,MAAMU,MAAM,GAAGhB,KAAK,CAACgB,MAArB;AACA,MAAMC,MAAM,GAAGN,eAAe,CAAC,SAAD,CAA9B;AACA,MAAMO,MAAM,GAAGN,eAAe,CAAC,SAAD,CAA9B;AACA,MAAMO,MAAM,GAAGN,eAAe,CAAC,SAAD,CAA9B;AACA,MAAMO,UAAU,GAAGN,yBAAyB,CAAC,SAAD,CAA5C;AACA,MAAMO,SAAS,GAAGN,wBAAwB,CAAC,SAAD,CAA1C;AAEAnB,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,KAA/B,EAAsC;AACpCwB,EAAAA,UAAU,EAAE,IADwB;AAEpCC,EAAAA,GAAG,EAAE,YAAY;AAAE,WAAOhB,GAAG,CAACiB,GAAX;AAAiB;AAFA,CAAtC;AAIA5B,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,WAA/B,EAA4C;AAC1CwB,EAAAA,UAAU,EAAE,IAD8B;AAE1CC,EAAAA,GAAG,EAAE,YAAY;AAAE,WAAOf,SAAS,CAACiB,SAAjB;AAA6B;AAFN,CAA5C;AAIA3B,OAAO,CAACqB,MAAR,GAAiBA,MAAjB;AACArB,OAAO,CAACkB,MAAR,GAAiBA,MAAjB;AACAlB,OAAO,CAACmB,MAAR,GAAiBA,MAAjB;AACAnB,OAAO,CAACsB,UAAR,GAAqBA,UAArB;AACAtB,OAAO,CAACoB,MAAR,GAAiBA,MAAjB;AACApB,OAAO,CAACuB,SAAR,GAAoBA,SAApB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar index = require('./components/index.js');\nvar crypto$1 = require('libp2p-crypto');\nvar isIpfs = require('is-ipfs');\nvar PeerId$1 = require('peer-id');\nvar globSourceImport = require('ipfs-utils/src/files/glob-source.js');\nvar urlSourceImport = require('ipfs-utils/src/files/url-source.js');\nvar cid = require('multiformats/cid');\nvar multiaddr = require('multiaddr');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar crypto__default = /*#__PURE__*/_interopDefaultLegacy(crypto$1);\nvar isIpfs__default = /*#__PURE__*/_interopDefaultLegacy(isIpfs);\nvar PeerId__default = /*#__PURE__*/_interopDefaultLegacy(PeerId$1);\nvar globSourceImport__default = /*#__PURE__*/_interopDefaultLegacy(globSourceImport);\nvar urlSourceImport__default = /*#__PURE__*/_interopDefaultLegacy(urlSourceImport);\n\nconst create = index.create;\nconst crypto = crypto__default[\"default\"];\nconst isIPFS = isIpfs__default[\"default\"];\nconst PeerId = PeerId__default[\"default\"];\nconst globSource = globSourceImport__default[\"default\"];\nconst urlSource = urlSourceImport__default[\"default\"];\n\nObject.defineProperty(exports, 'CID', {\n  enumerable: true,\n  get: function () { return cid.CID; }\n});\nObject.defineProperty(exports, 'multiaddr', {\n  enumerable: true,\n  get: function () { return multiaddr.Multiaddr; }\n});\nexports.PeerId = PeerId;\nexports.create = create;\nexports.crypto = crypto;\nexports.globSource = globSource;\nexports.isIPFS = isIPFS;\nexports.urlSource = urlSource;\n"]},"metadata":{},"sourceType":"script"}