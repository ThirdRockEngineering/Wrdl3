{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar key = require('interface-datastore/key');\n\nvar PQueue = require('p-queue');\n\nvar _get = require('just-safe-get');\n\nvar _set = require('just-safe-set');\n\nvar errCode = require('err-code');\n\nvar errors = require('./errors.js');\n\nvar toString = require('uint8arrays/to-string');\n\nvar fromString = require('uint8arrays/from-string');\n\nvar level = require('./utils/level.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar PQueue__default = /*#__PURE__*/_interopDefaultLegacy(PQueue);\n\nvar _get__default = /*#__PURE__*/_interopDefaultLegacy(_get);\n\nvar _set__default = /*#__PURE__*/_interopDefaultLegacy(_set);\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nconst Queue = PQueue__default[\"default\"].default ? PQueue__default[\"default\"].default : PQueue__default[\"default\"];\nconst configKey = new key.Key('config');\n\nfunction config(store) {\n  const setQueue = new Queue({\n    concurrency: 1\n  });\n  const configStore = {\n    async getAll() {\n      let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      const encodedValue = await level.getWithFallback(configKey, store.get.bind(store), store.has.bind(store), store);\n      return JSON.parse(toString.toString(encodedValue));\n    },\n\n    async get(key) {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (key == null) {\n        throw new errors.NotFoundError(`Key ${key} does not exist in config`);\n      }\n\n      const config = await this.getAll(options);\n\n      const value = _get__default[\"default\"](config, key);\n\n      if (value === undefined) {\n        throw new errors.NotFoundError(`Key ${key} does not exist in config`);\n      }\n\n      return value;\n    },\n\n    set(key, value) {\n      let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (typeof key !== 'string' && !(key instanceof String)) {\n        throw errCode__default[\"default\"](new Error('Invalid key type: ' + typeof key), 'ERR_INVALID_KEY');\n      }\n\n      if (value === undefined || value instanceof Uint8Array) {\n        throw errCode__default[\"default\"](new Error('Invalid value type: ' + typeof value), 'ERR_INVALID_VALUE');\n      }\n\n      return setQueue.add(() => _maybeDoSet({\n        key: key,\n        value: value\n      }, options.signal));\n    },\n\n    replace(value) {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!value || value instanceof Uint8Array) {\n        throw errCode__default[\"default\"](new Error('Invalid value type: ' + typeof value), 'ERR_INVALID_VALUE');\n      }\n\n      return setQueue.add(() => _maybeDoSet({\n        key: undefined,\n        value: value\n      }, options.signal));\n    },\n\n    async exists() {\n      return level.hasWithFallback(configKey, store.has.bind(store), store);\n    }\n\n  };\n  return configStore;\n\n  async function _maybeDoSet(m, signal) {\n    if (signal && signal.aborted) {\n      return;\n    }\n\n    const key = m.key;\n    const value = m.value;\n\n    if (key) {\n      const config = await configStore.getAll();\n\n      if (typeof config === 'object' && config !== null) {\n        _set__default[\"default\"](config, key, value);\n      }\n\n      return _saveAll(config);\n    }\n\n    return _saveAll(value);\n  }\n\n  function _saveAll(config) {\n    const buf = fromString.fromString(JSON.stringify(config, null, 2));\n    return store.put(configKey, buf);\n  }\n}\n\nexports.config = config;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-repo/cjs/src/config.js"],"names":["Object","defineProperty","exports","value","key","require","PQueue","_get","_set","errCode","errors","toString","fromString","level","_interopDefaultLegacy","e","PQueue__default","_get__default","_set__default","errCode__default","Queue","default","configKey","Key","config","store","setQueue","concurrency","configStore","getAll","options","encodedValue","getWithFallback","get","bind","has","JSON","parse","NotFoundError","undefined","set","String","Error","Uint8Array","add","_maybeDoSet","signal","replace","exists","hasWithFallback","m","aborted","_saveAll","buf","stringify","put"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar key = require('interface-datastore/key');\nvar PQueue = require('p-queue');\nvar _get = require('just-safe-get');\nvar _set = require('just-safe-set');\nvar errCode = require('err-code');\nvar errors = require('./errors.js');\nvar toString = require('uint8arrays/to-string');\nvar fromString = require('uint8arrays/from-string');\nvar level = require('./utils/level.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar PQueue__default = /*#__PURE__*/_interopDefaultLegacy(PQueue);\nvar _get__default = /*#__PURE__*/_interopDefaultLegacy(_get);\nvar _set__default = /*#__PURE__*/_interopDefaultLegacy(_set);\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nconst Queue = PQueue__default[\"default\"].default ? PQueue__default[\"default\"].default : PQueue__default[\"default\"];\nconst configKey = new key.Key('config');\nfunction config(store) {\n  const setQueue = new Queue({ concurrency: 1 });\n  const configStore = {\n    async getAll(options = {}) {\n      const encodedValue = await level.getWithFallback(configKey, store.get.bind(store), store.has.bind(store), store);\n      return JSON.parse(toString.toString(encodedValue));\n    },\n    async get(key, options = {}) {\n      if (key == null) {\n        throw new errors.NotFoundError(`Key ${ key } does not exist in config`);\n      }\n      const config = await this.getAll(options);\n      const value = _get__default[\"default\"](config, key);\n      if (value === undefined) {\n        throw new errors.NotFoundError(`Key ${ key } does not exist in config`);\n      }\n      return value;\n    },\n    set(key, value, options = {}) {\n      if (typeof key !== 'string' && !(key instanceof String)) {\n        throw errCode__default[\"default\"](new Error('Invalid key type: ' + typeof key), 'ERR_INVALID_KEY');\n      }\n      if (value === undefined || value instanceof Uint8Array) {\n        throw errCode__default[\"default\"](new Error('Invalid value type: ' + typeof value), 'ERR_INVALID_VALUE');\n      }\n      return setQueue.add(() => _maybeDoSet({\n        key: key,\n        value: value\n      }, options.signal));\n    },\n    replace(value, options = {}) {\n      if (!value || value instanceof Uint8Array) {\n        throw errCode__default[\"default\"](new Error('Invalid value type: ' + typeof value), 'ERR_INVALID_VALUE');\n      }\n      return setQueue.add(() => _maybeDoSet({\n        key: undefined,\n        value: value\n      }, options.signal));\n    },\n    async exists() {\n      return level.hasWithFallback(configKey, store.has.bind(store), store);\n    }\n  };\n  return configStore;\n  async function _maybeDoSet(m, signal) {\n    if (signal && signal.aborted) {\n      return;\n    }\n    const key = m.key;\n    const value = m.value;\n    if (key) {\n      const config = await configStore.getAll();\n      if (typeof config === 'object' && config !== null) {\n        _set__default[\"default\"](config, key, value);\n      }\n      return _saveAll(config);\n    }\n    return _saveAll(value);\n  }\n  function _saveAll(config) {\n    const buf = fromString.fromString(JSON.stringify(config, null, 2));\n    return store.put(configKey, buf);\n  }\n}\n\nexports.config = config;\n"]},"metadata":{},"sourceType":"script"}