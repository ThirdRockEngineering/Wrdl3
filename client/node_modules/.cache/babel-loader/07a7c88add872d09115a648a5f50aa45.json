{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IK = void 0;\n\nconst utils_1 = require(\"../utils\");\n\nconst abstract_handshake_1 = require(\"./abstract-handshake\");\n\nclass IK extends abstract_handshake_1.AbstractHandshake {\n  initSession(initiator, prologue, s, rs) {\n    const psk = this.createEmptyKey();\n    let hs;\n\n    if (initiator) {\n      hs = this.initializeInitiator(prologue, s, rs, psk);\n    } else {\n      hs = this.initializeResponder(prologue, s, rs, psk);\n    }\n\n    return {\n      hs,\n      i: initiator,\n      mc: 0\n    };\n  }\n\n  sendMessage(session, message) {\n    let messageBuffer;\n\n    if (session.mc === 0) {\n      messageBuffer = this.writeMessageA(session.hs, message);\n    } else if (session.mc === 1) {\n      const {\n        messageBuffer: mb,\n        h,\n        cs1,\n        cs2\n      } = this.writeMessageB(session.hs, message);\n      messageBuffer = mb;\n      session.h = h;\n      session.cs1 = cs1;\n      session.cs2 = cs2;\n    } else if (session.mc > 1) {\n      if (session.i) {\n        if (!session.cs1) {\n          throw new Error('CS1 (cipher state) is not defined');\n        }\n\n        messageBuffer = this.writeMessageRegular(session.cs1, message);\n      } else {\n        if (!session.cs2) {\n          throw new Error('CS2 (cipher state) is not defined');\n        }\n\n        messageBuffer = this.writeMessageRegular(session.cs2, message);\n      }\n    } else {\n      throw new Error('Session invalid.');\n    }\n\n    session.mc++;\n    return messageBuffer;\n  }\n\n  recvMessage(session, message) {\n    let plaintext = new Uint8Array(0);\n    let valid = false;\n\n    if (session.mc === 0) {\n      ({\n        plaintext,\n        valid\n      } = this.readMessageA(session.hs, message));\n    }\n\n    if (session.mc === 1) {\n      const {\n        plaintext: pt,\n        valid: v,\n        h,\n        cs1,\n        cs2\n      } = this.readMessageB(session.hs, message);\n      plaintext = pt;\n      valid = v;\n      session.h = h;\n      session.cs1 = cs1;\n      session.cs2 = cs2;\n    }\n\n    session.mc++;\n    return {\n      plaintext,\n      valid\n    };\n  }\n\n  writeMessageA(hs, payload) {\n    hs.e = (0, utils_1.generateKeypair)();\n    const ne = hs.e.publicKey;\n    this.mixHash(hs.ss, ne);\n    this.mixKey(hs.ss, this.dh(hs.e.privateKey, hs.rs));\n    const spk = hs.s.publicKey;\n    const ns = this.encryptAndHash(hs.ss, spk);\n    this.mixKey(hs.ss, this.dh(hs.s.privateKey, hs.rs));\n    const ciphertext = this.encryptAndHash(hs.ss, payload);\n    return {\n      ne,\n      ns,\n      ciphertext\n    };\n  }\n\n  writeMessageB(hs, payload) {\n    hs.e = (0, utils_1.generateKeypair)();\n    const ne = hs.e.publicKey;\n    this.mixHash(hs.ss, ne);\n    this.mixKey(hs.ss, this.dh(hs.e.privateKey, hs.re));\n    this.mixKey(hs.ss, this.dh(hs.e.privateKey, hs.rs));\n    const ciphertext = this.encryptAndHash(hs.ss, payload);\n    const ns = this.createEmptyKey();\n    const messageBuffer = {\n      ne,\n      ns,\n      ciphertext\n    };\n    const {\n      cs1,\n      cs2\n    } = this.split(hs.ss);\n    return {\n      messageBuffer,\n      cs1,\n      cs2,\n      h: hs.ss.h\n    };\n  }\n\n  readMessageA(hs, message) {\n    if ((0, utils_1.isValidPublicKey)(message.ne)) {\n      hs.re = message.ne;\n    }\n\n    this.mixHash(hs.ss, hs.re);\n    this.mixKey(hs.ss, this.dh(hs.s.privateKey, hs.re));\n    const {\n      plaintext: ns,\n      valid: valid1\n    } = this.decryptAndHash(hs.ss, message.ns);\n\n    if (valid1 && ns.length === 32 && (0, utils_1.isValidPublicKey)(ns)) {\n      hs.rs = ns;\n    }\n\n    this.mixKey(hs.ss, this.dh(hs.s.privateKey, hs.rs));\n    const {\n      plaintext,\n      valid: valid2\n    } = this.decryptAndHash(hs.ss, message.ciphertext);\n    return {\n      plaintext,\n      valid: valid1 && valid2\n    };\n  }\n\n  readMessageB(hs, message) {\n    if ((0, utils_1.isValidPublicKey)(message.ne)) {\n      hs.re = message.ne;\n    }\n\n    this.mixHash(hs.ss, hs.re);\n\n    if (!hs.e) {\n      throw new Error('Handshake state should contain ephemeral key by now.');\n    }\n\n    this.mixKey(hs.ss, this.dh(hs.e.privateKey, hs.re));\n    this.mixKey(hs.ss, this.dh(hs.s.privateKey, hs.re));\n    const {\n      plaintext,\n      valid\n    } = this.decryptAndHash(hs.ss, message.ciphertext);\n    const {\n      cs1,\n      cs2\n    } = this.split(hs.ss);\n    return {\n      h: hs.ss.h,\n      valid,\n      plaintext,\n      cs1,\n      cs2\n    };\n  }\n\n  initializeInitiator(prologue, s, rs, psk) {\n    const name = 'Noise_IK_25519_ChaChaPoly_SHA256';\n    const ss = this.initializeSymmetric(name);\n    this.mixHash(ss, prologue);\n    this.mixHash(ss, rs);\n    const re = new Uint8Array(32);\n    return {\n      ss,\n      s,\n      rs,\n      re,\n      psk\n    };\n  }\n\n  initializeResponder(prologue, s, rs, psk) {\n    const name = 'Noise_IK_25519_ChaChaPoly_SHA256';\n    const ss = this.initializeSymmetric(name);\n    this.mixHash(ss, prologue);\n    this.mixHash(ss, s.publicKey);\n    const re = new Uint8Array(32);\n    return {\n      ss,\n      s,\n      rs,\n      re,\n      psk\n    };\n  }\n\n}\n\nexports.IK = IK;","map":{"version":3,"mappings":"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","names":["IK","abstract_handshake_1","initSession","initiator","prologue","s","rs","psk","createEmptyKey","hs","initializeInitiator","initializeResponder","i","mc","sendMessage","session","message","messageBuffer","writeMessageA","mb","h","cs1","cs2","writeMessageB","Error","writeMessageRegular","recvMessage","plaintext","Uint8Array","valid","readMessageA","pt","v","readMessageB","payload","e","ne","publicKey","mixHash","ss","mixKey","dh","privateKey","spk","ns","encryptAndHash","ciphertext","re","split","valid1","decryptAndHash","length","valid2","name","initializeSymmetric","exports"],"sourceRoot":"","sources":["../../../src/handshakes/ik.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}