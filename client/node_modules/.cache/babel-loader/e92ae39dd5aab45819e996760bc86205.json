{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar ipns = require('ipns');\n\nvar base58 = require('multiformats/bases/base58');\n\nvar datastorePubsub = require('datastore-pubsub');\n\nvar fromString = require('uint8arrays/from-string');\n\nvar toString = require('uint8arrays/to-string');\n\nvar errCode = require('err-code');\n\nvar debug = require('debug');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar ipns__namespace = /*#__PURE__*/_interopNamespace(ipns);\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nconst log = Object.assign(debug__default[\"default\"]('ipfs:ipns:pubsub'), {\n  error: debug__default[\"default\"]('ipfs:ipns:pubsub:error')\n});\n\nclass IpnsPubsubDatastore {\n  constructor(pubsub, localDatastore, peerId) {\n    this._subscriptions = {};\n    this._handleSubscriptionKey = this._handleSubscriptionKey.bind(this);\n    this._pubsubDs = new datastorePubsub.PubsubDatastore(pubsub, localDatastore, peerId, ipns__namespace.validator, this._handleSubscriptionKey);\n  }\n\n  async put(key, value) {\n    try {\n      await this._pubsubDs.put(key, value);\n    } catch (err) {\n      log.error(err);\n      throw err;\n    }\n  }\n\n  async get(key) {\n    let res;\n    let err;\n\n    try {\n      res = await this._pubsubDs.get(key);\n    } catch (e) {\n      err = e;\n    }\n\n    const ns = key.slice(0, ipns__namespace.namespaceLength);\n\n    if (toString.toString(ns) === ipns__namespace.namespace) {\n      const stringifiedTopic = base58.base58btc.encode(key).substring(1);\n      const id = base58.base58btc.encode(key.slice(ipns__namespace.namespaceLength)).substring(1);\n      this._subscriptions[stringifiedTopic] = id;\n      log(`subscribed to pubsub topic ${stringifiedTopic}, id ${id}`);\n    }\n\n    if (err) {\n      throw err;\n    }\n\n    return res;\n  }\n\n  _handleSubscriptionKey(key) {\n    if (key instanceof Uint8Array) {\n      key = toString.toString(key, 'base58btc');\n    }\n\n    const subscriber = this._subscriptions[key];\n\n    if (!subscriber) {\n      throw errCode__default[\"default\"](new Error(`key ${key} does not correspond to a subscription`), 'ERR_INVALID_KEY');\n    }\n\n    let keys;\n\n    try {\n      keys = ipns__namespace.getIdKeys(fromString.fromString(subscriber, 'base58btc'));\n    } catch (err) {\n      log.error(err);\n      throw err;\n    }\n\n    return keys.routingKey.uint8Array();\n  }\n\n  getSubscriptions() {\n    const subscriptions = Object.values(this._subscriptions).filter(Boolean);\n    return subscriptions.map(sub => `${ipns__namespace.namespace}${sub}`);\n  }\n\n  async cancel(name) {\n    if (typeof name !== 'string') {\n      throw errCode__default[\"default\"](new Error('invalid subscription name'), 'ERR_INVALID_SUBSCRIPTION_NAME');\n    }\n\n    if (name.startsWith(ipns__namespace.namespace)) {\n      name = name.substring(ipns__namespace.namespaceLength);\n    }\n\n    const stringifiedTopic = Object.keys(this._subscriptions).find(key => this._subscriptions[key] === name);\n\n    if (!stringifiedTopic) {\n      return {\n        canceled: false\n      };\n    }\n\n    const bufTopic = fromString.fromString(stringifiedTopic);\n\n    this._pubsubDs.unsubscribe(bufTopic);\n\n    delete this._subscriptions[stringifiedTopic];\n    log(`unsubscribed pubsub ${stringifiedTopic}: ${name}`);\n    return {\n      canceled: true\n    };\n  }\n\n}\n\nexports.IpnsPubsubDatastore = IpnsPubsubDatastore;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-core/cjs/src/ipns/routing/pubsub-datastore.js"],"names":["Object","defineProperty","exports","value","ipns","require","base58","datastorePubsub","fromString","toString","errCode","debug","_interopDefaultLegacy","e","_interopNamespace","__esModule","n","create","keys","forEach","k","d","getOwnPropertyDescriptor","get","enumerable","freeze","ipns__namespace","errCode__default","debug__default","log","assign","error","IpnsPubsubDatastore","constructor","pubsub","localDatastore","peerId","_subscriptions","_handleSubscriptionKey","bind","_pubsubDs","PubsubDatastore","validator","put","key","err","res","ns","slice","namespaceLength","namespace","stringifiedTopic","base58btc","encode","substring","id","Uint8Array","subscriber","Error","getIdKeys","routingKey","uint8Array","getSubscriptions","subscriptions","values","filter","Boolean","map","sub","cancel","name","startsWith","find","canceled","bufTopic","unsubscribe"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar ipns = require('ipns');\nvar base58 = require('multiformats/bases/base58');\nvar datastorePubsub = require('datastore-pubsub');\nvar fromString = require('uint8arrays/from-string');\nvar toString = require('uint8arrays/to-string');\nvar errCode = require('err-code');\nvar debug = require('debug');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar ipns__namespace = /*#__PURE__*/_interopNamespace(ipns);\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nconst log = Object.assign(debug__default[\"default\"]('ipfs:ipns:pubsub'), { error: debug__default[\"default\"]('ipfs:ipns:pubsub:error') });\nclass IpnsPubsubDatastore {\n  constructor(pubsub, localDatastore, peerId) {\n    this._subscriptions = {};\n    this._handleSubscriptionKey = this._handleSubscriptionKey.bind(this);\n    this._pubsubDs = new datastorePubsub.PubsubDatastore(pubsub, localDatastore, peerId, ipns__namespace.validator, this._handleSubscriptionKey);\n  }\n  async put(key, value) {\n    try {\n      await this._pubsubDs.put(key, value);\n    } catch (err) {\n      log.error(err);\n      throw err;\n    }\n  }\n  async get(key) {\n    let res;\n    let err;\n    try {\n      res = await this._pubsubDs.get(key);\n    } catch (e) {\n      err = e;\n    }\n    const ns = key.slice(0, ipns__namespace.namespaceLength);\n    if (toString.toString(ns) === ipns__namespace.namespace) {\n      const stringifiedTopic = base58.base58btc.encode(key).substring(1);\n      const id = base58.base58btc.encode(key.slice(ipns__namespace.namespaceLength)).substring(1);\n      this._subscriptions[stringifiedTopic] = id;\n      log(`subscribed to pubsub topic ${ stringifiedTopic }, id ${ id }`);\n    }\n    if (err) {\n      throw err;\n    }\n    return res;\n  }\n  _handleSubscriptionKey(key) {\n    if (key instanceof Uint8Array) {\n      key = toString.toString(key, 'base58btc');\n    }\n    const subscriber = this._subscriptions[key];\n    if (!subscriber) {\n      throw errCode__default[\"default\"](new Error(`key ${ key } does not correspond to a subscription`), 'ERR_INVALID_KEY');\n    }\n    let keys;\n    try {\n      keys = ipns__namespace.getIdKeys(fromString.fromString(subscriber, 'base58btc'));\n    } catch (err) {\n      log.error(err);\n      throw err;\n    }\n    return keys.routingKey.uint8Array();\n  }\n  getSubscriptions() {\n    const subscriptions = Object.values(this._subscriptions).filter(Boolean);\n    return subscriptions.map(sub => `${ ipns__namespace.namespace }${ sub }`);\n  }\n  async cancel(name) {\n    if (typeof name !== 'string') {\n      throw errCode__default[\"default\"](new Error('invalid subscription name'), 'ERR_INVALID_SUBSCRIPTION_NAME');\n    }\n    if (name.startsWith(ipns__namespace.namespace)) {\n      name = name.substring(ipns__namespace.namespaceLength);\n    }\n    const stringifiedTopic = Object.keys(this._subscriptions).find(key => this._subscriptions[key] === name);\n    if (!stringifiedTopic) {\n      return { canceled: false };\n    }\n    const bufTopic = fromString.fromString(stringifiedTopic);\n    this._pubsubDs.unsubscribe(bufTopic);\n    delete this._subscriptions[stringifiedTopic];\n    log(`unsubscribed pubsub ${ stringifiedTopic }: ${ name }`);\n    return { canceled: true };\n  }\n}\n\nexports.IpnsPubsubDatastore = IpnsPubsubDatastore;\n"]},"metadata":{},"sourceType":"script"}