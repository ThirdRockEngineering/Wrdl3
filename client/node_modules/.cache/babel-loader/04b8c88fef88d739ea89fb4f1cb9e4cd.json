{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar base58 = require('./bases/base58.js');\n\nconst walk = async _ref => {\n  let {\n    cid,\n    load,\n    seen\n  } = _ref;\n  seen = seen || new Set();\n  const b58Cid = cid.toString(base58.base58btc);\n\n  if (seen.has(b58Cid)) {\n    return;\n  }\n\n  const block = await load(cid);\n  seen.add(b58Cid);\n\n  if (block === null) {\n    return;\n  }\n\n  for (const [, cid] of block.links()) {\n    await walk({\n      cid,\n      load,\n      seen\n    });\n  }\n};\n\nexports.walk = walk;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/multiformats/cjs/src/traversal.js"],"names":["Object","defineProperty","exports","value","base58","require","walk","cid","load","seen","Set","b58Cid","toString","base58btc","has","block","add","links"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,mBAAD,CAApB;;AAEA,MAAMC,IAAI,GAAG,cAA6B;AAAA,MAAtB;AAACC,IAAAA,GAAD;AAAMC,IAAAA,IAAN;AAAYC,IAAAA;AAAZ,GAAsB;AACxCA,EAAAA,IAAI,GAAGA,IAAI,IAAI,IAAIC,GAAJ,EAAf;AACA,QAAMC,MAAM,GAAGJ,GAAG,CAACK,QAAJ,CAAaR,MAAM,CAACS,SAApB,CAAf;;AACA,MAAIJ,IAAI,CAACK,GAAL,CAASH,MAAT,CAAJ,EAAsB;AACpB;AACD;;AACD,QAAMI,KAAK,GAAG,MAAMP,IAAI,CAACD,GAAD,CAAxB;AACAE,EAAAA,IAAI,CAACO,GAAL,CAASL,MAAT;;AACA,MAAII,KAAK,KAAK,IAAd,EAAoB;AAClB;AACD;;AACD,OAAK,MAAM,GAAGR,GAAH,CAAX,IAAsBQ,KAAK,CAACE,KAAN,EAAtB,EAAqC;AACnC,UAAMX,IAAI,CAAC;AACTC,MAAAA,GADS;AAETC,MAAAA,IAFS;AAGTC,MAAAA;AAHS,KAAD,CAAV;AAKD;AACF,CAlBD;;AAoBAP,OAAO,CAACI,IAAR,GAAeA,IAAf","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base58 = require('./bases/base58.js');\n\nconst walk = async ({cid, load, seen}) => {\n  seen = seen || new Set();\n  const b58Cid = cid.toString(base58.base58btc);\n  if (seen.has(b58Cid)) {\n    return;\n  }\n  const block = await load(cid);\n  seen.add(b58Cid);\n  if (block === null) {\n    return;\n  }\n  for (const [, cid] of block.links()) {\n    await walk({\n      cid,\n      load,\n      seen\n    });\n  }\n};\n\nexports.walk = walk;\n"]},"metadata":{},"sourceType":"script"}