{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar debug = require('debug');\n\nvar errCode = require('err-code');\n\nvar mergeOpts = require('merge-options');\n\nvar cid = require('multiformats/cid');\n\nvar Digest = require('multiformats/hashes/digest');\n\nvar base36 = require('multiformats/bases/base36');\n\nvar PeerId = require('peer-id');\n\nvar isDomain = require('is-domain-name');\n\nvar toString = require('uint8arrays/to-string');\n\nvar utils = require('../../utils.js');\n\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nvar mergeOpts__default = /*#__PURE__*/_interopDefaultLegacy(mergeOpts);\n\nvar Digest__namespace = /*#__PURE__*/_interopNamespace(Digest);\n\nvar PeerId__default = /*#__PURE__*/_interopDefaultLegacy(PeerId);\n\nvar isDomain__default = /*#__PURE__*/_interopDefaultLegacy(isDomain);\n\nconst mergeOptions = mergeOpts__default[\"default\"].bind({\n  ignoreUndefined: true\n});\nconst log = Object.assign(debug__default[\"default\"]('ipfs:name:resolve'), {\n  error: debug__default[\"default\"]('ipfs:name:resolve:error')\n});\n\nconst appendRemainder = (result, remainder) => remainder.length > 0 ? result + '/' + remainder.join('/') : result;\n\nfunction createResolve(_ref) {\n  let {\n    dns,\n    ipns,\n    peerId,\n    isOnline,\n    options: {\n      offline\n    }\n  } = _ref;\n\n  async function* resolve(name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    options = mergeOptions({\n      nocache: false,\n      recursive: true\n    }, options);\n\n    if (offline && options && options.nocache) {\n      throw errCode__default[\"default\"](new Error('cannot specify both offline and nocache'), 'ERR_NOCACHE_AND_OFFLINE');\n    }\n\n    if (!isOnline() && !offline) {\n      throw errCode__default[\"default\"](new Error(utils.OFFLINE_ERROR), 'OFFLINE_ERROR');\n    }\n\n    if (!name) {\n      name = peerId.toB58String();\n    }\n\n    if (!name.startsWith('/ipns/')) {\n      name = `/ipns/${name}`;\n    }\n\n    let [namespace, hash, ...remainder] = name.slice(1).split('/');\n\n    try {\n      if (hash.substring(0, 1) === '1') {\n        const id = PeerId__default[\"default\"].parse(hash);\n        const digest = Digest__namespace.decode(id.toBytes());\n        const libp2pKey = cid.CID.createV1(114, digest);\n        hash = libp2pKey.toString(base36.base36);\n      } else {\n        const cid$1 = cid.CID.parse(hash);\n\n        if (cid$1.version === 1) {\n          hash = cid$1.toString(base36.base36);\n        }\n      }\n    } catch (err) {\n      if (isDomain__default[\"default\"](hash)) {\n        yield appendRemainder(await dns(hash, options), remainder);\n        return;\n      }\n\n      log.error(err);\n      throw errCode__default[\"default\"](new Error('Invalid IPNS name'), 'ERR_IPNS_INVALID_NAME');\n    }\n\n    const value = await ipns.resolve(`/${namespace}/${hash}`, options);\n    yield appendRemainder(value instanceof Uint8Array ? toString.toString(value) : value, remainder);\n  }\n\n  return withTimeoutOption.withTimeoutOption(resolve);\n}\n\nexports.createResolve = createResolve;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-core/cjs/src/components/name/resolve.js"],"names":["Object","defineProperty","exports","value","debug","require","errCode","mergeOpts","cid","Digest","base36","PeerId","isDomain","toString","utils","withTimeoutOption","_interopDefaultLegacy","e","_interopNamespace","__esModule","n","create","keys","forEach","k","d","getOwnPropertyDescriptor","get","enumerable","freeze","debug__default","errCode__default","mergeOpts__default","Digest__namespace","PeerId__default","isDomain__default","mergeOptions","bind","ignoreUndefined","log","assign","error","appendRemainder","result","remainder","length","join","createResolve","dns","ipns","peerId","isOnline","options","offline","resolve","name","nocache","recursive","Error","OFFLINE_ERROR","toB58String","startsWith","namespace","hash","slice","split","substring","id","parse","digest","decode","toBytes","libp2pKey","CID","createV1","cid$1","version","err","Uint8Array"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar debug = require('debug');\nvar errCode = require('err-code');\nvar mergeOpts = require('merge-options');\nvar cid = require('multiformats/cid');\nvar Digest = require('multiformats/hashes/digest');\nvar base36 = require('multiformats/bases/base36');\nvar PeerId = require('peer-id');\nvar isDomain = require('is-domain-name');\nvar toString = require('uint8arrays/to-string');\nvar utils = require('../../utils.js');\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar mergeOpts__default = /*#__PURE__*/_interopDefaultLegacy(mergeOpts);\nvar Digest__namespace = /*#__PURE__*/_interopNamespace(Digest);\nvar PeerId__default = /*#__PURE__*/_interopDefaultLegacy(PeerId);\nvar isDomain__default = /*#__PURE__*/_interopDefaultLegacy(isDomain);\n\nconst mergeOptions = mergeOpts__default[\"default\"].bind({ ignoreUndefined: true });\nconst log = Object.assign(debug__default[\"default\"]('ipfs:name:resolve'), { error: debug__default[\"default\"]('ipfs:name:resolve:error') });\nconst appendRemainder = (result, remainder) => remainder.length > 0 ? result + '/' + remainder.join('/') : result;\nfunction createResolve({\n  dns,\n  ipns,\n  peerId,\n  isOnline,\n  options: {offline}\n}) {\n  async function* resolve(name, options = {}) {\n    options = mergeOptions({\n      nocache: false,\n      recursive: true\n    }, options);\n    if (offline && options && options.nocache) {\n      throw errCode__default[\"default\"](new Error('cannot specify both offline and nocache'), 'ERR_NOCACHE_AND_OFFLINE');\n    }\n    if (!isOnline() && !offline) {\n      throw errCode__default[\"default\"](new Error(utils.OFFLINE_ERROR), 'OFFLINE_ERROR');\n    }\n    if (!name) {\n      name = peerId.toB58String();\n    }\n    if (!name.startsWith('/ipns/')) {\n      name = `/ipns/${ name }`;\n    }\n    let [namespace, hash, ...remainder] = name.slice(1).split('/');\n    try {\n      if (hash.substring(0, 1) === '1') {\n        const id = PeerId__default[\"default\"].parse(hash);\n        const digest = Digest__namespace.decode(id.toBytes());\n        const libp2pKey = cid.CID.createV1(114, digest);\n        hash = libp2pKey.toString(base36.base36);\n      } else {\n        const cid$1 = cid.CID.parse(hash);\n        if (cid$1.version === 1) {\n          hash = cid$1.toString(base36.base36);\n        }\n      }\n    } catch (err) {\n      if (isDomain__default[\"default\"](hash)) {\n        yield appendRemainder(await dns(hash, options), remainder);\n        return;\n      }\n      log.error(err);\n      throw errCode__default[\"default\"](new Error('Invalid IPNS name'), 'ERR_IPNS_INVALID_NAME');\n    }\n    const value = await ipns.resolve(`/${ namespace }/${ hash }`, options);\n    yield appendRemainder(value instanceof Uint8Array ? toString.toString(value) : value, remainder);\n  }\n  return withTimeoutOption.withTimeoutOption(resolve);\n}\n\nexports.createResolve = createResolve;\n"]},"metadata":{},"sourceType":"script"}