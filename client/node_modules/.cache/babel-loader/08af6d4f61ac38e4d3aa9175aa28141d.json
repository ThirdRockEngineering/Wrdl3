{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nclass SortedMap extends Map {\n  constructor(entries, cmp) {\n    super();\n    this._cmp = cmp || this._defaultSort;\n    this._keys = [];\n\n    for (const [k, v] of entries || []) {\n      this.set(k, v);\n    }\n  }\n\n  update(i) {\n    if (i < 0 || i >= this._keys.length) {\n      return;\n    }\n\n    const k = this._keys[i];\n\n    this._keys.splice(i, 1);\n\n    const newIdx = this._find(k);\n\n    this._keys.splice(newIdx, 0, k);\n  }\n\n  set(k, v) {\n    if (this.has(k)) {\n      const i = this.indexOf(k);\n\n      this._keys.splice(i, 1);\n    }\n\n    super.set(k, v);\n\n    const i = this._find(k);\n\n    this._keys.splice(i, 0, k);\n\n    return this;\n  }\n\n  clear() {\n    super.clear();\n    this._keys = [];\n  }\n\n  delete(k) {\n    if (!this.has(k)) {\n      return false;\n    }\n\n    const i = this.indexOf(k);\n\n    this._keys.splice(i, 1);\n\n    return super.delete(k);\n  }\n\n  indexOf(k) {\n    if (!this.has(k)) {\n      return -1;\n    }\n\n    const i = this._find(k);\n\n    if (this._keys[i] === k) {\n      return i;\n    }\n\n    for (let j = 1; j < this._keys.length; j++) {\n      if (this._keys[i + j] === k) return i + j;\n      if (this._keys[i - j] === k) return i - j;\n    }\n\n    return -1;\n  }\n\n  _find(k) {\n    let lower = 0;\n    let upper = this._keys.length;\n\n    while (lower < upper) {\n      const pivot = lower + upper >>> 1;\n\n      const cmp = this._kCmp(this._keys[pivot], k);\n\n      if (cmp < 0) {\n        lower = pivot + 1;\n      } else if (cmp > 0) {\n        upper = pivot;\n      } else {\n        return pivot;\n      }\n    }\n\n    return lower;\n  }\n\n  *keys() {\n    for (const k of this._keys) {\n      yield k;\n    }\n\n    return undefined;\n  }\n\n  *values() {\n    for (const k of this._keys) {\n      yield this.get(k);\n    }\n\n    return undefined;\n  }\n\n  *entries() {\n    for (const k of this._keys) {\n      yield [k, this.get(k)];\n    }\n\n    return undefined;\n  }\n\n  *[Symbol.iterator]() {\n    yield* this.entries();\n  }\n\n  forEach(cb, thisArg) {\n    if (!cb) {\n      return;\n    }\n\n    for (const k of this._keys) {\n      cb.apply(thisArg, [[k, this.get(k)]]);\n    }\n  }\n\n  _defaultSort(a, b) {\n    if (a[0] < b[0]) return -1;\n    if (b[0] < a[0]) return 1;\n    return 0;\n  }\n\n  _kCmp(a, b) {\n    return this._cmp([a, this.get(a)], [b, this.get(b)]);\n  }\n\n}\n\nexports.SortedMap = SortedMap;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-bitswap/cjs/src/utils/sorted-map.js"],"names":["Object","defineProperty","exports","value","SortedMap","Map","constructor","entries","cmp","_cmp","_defaultSort","_keys","k","v","set","update","i","length","splice","newIdx","_find","has","indexOf","clear","delete","j","lower","upper","pivot","_kCmp","keys","undefined","values","get","Symbol","iterator","forEach","cb","thisArg","apply","a","b"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,MAAMC,SAAN,SAAwBC,GAAxB,CAA4B;AAC1BC,EAAAA,WAAW,CAACC,OAAD,EAAUC,GAAV,EAAe;AACxB;AACA,SAAKC,IAAL,GAAYD,GAAG,IAAI,KAAKE,YAAxB;AACA,SAAKC,KAAL,GAAa,EAAb;;AACA,SAAK,MAAM,CAACC,CAAD,EAAIC,CAAJ,CAAX,IAAqBN,OAAO,IAAI,EAAhC,EAAoC;AAClC,WAAKO,GAAL,CAASF,CAAT,EAAYC,CAAZ;AACD;AACF;;AACDE,EAAAA,MAAM,CAACC,CAAD,EAAI;AACR,QAAIA,CAAC,GAAG,CAAJ,IAASA,CAAC,IAAI,KAAKL,KAAL,CAAWM,MAA7B,EAAqC;AACnC;AACD;;AACD,UAAML,CAAC,GAAG,KAAKD,KAAL,CAAWK,CAAX,CAAV;;AACA,SAAKL,KAAL,CAAWO,MAAX,CAAkBF,CAAlB,EAAqB,CAArB;;AACA,UAAMG,MAAM,GAAG,KAAKC,KAAL,CAAWR,CAAX,CAAf;;AACA,SAAKD,KAAL,CAAWO,MAAX,CAAkBC,MAAlB,EAA0B,CAA1B,EAA6BP,CAA7B;AACD;;AACDE,EAAAA,GAAG,CAACF,CAAD,EAAIC,CAAJ,EAAO;AACR,QAAI,KAAKQ,GAAL,CAAST,CAAT,CAAJ,EAAiB;AACf,YAAMI,CAAC,GAAG,KAAKM,OAAL,CAAaV,CAAb,CAAV;;AACA,WAAKD,KAAL,CAAWO,MAAX,CAAkBF,CAAlB,EAAqB,CAArB;AACD;;AACD,UAAMF,GAAN,CAAUF,CAAV,EAAaC,CAAb;;AACA,UAAMG,CAAC,GAAG,KAAKI,KAAL,CAAWR,CAAX,CAAV;;AACA,SAAKD,KAAL,CAAWO,MAAX,CAAkBF,CAAlB,EAAqB,CAArB,EAAwBJ,CAAxB;;AACA,WAAO,IAAP;AACD;;AACDW,EAAAA,KAAK,GAAG;AACN,UAAMA,KAAN;AACA,SAAKZ,KAAL,GAAa,EAAb;AACD;;AACDa,EAAAA,MAAM,CAACZ,CAAD,EAAI;AACR,QAAI,CAAC,KAAKS,GAAL,CAAST,CAAT,CAAL,EAAkB;AAChB,aAAO,KAAP;AACD;;AACD,UAAMI,CAAC,GAAG,KAAKM,OAAL,CAAaV,CAAb,CAAV;;AACA,SAAKD,KAAL,CAAWO,MAAX,CAAkBF,CAAlB,EAAqB,CAArB;;AACA,WAAO,MAAMQ,MAAN,CAAaZ,CAAb,CAAP;AACD;;AACDU,EAAAA,OAAO,CAACV,CAAD,EAAI;AACT,QAAI,CAAC,KAAKS,GAAL,CAAST,CAAT,CAAL,EAAkB;AAChB,aAAO,CAAC,CAAR;AACD;;AACD,UAAMI,CAAC,GAAG,KAAKI,KAAL,CAAWR,CAAX,CAAV;;AACA,QAAI,KAAKD,KAAL,CAAWK,CAAX,MAAkBJ,CAAtB,EAAyB;AACvB,aAAOI,CAAP;AACD;;AACD,SAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKd,KAAL,CAAWM,MAA/B,EAAuCQ,CAAC,EAAxC,EAA4C;AAC1C,UAAI,KAAKd,KAAL,CAAWK,CAAC,GAAGS,CAAf,MAAsBb,CAA1B,EACE,OAAOI,CAAC,GAAGS,CAAX;AACF,UAAI,KAAKd,KAAL,CAAWK,CAAC,GAAGS,CAAf,MAAsBb,CAA1B,EACE,OAAOI,CAAC,GAAGS,CAAX;AACH;;AACD,WAAO,CAAC,CAAR;AACD;;AACDL,EAAAA,KAAK,CAACR,CAAD,EAAI;AACP,QAAIc,KAAK,GAAG,CAAZ;AACA,QAAIC,KAAK,GAAG,KAAKhB,KAAL,CAAWM,MAAvB;;AACA,WAAOS,KAAK,GAAGC,KAAf,EAAsB;AACpB,YAAMC,KAAK,GAAGF,KAAK,GAAGC,KAAR,KAAkB,CAAhC;;AACA,YAAMnB,GAAG,GAAG,KAAKqB,KAAL,CAAW,KAAKlB,KAAL,CAAWiB,KAAX,CAAX,EAA8BhB,CAA9B,CAAZ;;AACA,UAAIJ,GAAG,GAAG,CAAV,EAAa;AACXkB,QAAAA,KAAK,GAAGE,KAAK,GAAG,CAAhB;AACD,OAFD,MAEO,IAAIpB,GAAG,GAAG,CAAV,EAAa;AAClBmB,QAAAA,KAAK,GAAGC,KAAR;AACD,OAFM,MAEA;AACL,eAAOA,KAAP;AACD;AACF;;AACD,WAAOF,KAAP;AACD;;AACI,GAAJI,IAAI,GAAG;AACN,SAAK,MAAMlB,CAAX,IAAgB,KAAKD,KAArB,EAA4B;AAC1B,YAAMC,CAAN;AACD;;AACD,WAAOmB,SAAP;AACD;;AACM,GAANC,MAAM,GAAG;AACR,SAAK,MAAMpB,CAAX,IAAgB,KAAKD,KAArB,EAA4B;AAC1B,YAAM,KAAKsB,GAAL,CAASrB,CAAT,CAAN;AACD;;AACD,WAAOmB,SAAP;AACD;;AACO,GAAPxB,OAAO,GAAG;AACT,SAAK,MAAMK,CAAX,IAAgB,KAAKD,KAArB,EAA4B;AAC1B,YAAM,CACJC,CADI,EAEJ,KAAKqB,GAAL,CAASrB,CAAT,CAFI,CAAN;AAID;;AACD,WAAOmB,SAAP;AACD;;AACgB,IAAfG,MAAM,CAACC,QAAQ,IAAI;AACnB,WAAO,KAAK5B,OAAL,EAAP;AACD;;AACD6B,EAAAA,OAAO,CAACC,EAAD,EAAKC,OAAL,EAAc;AACnB,QAAI,CAACD,EAAL,EAAS;AACP;AACD;;AACD,SAAK,MAAMzB,CAAX,IAAgB,KAAKD,KAArB,EAA4B;AAC1B0B,MAAAA,EAAE,CAACE,KAAH,CAASD,OAAT,EAAkB,CAAC,CACf1B,CADe,EAEf,KAAKqB,GAAL,CAASrB,CAAT,CAFe,CAAD,CAAlB;AAID;AACF;;AACDF,EAAAA,YAAY,CAAC8B,CAAD,EAAIC,CAAJ,EAAO;AACjB,QAAID,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAZ,EACE,OAAO,CAAC,CAAR;AACF,QAAIA,CAAC,CAAC,CAAD,CAAD,GAAOD,CAAC,CAAC,CAAD,CAAZ,EACE,OAAO,CAAP;AACF,WAAO,CAAP;AACD;;AACDX,EAAAA,KAAK,CAACW,CAAD,EAAIC,CAAJ,EAAO;AACV,WAAO,KAAKhC,IAAL,CAAU,CACf+B,CADe,EAEf,KAAKP,GAAL,CAASO,CAAT,CAFe,CAAV,EAGJ,CACDC,CADC,EAED,KAAKR,GAAL,CAASQ,CAAT,CAFC,CAHI,CAAP;AAOD;;AA1HyB;;AA6H5BvC,OAAO,CAACE,SAAR,GAAoBA,SAApB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nclass SortedMap extends Map {\n  constructor(entries, cmp) {\n    super();\n    this._cmp = cmp || this._defaultSort;\n    this._keys = [];\n    for (const [k, v] of entries || []) {\n      this.set(k, v);\n    }\n  }\n  update(i) {\n    if (i < 0 || i >= this._keys.length) {\n      return;\n    }\n    const k = this._keys[i];\n    this._keys.splice(i, 1);\n    const newIdx = this._find(k);\n    this._keys.splice(newIdx, 0, k);\n  }\n  set(k, v) {\n    if (this.has(k)) {\n      const i = this.indexOf(k);\n      this._keys.splice(i, 1);\n    }\n    super.set(k, v);\n    const i = this._find(k);\n    this._keys.splice(i, 0, k);\n    return this;\n  }\n  clear() {\n    super.clear();\n    this._keys = [];\n  }\n  delete(k) {\n    if (!this.has(k)) {\n      return false;\n    }\n    const i = this.indexOf(k);\n    this._keys.splice(i, 1);\n    return super.delete(k);\n  }\n  indexOf(k) {\n    if (!this.has(k)) {\n      return -1;\n    }\n    const i = this._find(k);\n    if (this._keys[i] === k) {\n      return i;\n    }\n    for (let j = 1; j < this._keys.length; j++) {\n      if (this._keys[i + j] === k)\n        return i + j;\n      if (this._keys[i - j] === k)\n        return i - j;\n    }\n    return -1;\n  }\n  _find(k) {\n    let lower = 0;\n    let upper = this._keys.length;\n    while (lower < upper) {\n      const pivot = lower + upper >>> 1;\n      const cmp = this._kCmp(this._keys[pivot], k);\n      if (cmp < 0) {\n        lower = pivot + 1;\n      } else if (cmp > 0) {\n        upper = pivot;\n      } else {\n        return pivot;\n      }\n    }\n    return lower;\n  }\n  *keys() {\n    for (const k of this._keys) {\n      yield k;\n    }\n    return undefined;\n  }\n  *values() {\n    for (const k of this._keys) {\n      yield this.get(k);\n    }\n    return undefined;\n  }\n  *entries() {\n    for (const k of this._keys) {\n      yield [\n        k,\n        this.get(k)\n      ];\n    }\n    return undefined;\n  }\n  *[Symbol.iterator]() {\n    yield* this.entries();\n  }\n  forEach(cb, thisArg) {\n    if (!cb) {\n      return;\n    }\n    for (const k of this._keys) {\n      cb.apply(thisArg, [[\n          k,\n          this.get(k)\n        ]]);\n    }\n  }\n  _defaultSort(a, b) {\n    if (a[0] < b[0])\n      return -1;\n    if (b[0] < a[0])\n      return 1;\n    return 0;\n  }\n  _kCmp(a, b) {\n    return this._cmp([\n      a,\n      this.get(a)\n    ], [\n      b,\n      this.get(b)\n    ]);\n  }\n}\n\nexports.SortedMap = SortedMap;\n"]},"metadata":{},"sourceType":"script"}