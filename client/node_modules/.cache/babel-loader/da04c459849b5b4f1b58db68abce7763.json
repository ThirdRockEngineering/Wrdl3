{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar base = require('./base.js');\n\nvar base32 = require('multiformats/bases/base32');\n\nvar raw = require('multiformats/codecs/raw');\n\nvar cid = require('multiformats/cid');\n\nvar Digest = require('multiformats/hashes/digest');\n\nvar errors = require('./errors.js');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar raw__namespace = /*#__PURE__*/_interopNamespace(raw);\n\nvar Digest__namespace = /*#__PURE__*/_interopNamespace(Digest);\n\nclass MemoryBlockstore extends base.BaseBlockstore {\n  constructor() {\n    super();\n    this.data = {};\n  }\n\n  open() {\n    return Promise.resolve();\n  }\n\n  close() {\n    return Promise.resolve();\n  }\n\n  async put(key, val) {\n    this.data[base32.base32.encode(key.multihash.bytes)] = val;\n  }\n\n  async get(key) {\n    const exists = await this.has(key);\n    if (!exists) throw errors.notFoundError();\n    return this.data[base32.base32.encode(key.multihash.bytes)];\n  }\n\n  async has(key) {\n    return this.data[base32.base32.encode(key.multihash.bytes)] !== undefined;\n  }\n\n  async delete(key) {\n    delete this.data[base32.base32.encode(key.multihash.bytes)];\n  }\n\n  async *_all() {\n    yield* Object.entries(this.data).map(_ref => {\n      let [key, value] = _ref;\n      return {\n        key: cid.CID.createV1(raw__namespace.code, Digest__namespace.decode(base32.base32.decode(key))),\n        value\n      };\n    });\n  }\n\n  async *_allKeys() {\n    yield* Object.entries(this.data).map(_ref2 => {\n      let [key] = _ref2;\n      return cid.CID.createV1(raw__namespace.code, Digest__namespace.decode(base32.base32.decode(key)));\n    });\n  }\n\n}\n\nexports.MemoryBlockstore = MemoryBlockstore;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/blockstore-core/cjs/src/memory.js"],"names":["Object","defineProperty","exports","value","base","require","base32","raw","cid","Digest","errors","_interopNamespace","e","__esModule","n","create","keys","forEach","k","d","getOwnPropertyDescriptor","get","enumerable","freeze","raw__namespace","Digest__namespace","MemoryBlockstore","BaseBlockstore","constructor","data","open","Promise","resolve","close","put","key","val","encode","multihash","bytes","exists","has","notFoundError","undefined","delete","_all","entries","map","CID","createV1","code","decode","_allKeys"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\nvar base32 = require('multiformats/bases/base32');\nvar raw = require('multiformats/codecs/raw');\nvar cid = require('multiformats/cid');\nvar Digest = require('multiformats/hashes/digest');\nvar errors = require('./errors.js');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar raw__namespace = /*#__PURE__*/_interopNamespace(raw);\nvar Digest__namespace = /*#__PURE__*/_interopNamespace(Digest);\n\nclass MemoryBlockstore extends base.BaseBlockstore {\n  constructor() {\n    super();\n    this.data = {};\n  }\n  open() {\n    return Promise.resolve();\n  }\n  close() {\n    return Promise.resolve();\n  }\n  async put(key, val) {\n    this.data[base32.base32.encode(key.multihash.bytes)] = val;\n  }\n  async get(key) {\n    const exists = await this.has(key);\n    if (!exists)\n      throw errors.notFoundError();\n    return this.data[base32.base32.encode(key.multihash.bytes)];\n  }\n  async has(key) {\n    return this.data[base32.base32.encode(key.multihash.bytes)] !== undefined;\n  }\n  async delete(key) {\n    delete this.data[base32.base32.encode(key.multihash.bytes)];\n  }\n  async *_all() {\n    yield* Object.entries(this.data).map(([key, value]) => ({\n      key: cid.CID.createV1(raw__namespace.code, Digest__namespace.decode(base32.base32.decode(key))),\n      value\n    }));\n  }\n  async *_allKeys() {\n    yield* Object.entries(this.data).map(([key]) => cid.CID.createV1(raw__namespace.code, Digest__namespace.decode(base32.base32.decode(key))));\n  }\n}\n\nexports.MemoryBlockstore = MemoryBlockstore;\n"]},"metadata":{},"sourceType":"script"}