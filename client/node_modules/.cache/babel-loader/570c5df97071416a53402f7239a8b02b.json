{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar ipfsUnixfsExporter = require('ipfs-unixfs-exporter');\n\nvar errCode = require('err-code');\n\nvar utils = require('../utils.js');\n\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\n\nvar cid = require('multiformats/cid');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nfunction createLs(_ref) {\n  let {\n    repo,\n    preload\n  } = _ref;\n\n  async function* ls(ipfsPath) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const legacyPath = utils.normalizeCidPath(ipfsPath);\n    const pathComponents = legacyPath.split('/');\n\n    if (options.preload !== false) {\n      preload(cid.CID.parse(pathComponents[0]));\n    }\n\n    const ipfsPathOrCid = cid.CID.asCID(legacyPath) || legacyPath;\n    const file = await ipfsUnixfsExporter.exporter(ipfsPathOrCid, repo.blocks, options);\n\n    if (file.type === 'file') {\n      yield utils.mapFile(file);\n      return;\n    }\n\n    if (file.type === 'directory') {\n      for await (const child of file.content()) {\n        yield utils.mapFile(child);\n      }\n\n      return;\n    }\n\n    throw errCode__default[\"default\"](new Error(`Unknown UnixFS type ${file.type}`), 'ERR_UNKNOWN_UNIXFS_TYPE');\n  }\n\n  return withTimeoutOption.withTimeoutOption(ls);\n}\n\nexports.createLs = createLs;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-core/cjs/src/components/ls.js"],"names":["Object","defineProperty","exports","value","ipfsUnixfsExporter","require","errCode","utils","withTimeoutOption","cid","_interopDefaultLegacy","e","errCode__default","createLs","repo","preload","ls","ipfsPath","options","legacyPath","normalizeCidPath","pathComponents","split","CID","parse","ipfsPathOrCid","asCID","file","exporter","blocks","type","mapFile","child","content","Error"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,kBAAkB,GAAGC,OAAO,CAAC,sBAAD,CAAhC;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAArB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,aAAD,CAAnB;;AACA,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,qCAAD,CAA/B;;AACA,IAAII,GAAG,GAAGJ,OAAO,CAAC,kBAAD,CAAjB;;AAEA,SAASK,qBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAOA,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAlB,IAA8B,aAAaA,CAA3C,GAA+CA,CAA/C,GAAmD;AAAE,eAAWA;AAAb,GAA1D;AAA6E;;AAElH,IAAIC,gBAAgB,GAAG,aAAaF,qBAAqB,CAACJ,OAAD,CAAzD;;AAEA,SAASO,QAAT,OAAmC;AAAA,MAAjB;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAiB;;AACjC,kBAAgBC,EAAhB,CAAmBC,QAAnB,EAA2C;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACzC,UAAMC,UAAU,GAAGZ,KAAK,CAACa,gBAAN,CAAuBH,QAAvB,CAAnB;AACA,UAAMI,cAAc,GAAGF,UAAU,CAACG,KAAX,CAAiB,GAAjB,CAAvB;;AACA,QAAIJ,OAAO,CAACH,OAAR,KAAoB,KAAxB,EAA+B;AAC7BA,MAAAA,OAAO,CAACN,GAAG,CAACc,GAAJ,CAAQC,KAAR,CAAcH,cAAc,CAAC,CAAD,CAA5B,CAAD,CAAP;AACD;;AACD,UAAMI,aAAa,GAAGhB,GAAG,CAACc,GAAJ,CAAQG,KAAR,CAAcP,UAAd,KAA6BA,UAAnD;AACA,UAAMQ,IAAI,GAAG,MAAMvB,kBAAkB,CAACwB,QAAnB,CAA4BH,aAA5B,EAA2CX,IAAI,CAACe,MAAhD,EAAwDX,OAAxD,CAAnB;;AACA,QAAIS,IAAI,CAACG,IAAL,KAAc,MAAlB,EAA0B;AACxB,YAAMvB,KAAK,CAACwB,OAAN,CAAcJ,IAAd,CAAN;AACA;AACD;;AACD,QAAIA,IAAI,CAACG,IAAL,KAAc,WAAlB,EAA+B;AAC7B,iBAAW,MAAME,KAAjB,IAA0BL,IAAI,CAACM,OAAL,EAA1B,EAA0C;AACxC,cAAM1B,KAAK,CAACwB,OAAN,CAAcC,KAAd,CAAN;AACD;;AACD;AACD;;AACD,UAAMpB,gBAAgB,CAAC,SAAD,CAAhB,CAA4B,IAAIsB,KAAJ,CAAW,uBAAuBP,IAAI,CAACG,IAAM,EAA7C,CAA5B,EAA6E,yBAA7E,CAAN;AACD;;AACD,SAAOtB,iBAAiB,CAACA,iBAAlB,CAAoCQ,EAApC,CAAP;AACD;;AAEDd,OAAO,CAACW,QAAR,GAAmBA,QAAnB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar ipfsUnixfsExporter = require('ipfs-unixfs-exporter');\nvar errCode = require('err-code');\nvar utils = require('../utils.js');\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\nvar cid = require('multiformats/cid');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nfunction createLs({repo, preload}) {\n  async function* ls(ipfsPath, options = {}) {\n    const legacyPath = utils.normalizeCidPath(ipfsPath);\n    const pathComponents = legacyPath.split('/');\n    if (options.preload !== false) {\n      preload(cid.CID.parse(pathComponents[0]));\n    }\n    const ipfsPathOrCid = cid.CID.asCID(legacyPath) || legacyPath;\n    const file = await ipfsUnixfsExporter.exporter(ipfsPathOrCid, repo.blocks, options);\n    if (file.type === 'file') {\n      yield utils.mapFile(file);\n      return;\n    }\n    if (file.type === 'directory') {\n      for await (const child of file.content()) {\n        yield utils.mapFile(child);\n      }\n      return;\n    }\n    throw errCode__default[\"default\"](new Error(`Unknown UnixFS type ${ file.type }`), 'ERR_UNKNOWN_UNIXFS_TYPE');\n  }\n  return withTimeoutOption.withTimeoutOption(ls);\n}\n\nexports.createLs = createLs;\n"]},"metadata":{},"sourceType":"script"}