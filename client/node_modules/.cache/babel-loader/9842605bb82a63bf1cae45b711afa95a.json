{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar interfaceDatastore = require('interface-datastore');\n\nvar datastoreCore = require('datastore-core');\n\nvar filter = require('it-filter');\n\nvar map = require('it-map');\n\nvar take = require('it-take');\n\nvar sort = require('it-sort');\n\nvar leveljs = require('level');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar filter__default = /*#__PURE__*/_interopDefaultLegacy(filter);\n\nvar map__default = /*#__PURE__*/_interopDefaultLegacy(map);\n\nvar take__default = /*#__PURE__*/_interopDefaultLegacy(take);\n\nvar sort__default = /*#__PURE__*/_interopDefaultLegacy(sort);\n\nvar leveljs__default = /*#__PURE__*/_interopDefaultLegacy(leveljs);\n\nclass LevelDatastore extends datastoreCore.BaseDatastore {\n  constructor(path, opts) {\n    super();\n    this.path = path;\n    this.opts = opts;\n\n    if (opts && opts.db) {\n      this.database = opts.db;\n      delete opts.db;\n    } else {\n      this.database = leveljs__default[\"default\"];\n    }\n  }\n\n  _initDb() {\n    return new Promise((resolve, reject) => {\n      this.db = this.database(this.path, { ...this.opts,\n        valueEncoding: 'binary',\n        compression: false\n      }, err => {\n        if (err) {\n          return reject(err);\n        }\n\n        resolve(this.db);\n      });\n    });\n  }\n\n  async open() {\n    try {\n      if (this.db) {\n        await this.db.open();\n      } else {\n        this.db = await this._initDb();\n      }\n    } catch (err) {\n      throw datastoreCore.Errors.dbOpenFailedError(err);\n    }\n  }\n\n  async put(key, value) {\n    try {\n      await this.db.put(key.toString(), value);\n    } catch (err) {\n      throw datastoreCore.Errors.dbWriteFailedError(err);\n    }\n  }\n\n  async get(key) {\n    let data;\n\n    try {\n      data = await this.db.get(key.toString());\n    } catch (err) {\n      if (err.notFound) throw datastoreCore.Errors.notFoundError(err);\n      throw datastoreCore.Errors.dbWriteFailedError(err);\n    }\n\n    return data;\n  }\n\n  async has(key) {\n    try {\n      await this.db.get(key.toString());\n    } catch (err) {\n      if (err.notFound) return false;\n      throw err;\n    }\n\n    return true;\n  }\n\n  async delete(key) {\n    try {\n      await this.db.del(key.toString());\n    } catch (err) {\n      throw datastoreCore.Errors.dbDeleteFailedError(err);\n    }\n  }\n\n  close() {\n    return this.db && this.db.close();\n  }\n\n  batch() {\n    const ops = [];\n    return {\n      put: (key, value) => {\n        ops.push({\n          type: 'put',\n          key: key.toString(),\n          value: value\n        });\n      },\n      delete: key => {\n        ops.push({\n          type: 'del',\n          key: key.toString()\n        });\n      },\n      commit: () => {\n        return this.db.batch(ops);\n      }\n    };\n  }\n\n  query(q) {\n    let it = this._query({\n      values: true,\n      prefix: q.prefix\n    });\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter__default[\"default\"](it, f), it);\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sort__default[\"default\"](it, f), it);\n    }\n\n    const {\n      offset,\n      limit\n    } = q;\n\n    if (offset) {\n      let i = 0;\n      it = filter__default[\"default\"](it, () => i++ >= offset);\n    }\n\n    if (limit) {\n      it = take__default[\"default\"](it, limit);\n    }\n\n    return it;\n  }\n\n  queryKeys(q) {\n    let it = map__default[\"default\"](this._query({\n      values: false,\n      prefix: q.prefix\n    }), _ref => {\n      let {\n        key\n      } = _ref;\n      return key;\n    });\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter__default[\"default\"](it, f), it);\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sort__default[\"default\"](it, f), it);\n    }\n\n    const {\n      offset,\n      limit\n    } = q;\n\n    if (offset) {\n      let i = 0;\n      it = filter__default[\"default\"](it, () => i++ >= offset);\n    }\n\n    if (limit) {\n      it = take__default[\"default\"](it, limit);\n    }\n\n    return it;\n  }\n\n  _query(opts) {\n    const iteratorOpts = {\n      keys: true,\n      keyAsBuffer: true,\n      values: opts.values\n    };\n\n    if (opts.prefix != null) {\n      const prefix = opts.prefix.toString();\n      iteratorOpts.gte = prefix;\n      iteratorOpts.lt = prefix + 'Ã¿';\n    }\n\n    return levelIteratorToIterator(this.db.iterator(iteratorOpts));\n  }\n\n}\n\nfunction levelIteratorToIterator(li) {\n  return {\n    [Symbol.asyncIterator]() {\n      return {\n        next: () => new Promise((resolve, reject) => {\n          li.next((err, key, value) => {\n            if (err) return reject(err);\n\n            if (key == null) {\n              return li.end(err => {\n                if (err) return reject(err);\n                resolve({\n                  done: true,\n                  value: undefined\n                });\n              });\n            }\n\n            resolve({\n              done: false,\n              value: {\n                key: new interfaceDatastore.Key(key, false),\n                value\n              }\n            });\n          });\n        }),\n        return: () => new Promise((resolve, reject) => {\n          li.end(err => {\n            if (err) return reject(err);\n            resolve({\n              done: true,\n              value: undefined\n            });\n          });\n        })\n      };\n    }\n\n  };\n}\n\nexports.LevelDatastore = LevelDatastore;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/datastore-level/cjs/src/index.js"],"names":["Object","defineProperty","exports","value","interfaceDatastore","require","datastoreCore","filter","map","take","sort","leveljs","_interopDefaultLegacy","e","filter__default","map__default","take__default","sort__default","leveljs__default","LevelDatastore","BaseDatastore","constructor","path","opts","db","database","_initDb","Promise","resolve","reject","valueEncoding","compression","err","open","Errors","dbOpenFailedError","put","key","toString","dbWriteFailedError","get","data","notFound","notFoundError","has","delete","del","dbDeleteFailedError","close","batch","ops","push","type","commit","query","q","it","_query","values","prefix","Array","isArray","filters","reduce","f","orders","offset","limit","i","queryKeys","iteratorOpts","keys","keyAsBuffer","gte","lt","levelIteratorToIterator","iterator","li","Symbol","asyncIterator","next","end","done","undefined","Key","return"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar interfaceDatastore = require('interface-datastore');\nvar datastoreCore = require('datastore-core');\nvar filter = require('it-filter');\nvar map = require('it-map');\nvar take = require('it-take');\nvar sort = require('it-sort');\nvar leveljs = require('level');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar filter__default = /*#__PURE__*/_interopDefaultLegacy(filter);\nvar map__default = /*#__PURE__*/_interopDefaultLegacy(map);\nvar take__default = /*#__PURE__*/_interopDefaultLegacy(take);\nvar sort__default = /*#__PURE__*/_interopDefaultLegacy(sort);\nvar leveljs__default = /*#__PURE__*/_interopDefaultLegacy(leveljs);\n\nclass LevelDatastore extends datastoreCore.BaseDatastore {\n  constructor(path, opts) {\n    super();\n    this.path = path;\n    this.opts = opts;\n    if (opts && opts.db) {\n      this.database = opts.db;\n      delete opts.db;\n    } else {\n      this.database = leveljs__default[\"default\"];\n    }\n  }\n  _initDb() {\n    return new Promise((resolve, reject) => {\n      this.db = this.database(this.path, {\n        ...this.opts,\n        valueEncoding: 'binary',\n        compression: false\n      }, err => {\n        if (err) {\n          return reject(err);\n        }\n        resolve(this.db);\n      });\n    });\n  }\n  async open() {\n    try {\n      if (this.db) {\n        await this.db.open();\n      } else {\n        this.db = await this._initDb();\n      }\n    } catch (err) {\n      throw datastoreCore.Errors.dbOpenFailedError(err);\n    }\n  }\n  async put(key, value) {\n    try {\n      await this.db.put(key.toString(), value);\n    } catch (err) {\n      throw datastoreCore.Errors.dbWriteFailedError(err);\n    }\n  }\n  async get(key) {\n    let data;\n    try {\n      data = await this.db.get(key.toString());\n    } catch (err) {\n      if (err.notFound)\n        throw datastoreCore.Errors.notFoundError(err);\n      throw datastoreCore.Errors.dbWriteFailedError(err);\n    }\n    return data;\n  }\n  async has(key) {\n    try {\n      await this.db.get(key.toString());\n    } catch (err) {\n      if (err.notFound)\n        return false;\n      throw err;\n    }\n    return true;\n  }\n  async delete(key) {\n    try {\n      await this.db.del(key.toString());\n    } catch (err) {\n      throw datastoreCore.Errors.dbDeleteFailedError(err);\n    }\n  }\n  close() {\n    return this.db && this.db.close();\n  }\n  batch() {\n    const ops = [];\n    return {\n      put: (key, value) => {\n        ops.push({\n          type: 'put',\n          key: key.toString(),\n          value: value\n        });\n      },\n      delete: key => {\n        ops.push({\n          type: 'del',\n          key: key.toString()\n        });\n      },\n      commit: () => {\n        return this.db.batch(ops);\n      }\n    };\n  }\n  query(q) {\n    let it = this._query({\n      values: true,\n      prefix: q.prefix\n    });\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter__default[\"default\"](it, f), it);\n    }\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sort__default[\"default\"](it, f), it);\n    }\n    const {offset, limit} = q;\n    if (offset) {\n      let i = 0;\n      it = filter__default[\"default\"](it, () => i++ >= offset);\n    }\n    if (limit) {\n      it = take__default[\"default\"](it, limit);\n    }\n    return it;\n  }\n  queryKeys(q) {\n    let it = map__default[\"default\"](this._query({\n      values: false,\n      prefix: q.prefix\n    }), ({key}) => key);\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter__default[\"default\"](it, f), it);\n    }\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sort__default[\"default\"](it, f), it);\n    }\n    const {offset, limit} = q;\n    if (offset) {\n      let i = 0;\n      it = filter__default[\"default\"](it, () => i++ >= offset);\n    }\n    if (limit) {\n      it = take__default[\"default\"](it, limit);\n    }\n    return it;\n  }\n  _query(opts) {\n    const iteratorOpts = {\n      keys: true,\n      keyAsBuffer: true,\n      values: opts.values\n    };\n    if (opts.prefix != null) {\n      const prefix = opts.prefix.toString();\n      iteratorOpts.gte = prefix;\n      iteratorOpts.lt = prefix + 'Ã¿';\n    }\n    return levelIteratorToIterator(this.db.iterator(iteratorOpts));\n  }\n}\nfunction levelIteratorToIterator(li) {\n  return {\n    [Symbol.asyncIterator]() {\n      return {\n        next: () => new Promise((resolve, reject) => {\n          li.next((err, key, value) => {\n            if (err)\n              return reject(err);\n            if (key == null) {\n              return li.end(err => {\n                if (err)\n                  return reject(err);\n                resolve({\n                  done: true,\n                  value: undefined\n                });\n              });\n            }\n            resolve({\n              done: false,\n              value: {\n                key: new interfaceDatastore.Key(key, false),\n                value\n              }\n            });\n          });\n        }),\n        return: () => new Promise((resolve, reject) => {\n          li.end(err => {\n            if (err)\n              return reject(err);\n            resolve({\n              done: true,\n              value: undefined\n            });\n          });\n        })\n      };\n    }\n  };\n}\n\nexports.LevelDatastore = LevelDatastore;\n"]},"metadata":{},"sourceType":"script"}