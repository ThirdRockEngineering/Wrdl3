{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\n\nfunction createStat(_ref) {\n  let {\n    network\n  } = _ref;\n\n  async function stat() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const bitswap = (await network.use(options)).bitswap;\n    const snapshot = bitswap.stat().snapshot;\n    return {\n      provideBufLen: parseInt(snapshot.providesBufferLength.toString()),\n      blocksReceived: BigInt(snapshot.blocksReceived.toString()),\n      wantlist: Array.from(bitswap.getWantlist()).map(e => e[1].cid),\n      peers: bitswap.peers().map(id => id.toB58String()),\n      dupBlksReceived: BigInt(snapshot.dupBlksReceived.toString()),\n      dupDataReceived: BigInt(snapshot.dupDataReceived.toString()),\n      dataReceived: BigInt(snapshot.dataReceived.toString()),\n      blocksSent: BigInt(snapshot.blocksSent.toString()),\n      dataSent: BigInt(snapshot.dataSent.toString())\n    };\n  }\n\n  return withTimeoutOption.withTimeoutOption(stat);\n}\n\nexports.createStat = createStat;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-core/cjs/src/components/bitswap/stat.js"],"names":["Object","defineProperty","exports","value","withTimeoutOption","require","createStat","network","stat","options","bitswap","use","snapshot","provideBufLen","parseInt","providesBufferLength","toString","blocksReceived","BigInt","wantlist","Array","from","getWantlist","map","e","cid","peers","id","toB58String","dupBlksReceived","dupDataReceived","dataReceived","blocksSent","dataSent"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,iBAAiB,GAAGC,OAAO,CAAC,qCAAD,CAA/B;;AAEA,SAASC,UAAT,OAA+B;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;;AAC7B,iBAAeC,IAAf,GAAkC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAChC,UAAMC,OAAO,GAAG,CAAC,MAAMH,OAAO,CAACI,GAAR,CAAYF,OAAZ,CAAP,EAA6BC,OAA7C;AACA,UAAME,QAAQ,GAAGF,OAAO,CAACF,IAAR,GAAeI,QAAhC;AACA,WAAO;AACLC,MAAAA,aAAa,EAAEC,QAAQ,CAACF,QAAQ,CAACG,oBAAT,CAA8BC,QAA9B,EAAD,CADlB;AAELC,MAAAA,cAAc,EAAEC,MAAM,CAACN,QAAQ,CAACK,cAAT,CAAwBD,QAAxB,EAAD,CAFjB;AAGLG,MAAAA,QAAQ,EAAEC,KAAK,CAACC,IAAN,CAAWX,OAAO,CAACY,WAAR,EAAX,EAAkCC,GAAlC,CAAsCC,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAD,CAAKC,GAAhD,CAHL;AAILC,MAAAA,KAAK,EAAEhB,OAAO,CAACgB,KAAR,GAAgBH,GAAhB,CAAoBI,EAAE,IAAIA,EAAE,CAACC,WAAH,EAA1B,CAJF;AAKLC,MAAAA,eAAe,EAAEX,MAAM,CAACN,QAAQ,CAACiB,eAAT,CAAyBb,QAAzB,EAAD,CALlB;AAMLc,MAAAA,eAAe,EAAEZ,MAAM,CAACN,QAAQ,CAACkB,eAAT,CAAyBd,QAAzB,EAAD,CANlB;AAOLe,MAAAA,YAAY,EAAEb,MAAM,CAACN,QAAQ,CAACmB,YAAT,CAAsBf,QAAtB,EAAD,CAPf;AAQLgB,MAAAA,UAAU,EAAEd,MAAM,CAACN,QAAQ,CAACoB,UAAT,CAAoBhB,QAApB,EAAD,CARb;AASLiB,MAAAA,QAAQ,EAAEf,MAAM,CAACN,QAAQ,CAACqB,QAAT,CAAkBjB,QAAlB,EAAD;AATX,KAAP;AAWD;;AACD,SAAOZ,iBAAiB,CAACA,iBAAlB,CAAoCI,IAApC,CAAP;AACD;;AAEDN,OAAO,CAACI,UAAR,GAAqBA,UAArB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\n\nfunction createStat({network}) {\n  async function stat(options = {}) {\n    const bitswap = (await network.use(options)).bitswap;\n    const snapshot = bitswap.stat().snapshot;\n    return {\n      provideBufLen: parseInt(snapshot.providesBufferLength.toString()),\n      blocksReceived: BigInt(snapshot.blocksReceived.toString()),\n      wantlist: Array.from(bitswap.getWantlist()).map(e => e[1].cid),\n      peers: bitswap.peers().map(id => id.toB58String()),\n      dupBlksReceived: BigInt(snapshot.dupBlksReceived.toString()),\n      dupDataReceived: BigInt(snapshot.dupDataReceived.toString()),\n      dataReceived: BigInt(snapshot.dataReceived.toString()),\n      blocksSent: BigInt(snapshot.blocksSent.toString()),\n      dataSent: BigInt(snapshot.dataSent.toString())\n    };\n  }\n  return withTimeoutOption.withTimeoutOption(stat);\n}\n\nexports.createStat = createStat;\n"]},"metadata":{},"sourceType":"script"}