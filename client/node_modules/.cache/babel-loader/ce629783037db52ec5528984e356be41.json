{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar drain = require('it-drain');\n\nvar pushable = require('it-pushable');\n\nvar key = require('interface-datastore/key');\n\nvar cid = require('multiformats/cid');\n\nvar raw = require('multiformats/codecs/raw');\n\nvar Digest = require('multiformats/hashes/digest');\n\nvar base32 = require('multiformats/bases/base32');\n\nvar base58 = require('multiformats/bases/base58');\n\nvar errcode = require('err-code');\n\nvar base = require('blockstore-core/base');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n\n  n['default'] = e;\n  return Object.freeze(n);\n}\n\nvar drain__default = /*#__PURE__*/_interopDefaultLegacy(drain);\n\nvar pushable__default = /*#__PURE__*/_interopDefaultLegacy(pushable);\n\nvar raw__namespace = /*#__PURE__*/_interopNamespace(raw);\n\nvar Digest__namespace = /*#__PURE__*/_interopNamespace(Digest);\n\nvar errcode__default = /*#__PURE__*/_interopDefaultLegacy(errcode);\n\nfunction cidToKey(cid$1) {\n  const c = cid.CID.asCID(cid$1);\n\n  if (!c) {\n    throw errcode__default['default'](new Error('Not a valid cid'), 'ERR_INVALID_CID');\n  }\n\n  return new key.Key('/' + base32.base32.encode(c.multihash.bytes).slice(1).toUpperCase(), false);\n}\n\nfunction keyToCid(key) {\n  return cid.CID.createV1(raw__namespace.code, Digest__namespace.decode(base32.base32.decode('b' + key.toString().slice(1).toLowerCase())));\n}\n\nfunction convertPrefix(prefix) {\n  const firstChar = prefix.substring(0, 1);\n\n  if (firstChar === '/') {\n    return convertPrefix(prefix.substring(1));\n  }\n\n  let decoder;\n\n  if (firstChar.toLowerCase() === 'b') {\n    decoder = input => base32.base32.decode(input.toLowerCase()).subarray(2);\n  } else if (firstChar.toLowerCase() === 'c') {\n    decoder = input => base32.base32pad.decode(input.toLowerCase()).subarray(2);\n  } else if (firstChar === 'z') {\n    decoder = input => base58.base58btc.decode(input).subarray(2);\n  } else if (firstChar === 'Q') {\n    decoder = input => base58.base58btc.decode('z' + input);\n  } else {\n    decoder = input => base32.base32.decode('b' + input.toLowerCase()).subarray(2);\n  }\n\n  let bytes;\n\n  for (let i = 1; i < prefix.length; i++) {\n    try {\n      bytes = decoder(prefix.substring(0, i));\n    } catch (err) {\n      if (err.message !== 'Unexpected end of data') {\n        throw err;\n      }\n    }\n  }\n\n  let str = '/C';\n\n  if (bytes) {\n    str = `/${base32.base32.encode(bytes).slice(1, -1).toUpperCase() || 'C'}`;\n  }\n\n  return str;\n}\n\nfunction convertQuery(query) {\n  return { ...query,\n    prefix: query.prefix ? convertPrefix(query.prefix) : undefined,\n    filters: query.filters ? query.filters.map(filter => pair => {\n      return filter({\n        key: keyToCid(pair.key),\n        value: pair.value\n      });\n    }) : undefined,\n    orders: query.orders ? query.orders.map(order => (a, b) => {\n      return order({\n        key: keyToCid(a.key),\n        value: a.value\n      }, {\n        key: keyToCid(b.key),\n        value: b.value\n      });\n    }) : undefined\n  };\n}\n\nfunction convertKeyQuery(query) {\n  return { ...query,\n    prefix: query.prefix ? convertPrefix(query.prefix) : undefined,\n    filters: query.filters ? query.filters.map(filter => key => {\n      return filter(keyToCid(key));\n    }) : undefined,\n    orders: query.orders ? query.orders.map(order => (a, b) => {\n      return order(keyToCid(a), keyToCid(b));\n    }) : undefined\n  };\n}\n\nclass BlockstoreDatastoreAdapter extends base.BaseBlockstore {\n  constructor(datastore) {\n    super();\n    this.child = datastore;\n  }\n\n  open() {\n    return this.child.open();\n  }\n\n  close() {\n    return this.child.close();\n  }\n\n  async *query(query, options) {\n    for await (const {\n      key,\n      value\n    } of this.child.query(convertQuery(query), options)) {\n      yield {\n        key: keyToCid(key),\n        value\n      };\n    }\n  }\n\n  async *queryKeys(query, options) {\n    for await (const key of this.child.queryKeys(convertKeyQuery(query), options)) {\n      yield keyToCid(key);\n    }\n  }\n\n  async get(cid, options) {\n    return this.child.get(cidToKey(cid), options);\n  }\n\n  async *getMany(cids, options) {\n    for await (const cid of cids) {\n      yield this.get(cid, options);\n    }\n  }\n\n  async put(cid, value, options) {\n    await this.child.put(cidToKey(cid), value, options);\n  }\n\n  async *putMany(blocks, options) {\n    const output = pushable__default['default']();\n    const runner = globalThis.process && globalThis.process.nextTick ? globalThis.process.nextTick : globalThis.setImmediate || globalThis.setTimeout;\n    runner(async () => {\n      try {\n        const store = this.child;\n        await drain__default['default'](this.child.putMany(async function* () {\n          for await (const block of blocks) {\n            const key = cidToKey(block.key);\n            const exists = await store.has(key, options);\n\n            if (!exists) {\n              yield {\n                key,\n                value: block.value\n              };\n            }\n\n            output.push(block);\n          }\n        }()));\n        output.end();\n      } catch (err) {\n        output.end(err);\n      }\n    });\n    yield* output;\n  }\n\n  has(cid, options) {\n    return this.child.has(cidToKey(cid), options);\n  }\n\n  delete(cid, options) {\n    return this.child.delete(cidToKey(cid), options);\n  }\n\n  deleteMany(cids, options) {\n    const out = pushable__default['default']();\n    drain__default['default'](this.child.deleteMany(async function* () {\n      for await (const cid of cids) {\n        yield cidToKey(cid);\n        out.push(cid);\n      }\n\n      out.end();\n    }(), options)).catch(err => {\n      out.end(err);\n    });\n    return out;\n  }\n\n}\n\nexports.BlockstoreDatastoreAdapter = BlockstoreDatastoreAdapter;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/blockstore-datastore-adapter/cjs/src/index.js"],"names":["Object","defineProperty","exports","value","drain","require","pushable","key","cid","raw","Digest","base32","base58","errcode","base","_interopDefaultLegacy","e","_interopNamespace","__esModule","n","create","keys","forEach","k","d","getOwnPropertyDescriptor","get","enumerable","freeze","drain__default","pushable__default","raw__namespace","Digest__namespace","errcode__default","cidToKey","cid$1","c","CID","asCID","Error","Key","encode","multihash","bytes","slice","toUpperCase","keyToCid","createV1","code","decode","toString","toLowerCase","convertPrefix","prefix","firstChar","substring","decoder","input","subarray","base32pad","base58btc","i","length","err","message","str","convertQuery","query","undefined","filters","map","filter","pair","orders","order","a","b","convertKeyQuery","BlockstoreDatastoreAdapter","BaseBlockstore","constructor","datastore","child","open","close","options","queryKeys","getMany","cids","put","putMany","blocks","output","runner","globalThis","process","nextTick","setImmediate","setTimeout","store","block","exists","has","push","end","delete","deleteMany","out","catch"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar drain = require('it-drain');\nvar pushable = require('it-pushable');\nvar key = require('interface-datastore/key');\nvar cid = require('multiformats/cid');\nvar raw = require('multiformats/codecs/raw');\nvar Digest = require('multiformats/hashes/digest');\nvar base32 = require('multiformats/bases/base32');\nvar base58 = require('multiformats/bases/base58');\nvar errcode = require('err-code');\nvar base = require('blockstore-core/base');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n  n['default'] = e;\n  return Object.freeze(n);\n}\n\nvar drain__default = /*#__PURE__*/_interopDefaultLegacy(drain);\nvar pushable__default = /*#__PURE__*/_interopDefaultLegacy(pushable);\nvar raw__namespace = /*#__PURE__*/_interopNamespace(raw);\nvar Digest__namespace = /*#__PURE__*/_interopNamespace(Digest);\nvar errcode__default = /*#__PURE__*/_interopDefaultLegacy(errcode);\n\nfunction cidToKey(cid$1) {\n  const c = cid.CID.asCID(cid$1);\n  if (!c) {\n    throw errcode__default['default'](new Error('Not a valid cid'), 'ERR_INVALID_CID');\n  }\n  return new key.Key('/' + base32.base32.encode(c.multihash.bytes).slice(1).toUpperCase(), false);\n}\nfunction keyToCid(key) {\n  return cid.CID.createV1(raw__namespace.code, Digest__namespace.decode(base32.base32.decode('b' + key.toString().slice(1).toLowerCase())));\n}\nfunction convertPrefix(prefix) {\n  const firstChar = prefix.substring(0, 1);\n  if (firstChar === '/') {\n    return convertPrefix(prefix.substring(1));\n  }\n  let decoder;\n  if (firstChar.toLowerCase() === 'b') {\n    decoder = input => base32.base32.decode(input.toLowerCase()).subarray(2);\n  } else if (firstChar.toLowerCase() === 'c') {\n    decoder = input => base32.base32pad.decode(input.toLowerCase()).subarray(2);\n  } else if (firstChar === 'z') {\n    decoder = input => base58.base58btc.decode(input).subarray(2);\n  } else if (firstChar === 'Q') {\n    decoder = input => base58.base58btc.decode('z' + input);\n  } else {\n    decoder = input => base32.base32.decode('b' + input.toLowerCase()).subarray(2);\n  }\n  let bytes;\n  for (let i = 1; i < prefix.length; i++) {\n    try {\n      bytes = decoder(prefix.substring(0, i));\n    } catch (err) {\n      if (err.message !== 'Unexpected end of data') {\n        throw err;\n      }\n    }\n  }\n  let str = '/C';\n  if (bytes) {\n    str = `/${ base32.base32.encode(bytes).slice(1, -1).toUpperCase() || 'C' }`;\n  }\n  return str;\n}\nfunction convertQuery(query) {\n  return {\n    ...query,\n    prefix: query.prefix ? convertPrefix(query.prefix) : undefined,\n    filters: query.filters ? query.filters.map(filter => pair => {\n      return filter({\n        key: keyToCid(pair.key),\n        value: pair.value\n      });\n    }) : undefined,\n    orders: query.orders ? query.orders.map(order => (a, b) => {\n      return order({\n        key: keyToCid(a.key),\n        value: a.value\n      }, {\n        key: keyToCid(b.key),\n        value: b.value\n      });\n    }) : undefined\n  };\n}\nfunction convertKeyQuery(query) {\n  return {\n    ...query,\n    prefix: query.prefix ? convertPrefix(query.prefix) : undefined,\n    filters: query.filters ? query.filters.map(filter => key => {\n      return filter(keyToCid(key));\n    }) : undefined,\n    orders: query.orders ? query.orders.map(order => (a, b) => {\n      return order(keyToCid(a), keyToCid(b));\n    }) : undefined\n  };\n}\nclass BlockstoreDatastoreAdapter extends base.BaseBlockstore {\n  constructor(datastore) {\n    super();\n    this.child = datastore;\n  }\n  open() {\n    return this.child.open();\n  }\n  close() {\n    return this.child.close();\n  }\n  async *query(query, options) {\n    for await (const {key, value} of this.child.query(convertQuery(query), options)) {\n      yield {\n        key: keyToCid(key),\n        value\n      };\n    }\n  }\n  async *queryKeys(query, options) {\n    for await (const key of this.child.queryKeys(convertKeyQuery(query), options)) {\n      yield keyToCid(key);\n    }\n  }\n  async get(cid, options) {\n    return this.child.get(cidToKey(cid), options);\n  }\n  async *getMany(cids, options) {\n    for await (const cid of cids) {\n      yield this.get(cid, options);\n    }\n  }\n  async put(cid, value, options) {\n    await this.child.put(cidToKey(cid), value, options);\n  }\n  async *putMany(blocks, options) {\n    const output = pushable__default['default']();\n    const runner = globalThis.process && globalThis.process.nextTick ? globalThis.process.nextTick : globalThis.setImmediate || globalThis.setTimeout;\n    runner(async () => {\n      try {\n        const store = this.child;\n        await drain__default['default'](this.child.putMany(async function* () {\n          for await (const block of blocks) {\n            const key = cidToKey(block.key);\n            const exists = await store.has(key, options);\n            if (!exists) {\n              yield {\n                key,\n                value: block.value\n              };\n            }\n            output.push(block);\n          }\n        }()));\n        output.end();\n      } catch (err) {\n        output.end(err);\n      }\n    });\n    yield* output;\n  }\n  has(cid, options) {\n    return this.child.has(cidToKey(cid), options);\n  }\n  delete(cid, options) {\n    return this.child.delete(cidToKey(cid), options);\n  }\n  deleteMany(cids, options) {\n    const out = pushable__default['default']();\n    drain__default['default'](this.child.deleteMany(async function* () {\n      for await (const cid of cids) {\n        yield cidToKey(cid);\n        out.push(cid);\n      }\n      out.end();\n    }(), options)).catch(err => {\n      out.end(err);\n    });\n    return out;\n  }\n}\n\nexports.BlockstoreDatastoreAdapter = BlockstoreDatastoreAdapter;\n"]},"metadata":{},"sourceType":"script"}