{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar index = require('../ipns/index.js');\n\nvar config = require('../ipns/routing/config.js');\n\nvar offlineDatastore = require('../ipns/routing/offline-datastore.js');\n\nvar errors = require('../errors.js');\n\nvar debug = require('debug');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nconst log = debug__default[\"default\"]('ipfs:components:ipns');\n\nclass IPNSAPI {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      pass: ''\n    };\n    this.options = options;\n    this.offline = null;\n    this.online = null;\n  }\n\n  getIPNS() {\n    const ipns = this.online || this.offline;\n\n    if (ipns) {\n      return ipns;\n    } else {\n      throw new errors.NotInitializedError();\n    }\n  }\n\n  get routing() {\n    return this.getIPNS().routing;\n  }\n\n  startOffline(_ref) {\n    let {\n      repo,\n      peerId,\n      keychain\n    } = _ref;\n\n    if (this.offline != null) {\n      throw new errors.AlreadyInitializedError();\n    }\n\n    log('initializing IPNS keyspace');\n    const routing = new offlineDatastore.OfflineDatastore(repo);\n    const ipns = new index.IPNS(routing, repo.datastore, peerId, keychain, this.options);\n    this.offline = ipns;\n  }\n\n  async startOnline(_ref2) {\n    let {\n      libp2p,\n      repo,\n      peerId,\n      keychain\n    } = _ref2;\n\n    if (this.online != null) {\n      throw new errors.AlreadyInitializedError();\n    }\n\n    const routing = config.createRouting({\n      libp2p,\n      repo,\n      peerId,\n      options: this.options\n    });\n    const ipns = new index.IPNS(routing, repo.datastore, peerId, keychain, this.options);\n    await ipns.republisher.start();\n    this.online = ipns;\n  }\n\n  async stop() {\n    const ipns = this.online;\n\n    if (ipns) {\n      await ipns.republisher.stop();\n      this.online = null;\n    }\n  }\n\n  publish(privKey, value, lifetime) {\n    return this.getIPNS().publish(privKey, value, lifetime);\n  }\n\n  resolve(name, options) {\n    return this.getIPNS().resolve(name, options);\n  }\n\n  initializeKeyspace(privKey, value) {\n    return this.getIPNS().initializeKeyspace(privKey, value);\n  }\n\n}\n\nexports.IPNSAPI = IPNSAPI;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-core/cjs/src/components/ipns.js"],"names":["Object","defineProperty","exports","value","index","require","config","offlineDatastore","errors","debug","_interopDefaultLegacy","e","debug__default","log","IPNSAPI","constructor","options","pass","offline","online","getIPNS","ipns","NotInitializedError","routing","startOffline","repo","peerId","keychain","AlreadyInitializedError","OfflineDatastore","IPNS","datastore","startOnline","libp2p","createRouting","republisher","start","stop","publish","privKey","lifetime","resolve","name","initializeKeyspace"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar index = require('../ipns/index.js');\nvar config = require('../ipns/routing/config.js');\nvar offlineDatastore = require('../ipns/routing/offline-datastore.js');\nvar errors = require('../errors.js');\nvar debug = require('debug');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nconst log = debug__default[\"default\"]('ipfs:components:ipns');\nclass IPNSAPI {\n  constructor(options = { pass: '' }) {\n    this.options = options;\n    this.offline = null;\n    this.online = null;\n  }\n  getIPNS() {\n    const ipns = this.online || this.offline;\n    if (ipns) {\n      return ipns;\n    } else {\n      throw new errors.NotInitializedError();\n    }\n  }\n  get routing() {\n    return this.getIPNS().routing;\n  }\n  startOffline({repo, peerId, keychain}) {\n    if (this.offline != null) {\n      throw new errors.AlreadyInitializedError();\n    }\n    log('initializing IPNS keyspace');\n    const routing = new offlineDatastore.OfflineDatastore(repo);\n    const ipns = new index.IPNS(routing, repo.datastore, peerId, keychain, this.options);\n    this.offline = ipns;\n  }\n  async startOnline({libp2p, repo, peerId, keychain}) {\n    if (this.online != null) {\n      throw new errors.AlreadyInitializedError();\n    }\n    const routing = config.createRouting({\n      libp2p,\n      repo,\n      peerId,\n      options: this.options\n    });\n    const ipns = new index.IPNS(routing, repo.datastore, peerId, keychain, this.options);\n    await ipns.republisher.start();\n    this.online = ipns;\n  }\n  async stop() {\n    const ipns = this.online;\n    if (ipns) {\n      await ipns.republisher.stop();\n      this.online = null;\n    }\n  }\n  publish(privKey, value, lifetime) {\n    return this.getIPNS().publish(privKey, value, lifetime);\n  }\n  resolve(name, options) {\n    return this.getIPNS().resolve(name, options);\n  }\n  initializeKeyspace(privKey, value) {\n    return this.getIPNS().initializeKeyspace(privKey, value);\n  }\n}\n\nexports.IPNSAPI = IPNSAPI;\n"]},"metadata":{},"sourceType":"script"}