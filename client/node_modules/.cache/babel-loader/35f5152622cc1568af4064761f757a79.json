{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar ipfsUnixfsExporter = require('ipfs-unixfs-exporter');\n\nvar toMfsPath = require('./utils/to-mfs-path.js');\n\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\n\nvar map = require('it-map');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar map__default = /*#__PURE__*/_interopDefaultLegacy(map);\n\nconst toOutput = fsEntry => {\n  const output = {\n    cid: fsEntry.cid,\n    name: fsEntry.name,\n    type: fsEntry.type === 'directory' ? 'directory' : 'file',\n    size: fsEntry.size\n  };\n\n  if (fsEntry.type === 'file' || fsEntry.type === 'directory') {\n    output.mode = fsEntry.unixfs.mode;\n    output.mtime = fsEntry.unixfs.mtime;\n  }\n\n  return output;\n};\n\nfunction createLs(context) {\n  async function* mfsLs(path) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const mfsPath = await toMfsPath.toMfsPath(context, path, options);\n    const fsEntry = await ipfsUnixfsExporter.exporter(mfsPath.mfsPath, context.repo.blocks);\n\n    if (fsEntry.type === 'directory') {\n      yield* map__default[\"default\"](fsEntry.content(options), toOutput);\n      return;\n    }\n\n    yield toOutput(fsEntry);\n  }\n\n  return withTimeoutOption.withTimeoutOption(mfsLs);\n}\n\nexports.createLs = createLs;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-core/cjs/src/components/files/ls.js"],"names":["Object","defineProperty","exports","value","ipfsUnixfsExporter","require","toMfsPath","withTimeoutOption","map","_interopDefaultLegacy","e","map__default","toOutput","fsEntry","output","cid","name","type","size","mode","unixfs","mtime","createLs","context","mfsLs","path","options","mfsPath","exporter","repo","blocks","content"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,kBAAkB,GAAGC,OAAO,CAAC,sBAAD,CAAhC;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,wBAAD,CAAvB;;AACA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,qCAAD,CAA/B;;AACA,IAAIG,GAAG,GAAGH,OAAO,CAAC,QAAD,CAAjB;;AAEA,SAASI,qBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAOA,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAlB,IAA8B,aAAaA,CAA3C,GAA+CA,CAA/C,GAAmD;AAAE,eAAWA;AAAb,GAA1D;AAA6E;;AAElH,IAAIC,YAAY,GAAG,aAAaF,qBAAqB,CAACD,GAAD,CAArD;;AAEA,MAAMI,QAAQ,GAAGC,OAAO,IAAI;AAC1B,QAAMC,MAAM,GAAG;AACbC,IAAAA,GAAG,EAAEF,OAAO,CAACE,GADA;AAEbC,IAAAA,IAAI,EAAEH,OAAO,CAACG,IAFD;AAGbC,IAAAA,IAAI,EAAEJ,OAAO,CAACI,IAAR,KAAiB,WAAjB,GAA+B,WAA/B,GAA6C,MAHtC;AAIbC,IAAAA,IAAI,EAAEL,OAAO,CAACK;AAJD,GAAf;;AAMA,MAAIL,OAAO,CAACI,IAAR,KAAiB,MAAjB,IAA2BJ,OAAO,CAACI,IAAR,KAAiB,WAAhD,EAA6D;AAC3DH,IAAAA,MAAM,CAACK,IAAP,GAAcN,OAAO,CAACO,MAAR,CAAeD,IAA7B;AACAL,IAAAA,MAAM,CAACO,KAAP,GAAeR,OAAO,CAACO,MAAR,CAAeC,KAA9B;AACD;;AACD,SAAOP,MAAP;AACD,CAZD;;AAaA,SAASQ,QAAT,CAAkBC,OAAlB,EAA2B;AACzB,kBAAgBC,KAAhB,CAAsBC,IAAtB,EAA0C;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACxC,UAAMC,OAAO,GAAG,MAAMrB,SAAS,CAACA,SAAV,CAAoBiB,OAApB,EAA6BE,IAA7B,EAAmCC,OAAnC,CAAtB;AACA,UAAMb,OAAO,GAAG,MAAMT,kBAAkB,CAACwB,QAAnB,CAA4BD,OAAO,CAACA,OAApC,EAA6CJ,OAAO,CAACM,IAAR,CAAaC,MAA1D,CAAtB;;AACA,QAAIjB,OAAO,CAACI,IAAR,KAAiB,WAArB,EAAkC;AAChC,aAAON,YAAY,CAAC,SAAD,CAAZ,CAAwBE,OAAO,CAACkB,OAAR,CAAgBL,OAAhB,CAAxB,EAAkDd,QAAlD,CAAP;AACA;AACD;;AACD,UAAMA,QAAQ,CAACC,OAAD,CAAd;AACD;;AACD,SAAON,iBAAiB,CAACA,iBAAlB,CAAoCiB,KAApC,CAAP;AACD;;AAEDtB,OAAO,CAACoB,QAAR,GAAmBA,QAAnB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar ipfsUnixfsExporter = require('ipfs-unixfs-exporter');\nvar toMfsPath = require('./utils/to-mfs-path.js');\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\nvar map = require('it-map');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar map__default = /*#__PURE__*/_interopDefaultLegacy(map);\n\nconst toOutput = fsEntry => {\n  const output = {\n    cid: fsEntry.cid,\n    name: fsEntry.name,\n    type: fsEntry.type === 'directory' ? 'directory' : 'file',\n    size: fsEntry.size\n  };\n  if (fsEntry.type === 'file' || fsEntry.type === 'directory') {\n    output.mode = fsEntry.unixfs.mode;\n    output.mtime = fsEntry.unixfs.mtime;\n  }\n  return output;\n};\nfunction createLs(context) {\n  async function* mfsLs(path, options = {}) {\n    const mfsPath = await toMfsPath.toMfsPath(context, path, options);\n    const fsEntry = await ipfsUnixfsExporter.exporter(mfsPath.mfsPath, context.repo.blocks);\n    if (fsEntry.type === 'directory') {\n      yield* map__default[\"default\"](fsEntry.content(options), toOutput);\n      return;\n    }\n    yield toOutput(fsEntry);\n  }\n  return withTimeoutOption.withTimeoutOption(mfsLs);\n}\n\nexports.createLs = createLs;\n"]},"metadata":{},"sourceType":"script"}