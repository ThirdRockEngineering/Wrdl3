{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar PeerId = require('peer-id');\n\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar PeerId__default = /*#__PURE__*/_interopDefaultLegacy(PeerId);\n\nfunction createWantlistForPeer(_ref) {\n  let {\n    network\n  } = _ref;\n\n  async function wantlistForPeer(peerId) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      bitswap\n    } = await network.use(options);\n    const list = bitswap.wantlistForPeer(PeerId__default[\"default\"].createFromB58String(peerId));\n    return Array.from(list).map(e => e[1].cid);\n  }\n\n  return withTimeoutOption.withTimeoutOption(wantlistForPeer);\n}\n\nexports.createWantlistForPeer = createWantlistForPeer;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-core/cjs/src/components/bitswap/wantlist-for-peer.js"],"names":["Object","defineProperty","exports","value","PeerId","require","withTimeoutOption","_interopDefaultLegacy","e","PeerId__default","createWantlistForPeer","network","wantlistForPeer","peerId","options","bitswap","use","list","createFromB58String","Array","from","map","cid"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,qCAAD,CAA/B;;AAEA,SAASE,qBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAOA,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAlB,IAA8B,aAAaA,CAA3C,GAA+CA,CAA/C,GAAmD;AAAE,eAAWA;AAAb,GAA1D;AAA6E;;AAElH,IAAIC,eAAe,GAAG,aAAaF,qBAAqB,CAACH,MAAD,CAAxD;;AAEA,SAASM,qBAAT,OAA0C;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;;AACxC,iBAAeC,eAAf,CAA+BC,MAA/B,EAAqD;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACnD,UAAM;AAACC,MAAAA;AAAD,QAAY,MAAMJ,OAAO,CAACK,GAAR,CAAYF,OAAZ,CAAxB;AACA,UAAMG,IAAI,GAAGF,OAAO,CAACH,eAAR,CAAwBH,eAAe,CAAC,SAAD,CAAf,CAA2BS,mBAA3B,CAA+CL,MAA/C,CAAxB,CAAb;AACA,WAAOM,KAAK,CAACC,IAAN,CAAWH,IAAX,EAAiBI,GAAjB,CAAqBb,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAD,CAAKc,GAA/B,CAAP;AACD;;AACD,SAAOhB,iBAAiB,CAACA,iBAAlB,CAAoCM,eAApC,CAAP;AACD;;AAEDV,OAAO,CAACQ,qBAAR,GAAgCA,qBAAhC","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar PeerId = require('peer-id');\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar PeerId__default = /*#__PURE__*/_interopDefaultLegacy(PeerId);\n\nfunction createWantlistForPeer({network}) {\n  async function wantlistForPeer(peerId, options = {}) {\n    const {bitswap} = await network.use(options);\n    const list = bitswap.wantlistForPeer(PeerId__default[\"default\"].createFromB58String(peerId));\n    return Array.from(list).map(e => e[1].cid);\n  }\n  return withTimeoutOption.withTimeoutOption(wantlistForPeer);\n}\n\nexports.createWantlistForPeer = createWantlistForPeer;\n"]},"metadata":{},"sourceType":"script"}