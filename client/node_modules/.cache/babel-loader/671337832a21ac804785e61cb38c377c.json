{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar createLock = require('./utils/create-lock.js');\n\nvar isIpfs = require('is-ipfs');\n\nvar stat = require('./stat.js');\n\nvar chmod = require('./chmod.js');\n\nvar cp = require('./cp.js');\n\nvar flush = require('./flush.js');\n\nvar mkdir = require('./mkdir.js');\n\nvar mv = require('./mv.js');\n\nvar rm = require('./rm.js');\n\nvar touch = require('./touch.js');\n\nvar read = require('./read.js');\n\nvar write = require('./write.js');\n\nvar ls = require('./ls.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar isIpfs__default = /*#__PURE__*/_interopDefaultLegacy(isIpfs);\n\nconst readOperations = {\n  stat: stat.createStat\n};\nconst writeOperations = {\n  chmod: chmod.createChmod,\n  cp: cp.createCp,\n  flush: flush.createFlush,\n  mkdir: mkdir.createMkdir,\n  mv: mv.createMv,\n  rm: rm.createRm,\n  touch: touch.createTouch\n};\nconst unwrappedOperations = {\n  write: write.createWrite,\n  read: read.createRead,\n  ls: ls.createLs\n};\n\nconst wrap = _ref => {\n  let {\n    options,\n    mfs,\n    operations,\n    lock\n  } = _ref;\n  Object.keys(operations).forEach(key => {\n    mfs[key] = lock(operations[key](options));\n  });\n};\n\nconst defaultOptions = {\n  repoOwner: true,\n  repo: null\n};\n\nfunction createMfs(options) {\n  const {\n    repoOwner\n  } = Object.assign({}, defaultOptions || {}, options);\n  const lock = createLock.createLock(repoOwner);\n\n  const readLock = operation => {\n    return lock.readLock(operation);\n  };\n\n  const writeLock = operation => {\n    return lock.writeLock(operation);\n  };\n\n  const mfs = {};\n  wrap({\n    options,\n    mfs,\n    operations: readOperations,\n    lock: readLock\n  });\n  wrap({\n    options,\n    mfs,\n    operations: writeOperations,\n    lock: writeLock\n  });\n  Object.keys(unwrappedOperations).forEach(key => {\n    mfs[key] = unwrappedOperations[key](options);\n  });\n  return mfs;\n}\n\nfunction createFiles(_ref2) {\n  let {\n    repo,\n    preload,\n    hashers,\n    options: constructorOptions\n  } = _ref2;\n  const methods = createMfs({\n    repo,\n    repoOwner: Boolean(constructorOptions.repoOwner),\n    hashers\n  });\n\n  const withPreload = fn => {\n    const wrapped = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      const paths = args.filter(arg => isIpfs__default[\"default\"].ipfsPath(arg) || isIpfs__default[\"default\"].cid(arg));\n\n      if (paths.length) {\n        const options = args[args.length - 1];\n\n        if (options && options.preload !== false) {\n          paths.forEach(path => preload(path));\n        }\n      }\n\n      return fn(...args);\n    };\n\n    return wrapped;\n  };\n\n  return { ...methods,\n    chmod: methods.chmod,\n    cp: withPreload(methods.cp),\n    mkdir: methods.mkdir,\n    stat: withPreload(methods.stat),\n    rm: methods.rm,\n    read: withPreload(methods.read),\n    touch: methods.touch,\n    write: methods.write,\n    mv: withPreload(methods.mv),\n    flush: methods.flush,\n    ls: withPreload(async function* () {\n      for await (const file of methods.ls(...arguments)) {\n        yield { ...file,\n          size: file.size || 0\n        };\n      }\n    })\n  };\n}\n\nexports.createFiles = createFiles;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-core/cjs/src/components/files/index.js"],"names":["Object","defineProperty","exports","value","createLock","require","isIpfs","stat","chmod","cp","flush","mkdir","mv","rm","touch","read","write","ls","_interopDefaultLegacy","e","isIpfs__default","readOperations","createStat","writeOperations","createChmod","createCp","createFlush","createMkdir","createMv","createRm","createTouch","unwrappedOperations","createWrite","createRead","createLs","wrap","options","mfs","operations","lock","keys","forEach","key","defaultOptions","repoOwner","repo","createMfs","assign","readLock","operation","writeLock","createFiles","preload","hashers","constructorOptions","methods","Boolean","withPreload","fn","wrapped","args","paths","filter","arg","ipfsPath","cid","length","path","file","size"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar createLock = require('./utils/create-lock.js');\nvar isIpfs = require('is-ipfs');\nvar stat = require('./stat.js');\nvar chmod = require('./chmod.js');\nvar cp = require('./cp.js');\nvar flush = require('./flush.js');\nvar mkdir = require('./mkdir.js');\nvar mv = require('./mv.js');\nvar rm = require('./rm.js');\nvar touch = require('./touch.js');\nvar read = require('./read.js');\nvar write = require('./write.js');\nvar ls = require('./ls.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar isIpfs__default = /*#__PURE__*/_interopDefaultLegacy(isIpfs);\n\nconst readOperations = { stat: stat.createStat };\nconst writeOperations = {\n  chmod: chmod.createChmod,\n  cp: cp.createCp,\n  flush: flush.createFlush,\n  mkdir: mkdir.createMkdir,\n  mv: mv.createMv,\n  rm: rm.createRm,\n  touch: touch.createTouch\n};\nconst unwrappedOperations = {\n  write: write.createWrite,\n  read: read.createRead,\n  ls: ls.createLs\n};\nconst wrap = ({options, mfs, operations, lock}) => {\n  Object.keys(operations).forEach(key => {\n    mfs[key] = lock(operations[key](options));\n  });\n};\nconst defaultOptions = {\n  repoOwner: true,\n  repo: null\n};\nfunction createMfs(options) {\n  const {repoOwner} = Object.assign({}, defaultOptions || {}, options);\n  const lock = createLock.createLock(repoOwner);\n  const readLock = operation => {\n    return lock.readLock(operation);\n  };\n  const writeLock = operation => {\n    return lock.writeLock(operation);\n  };\n  const mfs = {};\n  wrap({\n    options,\n    mfs,\n    operations: readOperations,\n    lock: readLock\n  });\n  wrap({\n    options,\n    mfs,\n    operations: writeOperations,\n    lock: writeLock\n  });\n  Object.keys(unwrappedOperations).forEach(key => {\n    mfs[key] = unwrappedOperations[key](options);\n  });\n  return mfs;\n}\nfunction createFiles({\n  repo,\n  preload,\n  hashers,\n  options: constructorOptions\n}) {\n  const methods = createMfs({\n    repo,\n    repoOwner: Boolean(constructorOptions.repoOwner),\n    hashers\n  });\n  const withPreload = fn => {\n    const wrapped = (...args) => {\n      const paths = args.filter(arg => isIpfs__default[\"default\"].ipfsPath(arg) || isIpfs__default[\"default\"].cid(arg));\n      if (paths.length) {\n        const options = args[args.length - 1];\n        if (options && options.preload !== false) {\n          paths.forEach(path => preload(path));\n        }\n      }\n      return fn(...args);\n    };\n    return wrapped;\n  };\n  return {\n    ...methods,\n    chmod: methods.chmod,\n    cp: withPreload(methods.cp),\n    mkdir: methods.mkdir,\n    stat: withPreload(methods.stat),\n    rm: methods.rm,\n    read: withPreload(methods.read),\n    touch: methods.touch,\n    write: methods.write,\n    mv: withPreload(methods.mv),\n    flush: methods.flush,\n    ls: withPreload(async function* (...args) {\n      for await (const file of methods.ls(...args)) {\n        yield {\n          ...file,\n          size: file.size || 0\n        };\n      }\n    })\n  };\n}\n\nexports.createFiles = createFiles;\n"]},"metadata":{},"sourceType":"script"}