{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar base58 = require('multiformats/bases/base58');\n\nclass WantListEntry {\n  constructor(cid, priority, wantType) {\n    this._refCounter = 1;\n    this.cid = cid;\n    this.priority = priority || 1;\n    this.wantType = wantType;\n  }\n\n  inc() {\n    this._refCounter += 1;\n  }\n\n  dec() {\n    this._refCounter = Math.max(0, this._refCounter - 1);\n  }\n\n  hasRefs() {\n    return this._refCounter > 0;\n  }\n\n  get [Symbol.toStringTag]() {\n    const cidStr = this.cid.toString(base58.base58btc);\n    return `WantlistEntry <key: ${cidStr}, priority: ${this.priority}, refs: ${this._refCounter}>`;\n  }\n\n  equals(other) {\n    return this._refCounter === other._refCounter && this.cid.equals(other.cid) && this.priority === other.priority && this.wantType === other.wantType;\n  }\n\n}\n\nexports.WantListEntry = WantListEntry;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-bitswap/cjs/src/wantlist/entry.js"],"names":["Object","defineProperty","exports","value","base58","require","WantListEntry","constructor","cid","priority","wantType","_refCounter","inc","dec","Math","max","hasRefs","Symbol","toStringTag","cidStr","toString","base58btc","equals","other"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,2BAAD,CAApB;;AAEA,MAAMC,aAAN,CAAoB;AAClBC,EAAAA,WAAW,CAACC,GAAD,EAAMC,QAAN,EAAgBC,QAAhB,EAA0B;AACnC,SAAKC,WAAL,GAAmB,CAAnB;AACA,SAAKH,GAAL,GAAWA,GAAX;AACA,SAAKC,QAAL,GAAgBA,QAAQ,IAAI,CAA5B;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACD;;AACDE,EAAAA,GAAG,GAAG;AACJ,SAAKD,WAAL,IAAoB,CAApB;AACD;;AACDE,EAAAA,GAAG,GAAG;AACJ,SAAKF,WAAL,GAAmBG,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,KAAKJ,WAAL,GAAmB,CAA/B,CAAnB;AACD;;AACDK,EAAAA,OAAO,GAAG;AACR,WAAO,KAAKL,WAAL,GAAmB,CAA1B;AACD;;AACsB,OAAlBM,MAAM,CAACC,WAAW,IAAI;AACzB,UAAMC,MAAM,GAAG,KAAKX,GAAL,CAASY,QAAT,CAAkBhB,MAAM,CAACiB,SAAzB,CAAf;AACA,WAAQ,uBAAuBF,MAAQ,eAAe,KAAKV,QAAU,WAAW,KAAKE,WAAa,GAAlG;AACD;;AACDW,EAAAA,MAAM,CAACC,KAAD,EAAQ;AACZ,WAAO,KAAKZ,WAAL,KAAqBY,KAAK,CAACZ,WAA3B,IAA0C,KAAKH,GAAL,CAASc,MAAT,CAAgBC,KAAK,CAACf,GAAtB,CAA1C,IAAwE,KAAKC,QAAL,KAAkBc,KAAK,CAACd,QAAhG,IAA4G,KAAKC,QAAL,KAAkBa,KAAK,CAACb,QAA3I;AACD;;AAtBiB;;AAyBpBR,OAAO,CAACI,aAAR,GAAwBA,aAAxB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base58 = require('multiformats/bases/base58');\n\nclass WantListEntry {\n  constructor(cid, priority, wantType) {\n    this._refCounter = 1;\n    this.cid = cid;\n    this.priority = priority || 1;\n    this.wantType = wantType;\n  }\n  inc() {\n    this._refCounter += 1;\n  }\n  dec() {\n    this._refCounter = Math.max(0, this._refCounter - 1);\n  }\n  hasRefs() {\n    return this._refCounter > 0;\n  }\n  get [Symbol.toStringTag]() {\n    const cidStr = this.cid.toString(base58.base58btc);\n    return `WantlistEntry <key: ${ cidStr }, priority: ${ this.priority }, refs: ${ this._refCounter }>`;\n  }\n  equals(other) {\n    return this._refCounter === other._refCounter && this.cid.equals(other.cid) && this.priority === other.priority && this.wantType === other.wantType;\n  }\n}\n\nexports.WantListEntry = WantListEntry;\n"]},"metadata":{},"sourceType":"script"}