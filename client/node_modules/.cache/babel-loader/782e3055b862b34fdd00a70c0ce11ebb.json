{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar dagPB = require('@ipld/dag-pb');\n\nvar dagCBOR = require('@ipld/dag-cbor');\n\nvar dagJSON = require('@ipld/dag-json');\n\nvar raw = require('multiformats/codecs/raw');\n\nvar cid = require('multiformats/cid');\n\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar dagPB__namespace = /*#__PURE__*/_interopNamespace(dagPB);\n\nvar dagCBOR__namespace = /*#__PURE__*/_interopNamespace(dagCBOR);\n\nvar dagJSON__namespace = /*#__PURE__*/_interopNamespace(dagJSON);\n\nvar raw__namespace = /*#__PURE__*/_interopNamespace(raw);\n\nfunction findLinks(node) {\n  let links = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  for (const key in node) {\n    const val = node[key];\n\n    if (key === '/' && Object.keys(node).length === 1) {\n      try {\n        links.push({\n          Name: '',\n          Tsize: 0,\n          Hash: cid.CID.parse(val)\n        });\n        continue;\n      } catch (_) {}\n    }\n\n    const cid$1 = cid.CID.asCID(val);\n\n    if (cid$1) {\n      links.push({\n        Name: '',\n        Tsize: 0,\n        Hash: cid$1\n      });\n      continue;\n    }\n\n    if (Array.isArray(val)) {\n      findLinks(val, links);\n    }\n\n    if (val && typeof val === 'object') {\n      findLinks(val, links);\n    }\n  }\n\n  return links;\n}\n\nfunction createLinks(_ref) {\n  let {\n    repo,\n    codecs\n  } = _ref;\n\n  async function links(cid) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const codec = await codecs.getCodec(cid.code);\n    const block = await repo.blocks.get(cid, options);\n    const node = codec.decode(block);\n\n    switch (cid.code) {\n      case raw__namespace.code:\n        return [];\n\n      case dagPB__namespace.code:\n        return node.Links;\n\n      case dagCBOR__namespace.code:\n      case dagJSON__namespace.code:\n        return findLinks(node);\n\n      default:\n        throw new Error(`Cannot resolve links from codec ${cid.code}`);\n    }\n  }\n\n  return withTimeoutOption.withTimeoutOption(links);\n}\n\nexports.createLinks = createLinks;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-core/cjs/src/components/object/links.js"],"names":["Object","defineProperty","exports","value","dagPB","require","dagCBOR","dagJSON","raw","cid","withTimeoutOption","_interopNamespace","e","__esModule","n","create","keys","forEach","k","d","getOwnPropertyDescriptor","get","enumerable","freeze","dagPB__namespace","dagCBOR__namespace","dagJSON__namespace","raw__namespace","findLinks","node","links","key","val","length","push","Name","Tsize","Hash","CID","parse","_","cid$1","asCID","Array","isArray","createLinks","repo","codecs","options","codec","getCodec","code","block","blocks","decode","Links","Error"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar dagPB = require('@ipld/dag-pb');\nvar dagCBOR = require('@ipld/dag-cbor');\nvar dagJSON = require('@ipld/dag-json');\nvar raw = require('multiformats/codecs/raw');\nvar cid = require('multiformats/cid');\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar dagPB__namespace = /*#__PURE__*/_interopNamespace(dagPB);\nvar dagCBOR__namespace = /*#__PURE__*/_interopNamespace(dagCBOR);\nvar dagJSON__namespace = /*#__PURE__*/_interopNamespace(dagJSON);\nvar raw__namespace = /*#__PURE__*/_interopNamespace(raw);\n\nfunction findLinks(node, links = []) {\n  for (const key in node) {\n    const val = node[key];\n    if (key === '/' && Object.keys(node).length === 1) {\n      try {\n        links.push({\n          Name: '',\n          Tsize: 0,\n          Hash: cid.CID.parse(val)\n        });\n        continue;\n      } catch (_) {\n      }\n    }\n    const cid$1 = cid.CID.asCID(val);\n    if (cid$1) {\n      links.push({\n        Name: '',\n        Tsize: 0,\n        Hash: cid$1\n      });\n      continue;\n    }\n    if (Array.isArray(val)) {\n      findLinks(val, links);\n    }\n    if (val && typeof val === 'object') {\n      findLinks(val, links);\n    }\n  }\n  return links;\n}\nfunction createLinks({repo, codecs}) {\n  async function links(cid, options = {}) {\n    const codec = await codecs.getCodec(cid.code);\n    const block = await repo.blocks.get(cid, options);\n    const node = codec.decode(block);\n    switch (cid.code) {\n    case raw__namespace.code:\n      return [];\n    case dagPB__namespace.code:\n      return node.Links;\n    case dagCBOR__namespace.code:\n    case dagJSON__namespace.code:\n      return findLinks(node);\n    default:\n      throw new Error(`Cannot resolve links from codec ${ cid.code }`);\n    }\n  }\n  return withTimeoutOption.withTimeoutOption(links);\n}\n\nexports.createLinks = createLinks;\n"]},"metadata":{},"sourceType":"script"}