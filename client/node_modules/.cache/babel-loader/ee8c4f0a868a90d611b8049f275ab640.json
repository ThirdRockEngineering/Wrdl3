{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar utils = require('./utils.js');\n\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\n\nfunction createState(_ref) {\n  let {\n    ipns,\n    options\n  } = _ref;\n  const experimental = options.EXPERIMENTAL;\n\n  async function state() {\n    let _options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    try {\n      return {\n        enabled: Boolean(utils.getPubsubRouting(ipns, experimental))\n      };\n    } catch (err) {\n      return {\n        enabled: false\n      };\n    }\n  }\n\n  return withTimeoutOption.withTimeoutOption(state);\n}\n\nexports.createState = createState;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-core/cjs/src/components/name/pubsub/state.js"],"names":["Object","defineProperty","exports","value","utils","require","withTimeoutOption","createState","ipns","options","experimental","EXPERIMENTAL","state","_options","enabled","Boolean","getPubsubRouting","err"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,YAAD,CAAnB;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,qCAAD,CAA/B;;AAEA,SAASE,WAAT,OAAsC;AAAA,MAAjB;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAiB;AACpC,QAAMC,YAAY,GAAGD,OAAO,CAACE,YAA7B;;AACA,iBAAeC,KAAf,GAAoC;AAAA,QAAfC,QAAe,uEAAJ,EAAI;;AAClC,QAAI;AACF,aAAO;AAAEC,QAAAA,OAAO,EAAEC,OAAO,CAACX,KAAK,CAACY,gBAAN,CAAuBR,IAAvB,EAA6BE,YAA7B,CAAD;AAAlB,OAAP;AACD,KAFD,CAEE,OAAOO,GAAP,EAAY;AACZ,aAAO;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAP;AACD;AACF;;AACD,SAAOR,iBAAiB,CAACA,iBAAlB,CAAoCM,KAApC,CAAP;AACD;;AAEDV,OAAO,CAACK,WAAR,GAAsBA,WAAtB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('./utils.js');\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\n\nfunction createState({ipns, options}) {\n  const experimental = options.EXPERIMENTAL;\n  async function state(_options = {}) {\n    try {\n      return { enabled: Boolean(utils.getPubsubRouting(ipns, experimental)) };\n    } catch (err) {\n      return { enabled: false };\n    }\n  }\n  return withTimeoutOption.withTimeoutOption(state);\n}\n\nexports.createState = createState;\n"]},"metadata":{},"sourceType":"script"}