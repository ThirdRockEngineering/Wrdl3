{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar debug = require('debug');\n\nvar utils = require('../../../utils.js');\n\nvar errCode = require('err-code');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nconst log = debug__default[\"default\"]('ipfs:mfs:utils:update-mfs-root');\n\nasync function updateMfsRoot(context, cid, options) {\n  if (options && options.signal && options.signal.aborted) {\n    throw errCode__default[\"default\"](new Error('Request aborted'), 'ERR_ABORTED', {\n      name: 'Aborted'\n    });\n  }\n\n  log(`New MFS root will be ${cid}`);\n  await context.repo.datastore.put(utils.MFS_ROOT_KEY, cid.bytes);\n  return cid;\n}\n\nexports.updateMfsRoot = updateMfsRoot;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-core/cjs/src/components/files/utils/update-mfs-root.js"],"names":["Object","defineProperty","exports","value","debug","require","utils","errCode","_interopDefaultLegacy","e","debug__default","errCode__default","log","updateMfsRoot","context","cid","options","signal","aborted","Error","name","repo","datastore","put","MFS_ROOT_KEY","bytes"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,mBAAD,CAAnB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,UAAD,CAArB;;AAEA,SAASG,qBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAOA,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAlB,IAA8B,aAAaA,CAA3C,GAA+CA,CAA/C,GAAmD;AAAE,eAAWA;AAAb,GAA1D;AAA6E;;AAElH,IAAIC,cAAc,GAAG,aAAaF,qBAAqB,CAACJ,KAAD,CAAvD;;AACA,IAAIO,gBAAgB,GAAG,aAAaH,qBAAqB,CAACD,OAAD,CAAzD;;AAEA,MAAMK,GAAG,GAAGF,cAAc,CAAC,SAAD,CAAd,CAA0B,gCAA1B,CAAZ;;AACA,eAAeG,aAAf,CAA6BC,OAA7B,EAAsCC,GAAtC,EAA2CC,OAA3C,EAAoD;AAClD,MAAIA,OAAO,IAAIA,OAAO,CAACC,MAAnB,IAA6BD,OAAO,CAACC,MAAR,CAAeC,OAAhD,EAAyD;AACvD,UAAMP,gBAAgB,CAAC,SAAD,CAAhB,CAA4B,IAAIQ,KAAJ,CAAU,iBAAV,CAA5B,EAA0D,aAA1D,EAAyE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAzE,CAAN;AACD;;AACDR,EAAAA,GAAG,CAAE,wBAAwBG,GAAK,EAA/B,CAAH;AACA,QAAMD,OAAO,CAACO,IAAR,CAAaC,SAAb,CAAuBC,GAAvB,CAA2BjB,KAAK,CAACkB,YAAjC,EAA+CT,GAAG,CAACU,KAAnD,CAAN;AACA,SAAOV,GAAP;AACD;;AAEDb,OAAO,CAACW,aAAR,GAAwBA,aAAxB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar debug = require('debug');\nvar utils = require('../../../utils.js');\nvar errCode = require('err-code');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nconst log = debug__default[\"default\"]('ipfs:mfs:utils:update-mfs-root');\nasync function updateMfsRoot(context, cid, options) {\n  if (options && options.signal && options.signal.aborted) {\n    throw errCode__default[\"default\"](new Error('Request aborted'), 'ERR_ABORTED', { name: 'Aborted' });\n  }\n  log(`New MFS root will be ${ cid }`);\n  await context.repo.datastore.put(utils.MFS_ROOT_KEY, cid.bytes);\n  return cid;\n}\n\nexports.updateMfsRoot = updateMfsRoot;\n"]},"metadata":{},"sourceType":"script"}