{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar getDefaultConfig = require('ipfs-core-config/config');\n\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\n\nvar multiaddr = require('multiaddr');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar getDefaultConfig__default = /*#__PURE__*/_interopDefaultLegacy(getDefaultConfig);\n\nfunction createReset(_ref) {\n  let {\n    repo\n  } = _ref;\n\n  async function reset() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const config = await repo.config.getAll(options);\n    config.Bootstrap = getDefaultConfig__default[\"default\"]().Bootstrap;\n    await repo.config.replace(config);\n    return {\n      Peers: getDefaultConfig__default[\"default\"]().Bootstrap.map(ma => new multiaddr.Multiaddr(ma))\n    };\n  }\n\n  return withTimeoutOption.withTimeoutOption(reset);\n}\n\nexports.createReset = createReset;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-core/cjs/src/components/bootstrap/reset.js"],"names":["Object","defineProperty","exports","value","getDefaultConfig","require","withTimeoutOption","multiaddr","_interopDefaultLegacy","e","getDefaultConfig__default","createReset","repo","reset","options","config","getAll","Bootstrap","replace","Peers","map","ma","Multiaddr"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,gBAAgB,GAAGC,OAAO,CAAC,yBAAD,CAA9B;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,qCAAD,CAA/B;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAvB;;AAEA,SAASG,qBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAOA,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAlB,IAA8B,aAAaA,CAA3C,GAA+CA,CAA/C,GAAmD;AAAE,eAAWA;AAAb,GAA1D;AAA6E;;AAElH,IAAIC,yBAAyB,GAAG,aAAaF,qBAAqB,CAACJ,gBAAD,CAAlE;;AAEA,SAASO,WAAT,OAA6B;AAAA,MAAR;AAACC,IAAAA;AAAD,GAAQ;;AAC3B,iBAAeC,KAAf,GAAmC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACjC,UAAMC,MAAM,GAAG,MAAMH,IAAI,CAACG,MAAL,CAAYC,MAAZ,CAAmBF,OAAnB,CAArB;AACAC,IAAAA,MAAM,CAACE,SAAP,GAAmBP,yBAAyB,CAAC,SAAD,CAAzB,GAAuCO,SAA1D;AACA,UAAML,IAAI,CAACG,MAAL,CAAYG,OAAZ,CAAoBH,MAApB,CAAN;AACA,WAAO;AAAEI,MAAAA,KAAK,EAAET,yBAAyB,CAAC,SAAD,CAAzB,GAAuCO,SAAvC,CAAiDG,GAAjD,CAAqDC,EAAE,IAAI,IAAId,SAAS,CAACe,SAAd,CAAwBD,EAAxB,CAA3D;AAAT,KAAP;AACD;;AACD,SAAOf,iBAAiB,CAACA,iBAAlB,CAAoCO,KAApC,CAAP;AACD;;AAEDX,OAAO,CAACS,WAAR,GAAsBA,WAAtB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar getDefaultConfig = require('ipfs-core-config/config');\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\nvar multiaddr = require('multiaddr');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar getDefaultConfig__default = /*#__PURE__*/_interopDefaultLegacy(getDefaultConfig);\n\nfunction createReset({repo}) {\n  async function reset(options = {}) {\n    const config = await repo.config.getAll(options);\n    config.Bootstrap = getDefaultConfig__default[\"default\"]().Bootstrap;\n    await repo.config.replace(config);\n    return { Peers: getDefaultConfig__default[\"default\"]().Bootstrap.map(ma => new multiaddr.Multiaddr(ma)) };\n  }\n  return withTimeoutOption.withTimeoutOption(reset);\n}\n\nexports.createReset = createReset;\n"]},"metadata":{},"sourceType":"script"}