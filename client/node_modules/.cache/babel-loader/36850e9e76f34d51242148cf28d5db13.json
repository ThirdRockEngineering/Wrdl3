{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar base = require('./base.js');\n\nvar map = require('it-map');\n\nvar itPipe = require('it-pipe');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar map__default = /*#__PURE__*/_interopDefaultLegacy(map);\n\nclass KeyTransformDatastore extends base.BaseDatastore {\n  constructor(child, transform) {\n    super();\n    this.child = child;\n    this.transform = transform;\n  }\n\n  open() {\n    return this.child.open();\n  }\n\n  put(key, val, options) {\n    return this.child.put(this.transform.convert(key), val, options);\n  }\n\n  get(key, options) {\n    return this.child.get(this.transform.convert(key), options);\n  }\n\n  has(key, options) {\n    return this.child.has(this.transform.convert(key), options);\n  }\n\n  delete(key, options) {\n    return this.child.delete(this.transform.convert(key), options);\n  }\n\n  async *putMany(source) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const transform = this.transform;\n    const child = this.child;\n    yield* itPipe.pipe(source, async function* (source) {\n      yield* map__default[\"default\"](source, _ref => {\n        let {\n          key,\n          value\n        } = _ref;\n        return {\n          key: transform.convert(key),\n          value\n        };\n      });\n    }, async function* (source) {\n      yield* child.putMany(source, options);\n    }, async function* (source) {\n      yield* map__default[\"default\"](source, _ref2 => {\n        let {\n          key,\n          value\n        } = _ref2;\n        return {\n          key: transform.invert(key),\n          value\n        };\n      });\n    });\n  }\n\n  async *getMany(source) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const transform = this.transform;\n    const child = this.child;\n    yield* itPipe.pipe(source, async function* (source) {\n      yield* map__default[\"default\"](source, key => transform.convert(key));\n    }, async function* (source) {\n      yield* child.getMany(source, options);\n    });\n  }\n\n  async *deleteMany(source) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const transform = this.transform;\n    const child = this.child;\n    yield* itPipe.pipe(source, async function* (source) {\n      yield* map__default[\"default\"](source, key => transform.convert(key));\n    }, async function* (source) {\n      yield* child.deleteMany(source, options);\n    }, async function* (source) {\n      yield* map__default[\"default\"](source, key => transform.invert(key));\n    });\n  }\n\n  batch() {\n    const b = this.child.batch();\n    return {\n      put: (key, value) => {\n        b.put(this.transform.convert(key), value);\n      },\n      delete: key => {\n        b.delete(this.transform.convert(key));\n      },\n      commit: options => {\n        return b.commit(options);\n      }\n    };\n  }\n\n  query(q, options) {\n    const query = { ...q\n    };\n    query.filters = (query.filters || []).map(filter => {\n      return _ref3 => {\n        let {\n          key,\n          value\n        } = _ref3;\n        return filter({\n          key: this.transform.convert(key),\n          value\n        });\n      };\n    });\n    const {\n      prefix\n    } = q;\n\n    if (prefix != null && prefix !== '/') {\n      delete query.prefix;\n      query.filters.push(_ref4 => {\n        let {\n          key\n        } = _ref4;\n        return this.transform.invert(key).toString().startsWith(prefix);\n      });\n    }\n\n    if (query.orders) {\n      query.orders = query.orders.map(order => {\n        return (a, b) => order({\n          key: this.transform.invert(a.key),\n          value: a.value\n        }, {\n          key: this.transform.invert(b.key),\n          value: b.value\n        });\n      });\n    }\n\n    return map__default[\"default\"](this.child.query(query, options), _ref5 => {\n      let {\n        key,\n        value\n      } = _ref5;\n      return {\n        key: this.transform.invert(key),\n        value\n      };\n    });\n  }\n\n  queryKeys(q, options) {\n    const query = { ...q\n    };\n    query.filters = (query.filters || []).map(filter => {\n      return key => filter(this.transform.convert(key));\n    });\n    const {\n      prefix\n    } = q;\n\n    if (prefix != null && prefix !== '/') {\n      delete query.prefix;\n      query.filters.push(key => {\n        return this.transform.invert(key).toString().startsWith(prefix);\n      });\n    }\n\n    if (query.orders) {\n      query.orders = query.orders.map(order => {\n        return (a, b) => order(this.transform.invert(a), this.transform.invert(b));\n      });\n    }\n\n    return map__default[\"default\"](this.child.queryKeys(query, options), key => {\n      return this.transform.invert(key);\n    });\n  }\n\n  close() {\n    return this.child.close();\n  }\n\n}\n\nexports.KeyTransformDatastore = KeyTransformDatastore;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/datastore-core/cjs/src/keytransform.js"],"names":["Object","defineProperty","exports","value","base","require","map","itPipe","_interopDefaultLegacy","e","map__default","KeyTransformDatastore","BaseDatastore","constructor","child","transform","open","put","key","val","options","convert","get","has","delete","putMany","source","pipe","invert","getMany","deleteMany","batch","b","commit","query","q","filters","filter","prefix","push","toString","startsWith","orders","order","a","queryKeys","close"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\nvar map = require('it-map');\nvar itPipe = require('it-pipe');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar map__default = /*#__PURE__*/_interopDefaultLegacy(map);\n\nclass KeyTransformDatastore extends base.BaseDatastore {\n  constructor(child, transform) {\n    super();\n    this.child = child;\n    this.transform = transform;\n  }\n  open() {\n    return this.child.open();\n  }\n  put(key, val, options) {\n    return this.child.put(this.transform.convert(key), val, options);\n  }\n  get(key, options) {\n    return this.child.get(this.transform.convert(key), options);\n  }\n  has(key, options) {\n    return this.child.has(this.transform.convert(key), options);\n  }\n  delete(key, options) {\n    return this.child.delete(this.transform.convert(key), options);\n  }\n  async *putMany(source, options = {}) {\n    const transform = this.transform;\n    const child = this.child;\n    yield* itPipe.pipe(source, async function* (source) {\n      yield* map__default[\"default\"](source, ({key, value}) => ({\n        key: transform.convert(key),\n        value\n      }));\n    }, async function* (source) {\n      yield* child.putMany(source, options);\n    }, async function* (source) {\n      yield* map__default[\"default\"](source, ({key, value}) => ({\n        key: transform.invert(key),\n        value\n      }));\n    });\n  }\n  async *getMany(source, options = {}) {\n    const transform = this.transform;\n    const child = this.child;\n    yield* itPipe.pipe(source, async function* (source) {\n      yield* map__default[\"default\"](source, key => transform.convert(key));\n    }, async function* (source) {\n      yield* child.getMany(source, options);\n    });\n  }\n  async *deleteMany(source, options = {}) {\n    const transform = this.transform;\n    const child = this.child;\n    yield* itPipe.pipe(source, async function* (source) {\n      yield* map__default[\"default\"](source, key => transform.convert(key));\n    }, async function* (source) {\n      yield* child.deleteMany(source, options);\n    }, async function* (source) {\n      yield* map__default[\"default\"](source, key => transform.invert(key));\n    });\n  }\n  batch() {\n    const b = this.child.batch();\n    return {\n      put: (key, value) => {\n        b.put(this.transform.convert(key), value);\n      },\n      delete: key => {\n        b.delete(this.transform.convert(key));\n      },\n      commit: options => {\n        return b.commit(options);\n      }\n    };\n  }\n  query(q, options) {\n    const query = { ...q };\n    query.filters = (query.filters || []).map(filter => {\n      return ({key, value}) => filter({\n        key: this.transform.convert(key),\n        value\n      });\n    });\n    const {prefix} = q;\n    if (prefix != null && prefix !== '/') {\n      delete query.prefix;\n      query.filters.push(({key}) => {\n        return this.transform.invert(key).toString().startsWith(prefix);\n      });\n    }\n    if (query.orders) {\n      query.orders = query.orders.map(order => {\n        return (a, b) => order({\n          key: this.transform.invert(a.key),\n          value: a.value\n        }, {\n          key: this.transform.invert(b.key),\n          value: b.value\n        });\n      });\n    }\n    return map__default[\"default\"](this.child.query(query, options), ({key, value}) => {\n      return {\n        key: this.transform.invert(key),\n        value\n      };\n    });\n  }\n  queryKeys(q, options) {\n    const query = { ...q };\n    query.filters = (query.filters || []).map(filter => {\n      return key => filter(this.transform.convert(key));\n    });\n    const {prefix} = q;\n    if (prefix != null && prefix !== '/') {\n      delete query.prefix;\n      query.filters.push(key => {\n        return this.transform.invert(key).toString().startsWith(prefix);\n      });\n    }\n    if (query.orders) {\n      query.orders = query.orders.map(order => {\n        return (a, b) => order(this.transform.invert(a), this.transform.invert(b));\n      });\n    }\n    return map__default[\"default\"](this.child.queryKeys(query, options), key => {\n      return this.transform.invert(key);\n    });\n  }\n  close() {\n    return this.child.close();\n  }\n}\n\nexports.KeyTransformDatastore = KeyTransformDatastore;\n"]},"metadata":{},"sourceType":"script"}