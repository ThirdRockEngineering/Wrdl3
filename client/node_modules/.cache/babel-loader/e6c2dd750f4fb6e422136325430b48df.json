{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar utils = require('./utils.js');\n\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\n\nfunction createStat(_ref) {\n  let {\n    repo,\n    preload\n  } = _ref;\n\n  async function stat(cid) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    cid = utils.cleanCid(cid);\n\n    if (options.preload !== false) {\n      preload(cid);\n    }\n\n    const block = await repo.blocks.get(cid);\n    return {\n      cid,\n      size: block.length\n    };\n  }\n\n  return withTimeoutOption.withTimeoutOption(stat);\n}\n\nexports.createStat = createStat;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-core/cjs/src/components/block/stat.js"],"names":["Object","defineProperty","exports","value","utils","require","withTimeoutOption","createStat","repo","preload","stat","cid","options","cleanCid","block","blocks","get","size","length"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,YAAD,CAAnB;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,qCAAD,CAA/B;;AAEA,SAASE,UAAT,OAAqC;AAAA,MAAjB;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAiB;;AACnC,iBAAeC,IAAf,CAAoBC,GAApB,EAAuC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACrCD,IAAAA,GAAG,GAAGP,KAAK,CAACS,QAAN,CAAeF,GAAf,CAAN;;AACA,QAAIC,OAAO,CAACH,OAAR,KAAoB,KAAxB,EAA+B;AAC7BA,MAAAA,OAAO,CAACE,GAAD,CAAP;AACD;;AACD,UAAMG,KAAK,GAAG,MAAMN,IAAI,CAACO,MAAL,CAAYC,GAAZ,CAAgBL,GAAhB,CAApB;AACA,WAAO;AACLA,MAAAA,GADK;AAELM,MAAAA,IAAI,EAAEH,KAAK,CAACI;AAFP,KAAP;AAID;;AACD,SAAOZ,iBAAiB,CAACA,iBAAlB,CAAoCI,IAApC,CAAP;AACD;;AAEDR,OAAO,CAACK,UAAR,GAAqBA,UAArB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('./utils.js');\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\n\nfunction createStat({repo, preload}) {\n  async function stat(cid, options = {}) {\n    cid = utils.cleanCid(cid);\n    if (options.preload !== false) {\n      preload(cid);\n    }\n    const block = await repo.blocks.get(cid);\n    return {\n      cid,\n      size: block.length\n    };\n  }\n  return withTimeoutOption.withTimeoutOption(stat);\n}\n\nexports.createStat = createStat;\n"]},"metadata":{},"sourceType":"script"}