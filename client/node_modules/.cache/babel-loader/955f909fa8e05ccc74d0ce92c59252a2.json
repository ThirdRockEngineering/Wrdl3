{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar isIpfs = require('is-ipfs');\n\nvar toCidAndPath = require('ipfs-core-utils/to-cid-and-path');\n\nvar drain = require('it-drain');\n\nvar utils = require('../../utils.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar isIpfs__default = /*#__PURE__*/_interopDefaultLegacy(isIpfs);\n\nvar drain__default = /*#__PURE__*/_interopDefaultLegacy(drain);\n\nasync function resolvePath(_ref, name, options) {\n  let {\n    ipns,\n    repo,\n    codecs\n  } = _ref;\n\n  if (isIpfs__default[\"default\"].ipnsPath(name)) {\n    return ipns.resolve(name);\n  }\n\n  const {\n    cid,\n    path\n  } = toCidAndPath.toCidAndPath(name);\n  await drain__default[\"default\"](utils.resolve(cid, path || '', codecs, repo, options));\n}\n\nexports.resolvePath = resolvePath;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-core/cjs/src/components/name/utils.js"],"names":["Object","defineProperty","exports","value","isIpfs","require","toCidAndPath","drain","utils","_interopDefaultLegacy","e","isIpfs__default","drain__default","resolvePath","name","options","ipns","repo","codecs","ipnsPath","resolve","cid","path"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,iCAAD,CAA1B;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,UAAD,CAAnB;;AACA,IAAIG,KAAK,GAAGH,OAAO,CAAC,gBAAD,CAAnB;;AAEA,SAASI,qBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAOA,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAlB,IAA8B,aAAaA,CAA3C,GAA+CA,CAA/C,GAAmD;AAAE,eAAWA;AAAb,GAA1D;AAA6E;;AAElH,IAAIC,eAAe,GAAG,aAAaF,qBAAqB,CAACL,MAAD,CAAxD;;AACA,IAAIQ,cAAc,GAAG,aAAaH,qBAAqB,CAACF,KAAD,CAAvD;;AAEA,eAAeM,WAAf,OAAiDC,IAAjD,EAAuDC,OAAvD,EAAgE;AAAA,MAArC;AAACC,IAAAA,IAAD;AAAOC,IAAAA,IAAP;AAAaC,IAAAA;AAAb,GAAqC;;AAC9D,MAAIP,eAAe,CAAC,SAAD,CAAf,CAA2BQ,QAA3B,CAAoCL,IAApC,CAAJ,EAA+C;AAC7C,WAAOE,IAAI,CAACI,OAAL,CAAaN,IAAb,CAAP;AACD;;AACD,QAAM;AAACO,IAAAA,GAAD;AAAMC,IAAAA;AAAN,MAAchB,YAAY,CAACA,YAAb,CAA0BQ,IAA1B,CAApB;AACA,QAAMF,cAAc,CAAC,SAAD,CAAd,CAA0BJ,KAAK,CAACY,OAAN,CAAcC,GAAd,EAAmBC,IAAI,IAAI,EAA3B,EAA+BJ,MAA/B,EAAuCD,IAAvC,EAA6CF,OAA7C,CAA1B,CAAN;AACD;;AAEDb,OAAO,CAACW,WAAR,GAAsBA,WAAtB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar isIpfs = require('is-ipfs');\nvar toCidAndPath = require('ipfs-core-utils/to-cid-and-path');\nvar drain = require('it-drain');\nvar utils = require('../../utils.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar isIpfs__default = /*#__PURE__*/_interopDefaultLegacy(isIpfs);\nvar drain__default = /*#__PURE__*/_interopDefaultLegacy(drain);\n\nasync function resolvePath({ipns, repo, codecs}, name, options) {\n  if (isIpfs__default[\"default\"].ipnsPath(name)) {\n    return ipns.resolve(name);\n  }\n  const {cid, path} = toCidAndPath.toCidAndPath(name);\n  await drain__default[\"default\"](utils.resolve(cid, path || '', codecs, repo, options));\n}\n\nexports.resolvePath = resolvePath;\n"]},"metadata":{},"sourceType":"script"}