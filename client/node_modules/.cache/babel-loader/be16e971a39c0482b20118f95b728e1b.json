{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\n\nvar errCode = require('err-code');\n\nvar errors = require('../errors.js');\n\nvar get = require('dlv');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nvar get__default = /*#__PURE__*/_interopDefaultLegacy(get);\n\nfunction createPubsub(_ref) {\n  let {\n    network,\n    config\n  } = _ref;\n  const isEnabled = get__default[\"default\"](config || {}, 'Pubsub.Enabled', true);\n  return {\n    subscribe: isEnabled ? withTimeoutOption.withTimeoutOption(subscribe) : notEnabled,\n    unsubscribe: isEnabled ? withTimeoutOption.withTimeoutOption(unsubscribe) : notEnabled,\n    publish: isEnabled ? withTimeoutOption.withTimeoutOption(publish) : notEnabled,\n    ls: isEnabled ? withTimeoutOption.withTimeoutOption(ls) : notEnabled,\n    peers: isEnabled ? withTimeoutOption.withTimeoutOption(peers) : notEnabled\n  };\n\n  async function subscribe(topic, handler) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const {\n      libp2p\n    } = await network.use(options);\n    return libp2p.pubsub.subscribe(topic, handler, options);\n  }\n\n  async function unsubscribe(topic, handler) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const {\n      libp2p\n    } = await network.use(options);\n    libp2p.pubsub.unsubscribe(topic, handler, options);\n  }\n\n  async function publish(topic, data) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const {\n      libp2p\n    } = await network.use(options);\n\n    if (!data) {\n      throw errCode__default[\"default\"](new Error('argument \"data\" is required'), 'ERR_ARG_REQUIRED');\n    }\n\n    await libp2p.pubsub.publish(topic, data);\n  }\n\n  async function ls() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      libp2p\n    } = await network.use(options);\n    return libp2p.pubsub.getTopics();\n  }\n\n  async function peers(topic) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      libp2p\n    } = await network.use(options);\n    return libp2p.pubsub.getSubscribers(topic);\n  }\n}\n\nconst notEnabled = async () => {\n  throw new errors.NotEnabledError('pubsub not enabled');\n};\n\nexports.createPubsub = createPubsub;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-core/cjs/src/components/pubsub.js"],"names":["Object","defineProperty","exports","value","withTimeoutOption","require","errCode","errors","get","_interopDefaultLegacy","e","errCode__default","get__default","createPubsub","network","config","isEnabled","subscribe","notEnabled","unsubscribe","publish","ls","peers","topic","handler","options","libp2p","use","pubsub","data","Error","getTopics","getSubscribers","NotEnabledError"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\nvar errCode = require('err-code');\nvar errors = require('../errors.js');\nvar get = require('dlv');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar get__default = /*#__PURE__*/_interopDefaultLegacy(get);\n\nfunction createPubsub({network, config}) {\n  const isEnabled = get__default[\"default\"](config || {}, 'Pubsub.Enabled', true);\n  return {\n    subscribe: isEnabled ? withTimeoutOption.withTimeoutOption(subscribe) : notEnabled,\n    unsubscribe: isEnabled ? withTimeoutOption.withTimeoutOption(unsubscribe) : notEnabled,\n    publish: isEnabled ? withTimeoutOption.withTimeoutOption(publish) : notEnabled,\n    ls: isEnabled ? withTimeoutOption.withTimeoutOption(ls) : notEnabled,\n    peers: isEnabled ? withTimeoutOption.withTimeoutOption(peers) : notEnabled\n  };\n  async function subscribe(topic, handler, options = {}) {\n    const {libp2p} = await network.use(options);\n    return libp2p.pubsub.subscribe(topic, handler, options);\n  }\n  async function unsubscribe(topic, handler, options = {}) {\n    const {libp2p} = await network.use(options);\n    libp2p.pubsub.unsubscribe(topic, handler, options);\n  }\n  async function publish(topic, data, options = {}) {\n    const {libp2p} = await network.use(options);\n    if (!data) {\n      throw errCode__default[\"default\"](new Error('argument \"data\" is required'), 'ERR_ARG_REQUIRED');\n    }\n    await libp2p.pubsub.publish(topic, data);\n  }\n  async function ls(options = {}) {\n    const {libp2p} = await network.use(options);\n    return libp2p.pubsub.getTopics();\n  }\n  async function peers(topic, options = {}) {\n    const {libp2p} = await network.use(options);\n    return libp2p.pubsub.getSubscribers(topic);\n  }\n}\nconst notEnabled = async () => {\n  throw new errors.NotEnabledError('pubsub not enabled');\n};\n\nexports.createPubsub = createPubsub;\n"]},"metadata":{},"sourceType":"script"}