{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar tiered = require('datastore-core/tiered');\n\nvar get = require('dlv');\n\nvar pubsubDatastore = require('./pubsub-datastore.js');\n\nvar offlineDatastore = require('./offline-datastore.js');\n\nvar dhtDatastore = require('./dht-datastore.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar get__default = /*#__PURE__*/_interopDefaultLegacy(get);\n\nfunction createRouting(_ref) {\n  let {\n    libp2p,\n    repo,\n    peerId,\n    options\n  } = _ref;\n  const ipnsStores = [];\n  let pubsubDs;\n\n  if (get__default[\"default\"](options, 'EXPERIMENTAL.ipnsPubsub', false)) {\n    const pubsub = libp2p.pubsub;\n    const localDatastore = repo.datastore;\n    pubsubDs = new pubsubDatastore.IpnsPubsubDatastore(pubsub, localDatastore, peerId);\n    ipnsStores.push(pubsubDs);\n  }\n\n  if (!get__default[\"default\"](options, 'offline', false) && libp2p._config && libp2p._config.dht && libp2p._config.dht.enabled) {\n    ipnsStores.push(new dhtDatastore.DHTDatastore(libp2p._dht));\n  }\n\n  if (get__default[\"default\"](options, 'offline', false) || ipnsStores.length === 0) {\n    const offlineDatastore$1 = new offlineDatastore.OfflineDatastore(repo);\n    ipnsStores.push(offlineDatastore$1);\n  }\n\n  return new tiered.TieredDatastore(ipnsStores);\n}\n\nexports.createRouting = createRouting;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-core/cjs/src/ipns/routing/config.js"],"names":["Object","defineProperty","exports","value","tiered","require","get","pubsubDatastore","offlineDatastore","dhtDatastore","_interopDefaultLegacy","e","get__default","createRouting","libp2p","repo","peerId","options","ipnsStores","pubsubDs","pubsub","localDatastore","datastore","IpnsPubsubDatastore","push","_config","dht","enabled","DHTDatastore","_dht","length","offlineDatastore$1","OfflineDatastore","TieredDatastore"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAApB;;AACA,IAAIC,GAAG,GAAGD,OAAO,CAAC,KAAD,CAAjB;;AACA,IAAIE,eAAe,GAAGF,OAAO,CAAC,uBAAD,CAA7B;;AACA,IAAIG,gBAAgB,GAAGH,OAAO,CAAC,wBAAD,CAA9B;;AACA,IAAII,YAAY,GAAGJ,OAAO,CAAC,oBAAD,CAA1B;;AAEA,SAASK,qBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAOA,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAlB,IAA8B,aAAaA,CAA3C,GAA+CA,CAA/C,GAAmD;AAAE,eAAWA;AAAb,GAA1D;AAA6E;;AAElH,IAAIC,YAAY,GAAG,aAAaF,qBAAqB,CAACJ,GAAD,CAArD;;AAEA,SAASO,aAAT,OAAwD;AAAA,MAAjC;AAACC,IAAAA,MAAD;AAASC,IAAAA,IAAT;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA;AAAvB,GAAiC;AACtD,QAAMC,UAAU,GAAG,EAAnB;AACA,MAAIC,QAAJ;;AACA,MAAIP,YAAY,CAAC,SAAD,CAAZ,CAAwBK,OAAxB,EAAiC,yBAAjC,EAA4D,KAA5D,CAAJ,EAAwE;AACtE,UAAMG,MAAM,GAAGN,MAAM,CAACM,MAAtB;AACA,UAAMC,cAAc,GAAGN,IAAI,CAACO,SAA5B;AACAH,IAAAA,QAAQ,GAAG,IAAIZ,eAAe,CAACgB,mBAApB,CAAwCH,MAAxC,EAAgDC,cAAhD,EAAgEL,MAAhE,CAAX;AACAE,IAAAA,UAAU,CAACM,IAAX,CAAgBL,QAAhB;AACD;;AACD,MAAI,CAACP,YAAY,CAAC,SAAD,CAAZ,CAAwBK,OAAxB,EAAiC,SAAjC,EAA4C,KAA5C,CAAD,IAAuDH,MAAM,CAACW,OAA9D,IAAyEX,MAAM,CAACW,OAAP,CAAeC,GAAxF,IAA+FZ,MAAM,CAACW,OAAP,CAAeC,GAAf,CAAmBC,OAAtH,EAA+H;AAC7HT,IAAAA,UAAU,CAACM,IAAX,CAAgB,IAAIf,YAAY,CAACmB,YAAjB,CAA8Bd,MAAM,CAACe,IAArC,CAAhB;AACD;;AACD,MAAIjB,YAAY,CAAC,SAAD,CAAZ,CAAwBK,OAAxB,EAAiC,SAAjC,EAA4C,KAA5C,KAAsDC,UAAU,CAACY,MAAX,KAAsB,CAAhF,EAAmF;AACjF,UAAMC,kBAAkB,GAAG,IAAIvB,gBAAgB,CAACwB,gBAArB,CAAsCjB,IAAtC,CAA3B;AACAG,IAAAA,UAAU,CAACM,IAAX,CAAgBO,kBAAhB;AACD;;AACD,SAAO,IAAI3B,MAAM,CAAC6B,eAAX,CAA2Bf,UAA3B,CAAP;AACD;;AAEDhB,OAAO,CAACW,aAAR,GAAwBA,aAAxB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tiered = require('datastore-core/tiered');\nvar get = require('dlv');\nvar pubsubDatastore = require('./pubsub-datastore.js');\nvar offlineDatastore = require('./offline-datastore.js');\nvar dhtDatastore = require('./dht-datastore.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar get__default = /*#__PURE__*/_interopDefaultLegacy(get);\n\nfunction createRouting({libp2p, repo, peerId, options}) {\n  const ipnsStores = [];\n  let pubsubDs;\n  if (get__default[\"default\"](options, 'EXPERIMENTAL.ipnsPubsub', false)) {\n    const pubsub = libp2p.pubsub;\n    const localDatastore = repo.datastore;\n    pubsubDs = new pubsubDatastore.IpnsPubsubDatastore(pubsub, localDatastore, peerId);\n    ipnsStores.push(pubsubDs);\n  }\n  if (!get__default[\"default\"](options, 'offline', false) && libp2p._config && libp2p._config.dht && libp2p._config.dht.enabled) {\n    ipnsStores.push(new dhtDatastore.DHTDatastore(libp2p._dht));\n  }\n  if (get__default[\"default\"](options, 'offline', false) || ipnsStores.length === 0) {\n    const offlineDatastore$1 = new offlineDatastore.OfflineDatastore(repo);\n    ipnsStores.push(offlineDatastore$1);\n  }\n  return new tiered.TieredDatastore(ipnsStores);\n}\n\nexports.createRouting = createRouting;\n"]},"metadata":{},"sourceType":"script"}