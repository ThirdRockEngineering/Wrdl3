{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar init = require('./init.js');\n\nvar errors = require('../errors.js');\n\nvar utils = require('../utils.js');\n\nvar fromString = require('uint8arrays/from-string');\n\nvar toString = require('uint8arrays/to-string');\n\nasync function getVersion(backends) {\n  if (!(await init.isRepoInitialized(backends))) {\n    throw new errors.NotInitializedRepoError('Repo is not initialized!');\n  }\n\n  const store = backends.root;\n  await store.open();\n\n  try {\n    return parseInt(toString.toString(await store.get(utils.VERSION_KEY)));\n  } finally {\n    await store.close();\n  }\n}\n\nasync function setVersion(version, backends) {\n  if (!backends) {\n    throw new errors.MissingRepoOptionsError('Please pass repo options when trying to open a repo');\n  }\n\n  const store = backends.root;\n  await store.open();\n  await store.put(utils.VERSION_KEY, fromString.fromString(String(version)));\n  await store.close();\n}\n\nexports.getVersion = getVersion;\nexports.setVersion = setVersion;","map":{"version":3,"sources":["/Users/emilsharafutdinov/Desktop/Work/SR3/Wrdl3/client/node_modules/ipfs-repo-migrations/cjs/src/repo/version.js"],"names":["Object","defineProperty","exports","value","init","require","errors","utils","fromString","toString","getVersion","backends","isRepoInitialized","NotInitializedRepoError","store","root","open","parseInt","get","VERSION_KEY","close","setVersion","version","MissingRepoOptionsError","put","String"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAAC,WAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,cAAD,CAApB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,aAAD,CAAnB;;AACA,IAAIG,UAAU,GAAGH,OAAO,CAAC,yBAAD,CAAxB;;AACA,IAAII,QAAQ,GAAGJ,OAAO,CAAC,uBAAD,CAAtB;;AAEA,eAAeK,UAAf,CAA0BC,QAA1B,EAAoC;AAClC,MAAI,EAAC,MAAMP,IAAI,CAACQ,iBAAL,CAAuBD,QAAvB,CAAP,CAAJ,EAA6C;AAC3C,UAAM,IAAIL,MAAM,CAACO,uBAAX,CAAmC,0BAAnC,CAAN;AACD;;AACD,QAAMC,KAAK,GAAGH,QAAQ,CAACI,IAAvB;AACA,QAAMD,KAAK,CAACE,IAAN,EAAN;;AACA,MAAI;AACF,WAAOC,QAAQ,CAACR,QAAQ,CAACA,QAAT,CAAkB,MAAMK,KAAK,CAACI,GAAN,CAAUX,KAAK,CAACY,WAAhB,CAAxB,CAAD,CAAf;AACD,GAFD,SAEU;AACR,UAAML,KAAK,CAACM,KAAN,EAAN;AACD;AACF;;AACD,eAAeC,UAAf,CAA0BC,OAA1B,EAAmCX,QAAnC,EAA6C;AAC3C,MAAI,CAACA,QAAL,EAAe;AACb,UAAM,IAAIL,MAAM,CAACiB,uBAAX,CAAmC,qDAAnC,CAAN;AACD;;AACD,QAAMT,KAAK,GAAGH,QAAQ,CAACI,IAAvB;AACA,QAAMD,KAAK,CAACE,IAAN,EAAN;AACA,QAAMF,KAAK,CAACU,GAAN,CAAUjB,KAAK,CAACY,WAAhB,EAA6BX,UAAU,CAACA,UAAX,CAAsBiB,MAAM,CAACH,OAAD,CAA5B,CAA7B,CAAN;AACA,QAAMR,KAAK,CAACM,KAAN,EAAN;AACD;;AAEDlB,OAAO,CAACQ,UAAR,GAAqBA,UAArB;AACAR,OAAO,CAACmB,UAAR,GAAqBA,UAArB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar init = require('./init.js');\nvar errors = require('../errors.js');\nvar utils = require('../utils.js');\nvar fromString = require('uint8arrays/from-string');\nvar toString = require('uint8arrays/to-string');\n\nasync function getVersion(backends) {\n  if (!await init.isRepoInitialized(backends)) {\n    throw new errors.NotInitializedRepoError('Repo is not initialized!');\n  }\n  const store = backends.root;\n  await store.open();\n  try {\n    return parseInt(toString.toString(await store.get(utils.VERSION_KEY)));\n  } finally {\n    await store.close();\n  }\n}\nasync function setVersion(version, backends) {\n  if (!backends) {\n    throw new errors.MissingRepoOptionsError('Please pass repo options when trying to open a repo');\n  }\n  const store = backends.root;\n  await store.open();\n  await store.put(utils.VERSION_KEY, fromString.fromString(String(version)));\n  await store.close();\n}\n\nexports.getVersion = getVersion;\nexports.setVersion = setVersion;\n"]},"metadata":{},"sourceType":"script"}